
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Sat Dec  3 16:54:15 2022
// Netlist written on Sat Dec  3 16:54:23 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( pwm, clk, sck, sdi, ce );
  input  clk, sck, sdi, ce;
  output pwm;
  wire   \freqer.n133[26] , \freqer.n133[25] , \freqer.n631 , 
         \freqer.counter[26] , \freqer.n154 , \freqer.counter[25] , 
         \freqer.clkStrobe , int_osc, \freqer.n156 , \freqer.n133[24] , 
         \freqer.n133[23] , \freqer.n628 , \freqer.counter[24] , \freqer.n152 , 
         \freqer.counter[23] , \freqer.n133[22] , \freqer.n133[21] , 
         \freqer.n625 , \freqer.counter[22] , \freqer.n150 , 
         \freqer.counter[21] , \freqer.n133[20] , \freqer.n133[19] , 
         \freqer.n622 , \freqer.counter[20] , \freqer.n148 , 
         \freqer.counter[19] , \freqer.n133[18] , \freqer.n133[17] , 
         \freqer.n619 , \freqer.counter[18] , \freqer.n146 , 
         \freqer.counter[17] , \freqer.n133[16] , \freqer.n133[15] , 
         \freqer.n616 , \freqer.counter[16] , \freqer.n144 , 
         \freqer.counter[15] , \freqer.n133[14] , \freqer.n133[13] , 
         \freqer.n613 , \freqer.counter[14] , \freqer.n142 , 
         \freqer.counter[13] , \freqer.n133[31] , \freqer.n640 , \freqer.n160 , 
         \freqer.counter[31] , \freqer.n133[30] , \freqer.n133[29] , 
         \freqer.n637 , \freqer.counter[30] , \freqer.n158 , 
         \freqer.counter[29] , \freqer.n133[12] , \freqer.n133[11] , 
         \freqer.n610 , \freqer.counter[12] , \freqer.n140 , 
         \freqer.counter[11] , \freqer.n133[10] , \freqer.n133[9] , 
         \freqer.n607 , \freqer.counter[10] , \freqer.n138 , 
         \freqer.counter[9] , \freqer.n133[8] , \freqer.n133[7] , 
         \freqer.n604 , \freqer.counter[8] , \freqer.n136 , 
         \freqer.counter[7] , \freqer.n133[6] , \freqer.n133[5] , 
         \freqer.n601 , \freqer.counter[6] , \freqer.n134 , 
         \freqer.counter[5] , \freqer.n133[4] , \freqer.n133[3] , 
         \freqer.n598 , \freqer.counter[4] , \freqer.n132 , 
         \freqer.counter[3] , \freqer.n133[2] , \freqer.n133[1] , 
         \freqer.n595 , \freqer.counter[2] , \freqer.n130 , 
         \freqer.counter[1] , \freqer.n133[0] , \freqer.n592 , 
         \freqer.counter[0] , VCC_net, \freqer.n133[28] , \freqer.n133[27] , 
         \freqer.n634 , \freqer.counter[28] , \freqer.counter[27] , 
         \freqer.toneFreq_N_65 , \freqer.clkStrobe_N_66 , pwm_c, \freqer.n11 , 
         \freqer.n7 , \freqer.n40 , \freqer.n45 , \freqer.n49 , \freqer.n43 , 
         \freqer.n44 , \freqer.n41 , \freqer.n42 , \freqer.n50 ;

  freqer_SLICE_0 \freqer.SLICE_0 ( .DI1(\freqer.n133[26] ), 
    .DI0(\freqer.n133[25] ), .D1(\freqer.n631 ), .C1(\freqer.counter[26] ), 
    .D0(\freqer.n154 ), .C0(\freqer.counter[25] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n154 ), .CIN1(\freqer.n631 ), 
    .Q0(\freqer.counter[25] ), .Q1(\freqer.counter[26] ), 
    .F0(\freqer.n133[25] ), .F1(\freqer.n133[26] ), .COUT1(\freqer.n156 ), 
    .COUT0(\freqer.n631 ));
  freqer_SLICE_1 \freqer.SLICE_1 ( .DI1(\freqer.n133[24] ), 
    .DI0(\freqer.n133[23] ), .D1(\freqer.n628 ), .C1(\freqer.counter[24] ), 
    .D0(\freqer.n152 ), .C0(\freqer.counter[23] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n152 ), .CIN1(\freqer.n628 ), 
    .Q0(\freqer.counter[23] ), .Q1(\freqer.counter[24] ), 
    .F0(\freqer.n133[23] ), .F1(\freqer.n133[24] ), .COUT1(\freqer.n154 ), 
    .COUT0(\freqer.n628 ));
  freqer_SLICE_2 \freqer.SLICE_2 ( .DI1(\freqer.n133[22] ), 
    .DI0(\freqer.n133[21] ), .D1(\freqer.n625 ), .C1(\freqer.counter[22] ), 
    .D0(\freqer.n150 ), .C0(\freqer.counter[21] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n150 ), .CIN1(\freqer.n625 ), 
    .Q0(\freqer.counter[21] ), .Q1(\freqer.counter[22] ), 
    .F0(\freqer.n133[21] ), .F1(\freqer.n133[22] ), .COUT1(\freqer.n152 ), 
    .COUT0(\freqer.n625 ));
  freqer_SLICE_3 \freqer.SLICE_3 ( .DI1(\freqer.n133[20] ), 
    .DI0(\freqer.n133[19] ), .D1(\freqer.n622 ), .C1(\freqer.counter[20] ), 
    .D0(\freqer.n148 ), .C0(\freqer.counter[19] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n148 ), .CIN1(\freqer.n622 ), 
    .Q0(\freqer.counter[19] ), .Q1(\freqer.counter[20] ), 
    .F0(\freqer.n133[19] ), .F1(\freqer.n133[20] ), .COUT1(\freqer.n150 ), 
    .COUT0(\freqer.n622 ));
  freqer_SLICE_4 \freqer.SLICE_4 ( .DI1(\freqer.n133[18] ), 
    .DI0(\freqer.n133[17] ), .D1(\freqer.n619 ), .C1(\freqer.counter[18] ), 
    .D0(\freqer.n146 ), .C0(\freqer.counter[17] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n146 ), .CIN1(\freqer.n619 ), 
    .Q0(\freqer.counter[17] ), .Q1(\freqer.counter[18] ), 
    .F0(\freqer.n133[17] ), .F1(\freqer.n133[18] ), .COUT1(\freqer.n148 ), 
    .COUT0(\freqer.n619 ));
  freqer_SLICE_5 \freqer.SLICE_5 ( .DI1(\freqer.n133[16] ), 
    .DI0(\freqer.n133[15] ), .D1(\freqer.n616 ), .C1(\freqer.counter[16] ), 
    .D0(\freqer.n144 ), .C0(\freqer.counter[15] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n144 ), .CIN1(\freqer.n616 ), 
    .Q0(\freqer.counter[15] ), .Q1(\freqer.counter[16] ), 
    .F0(\freqer.n133[15] ), .F1(\freqer.n133[16] ), .COUT1(\freqer.n146 ), 
    .COUT0(\freqer.n616 ));
  freqer_SLICE_6 \freqer.SLICE_6 ( .DI1(\freqer.n133[14] ), 
    .DI0(\freqer.n133[13] ), .D1(\freqer.n613 ), .C1(\freqer.counter[14] ), 
    .D0(\freqer.n142 ), .C0(\freqer.counter[13] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n142 ), .CIN1(\freqer.n613 ), 
    .Q0(\freqer.counter[13] ), .Q1(\freqer.counter[14] ), 
    .F0(\freqer.n133[13] ), .F1(\freqer.n133[14] ), .COUT1(\freqer.n144 ), 
    .COUT0(\freqer.n613 ));
  freqer_SLICE_7 \freqer.SLICE_7 ( .DI0(\freqer.n133[31] ), .D1(\freqer.n640 ), 
    .D0(\freqer.n160 ), .C0(\freqer.counter[31] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n160 ), .CIN1(\freqer.n640 ), 
    .Q0(\freqer.counter[31] ), .F0(\freqer.n133[31] ), .COUT0(\freqer.n640 ));
  freqer_SLICE_8 \freqer.SLICE_8 ( .DI1(\freqer.n133[30] ), 
    .DI0(\freqer.n133[29] ), .D1(\freqer.n637 ), .C1(\freqer.counter[30] ), 
    .D0(\freqer.n158 ), .C0(\freqer.counter[29] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n158 ), .CIN1(\freqer.n637 ), 
    .Q0(\freqer.counter[29] ), .Q1(\freqer.counter[30] ), 
    .F0(\freqer.n133[29] ), .F1(\freqer.n133[30] ), .COUT1(\freqer.n160 ), 
    .COUT0(\freqer.n637 ));
  freqer_SLICE_9 \freqer.SLICE_9 ( .DI1(\freqer.n133[12] ), 
    .DI0(\freqer.n133[11] ), .D1(\freqer.n610 ), .C1(\freqer.counter[12] ), 
    .D0(\freqer.n140 ), .C0(\freqer.counter[11] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n140 ), .CIN1(\freqer.n610 ), 
    .Q0(\freqer.counter[11] ), .Q1(\freqer.counter[12] ), 
    .F0(\freqer.n133[11] ), .F1(\freqer.n133[12] ), .COUT1(\freqer.n142 ), 
    .COUT0(\freqer.n610 ));
  freqer_SLICE_10 \freqer.SLICE_10 ( .DI1(\freqer.n133[10] ), 
    .DI0(\freqer.n133[9] ), .D1(\freqer.n607 ), .C1(\freqer.counter[10] ), 
    .D0(\freqer.n138 ), .C0(\freqer.counter[9] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n138 ), .CIN1(\freqer.n607 ), 
    .Q0(\freqer.counter[9] ), .Q1(\freqer.counter[10] ), .F0(\freqer.n133[9] ), 
    .F1(\freqer.n133[10] ), .COUT1(\freqer.n140 ), .COUT0(\freqer.n607 ));
  freqer_SLICE_11 \freqer.SLICE_11 ( .DI1(\freqer.n133[8] ), 
    .DI0(\freqer.n133[7] ), .D1(\freqer.n604 ), .C1(\freqer.counter[8] ), 
    .D0(\freqer.n136 ), .C0(\freqer.counter[7] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n136 ), .CIN1(\freqer.n604 ), 
    .Q0(\freqer.counter[7] ), .Q1(\freqer.counter[8] ), .F0(\freqer.n133[7] ), 
    .F1(\freqer.n133[8] ), .COUT1(\freqer.n138 ), .COUT0(\freqer.n604 ));
  freqer_SLICE_12 \freqer.SLICE_12 ( .DI1(\freqer.n133[6] ), 
    .DI0(\freqer.n133[5] ), .D1(\freqer.n601 ), .C1(\freqer.counter[6] ), 
    .D0(\freqer.n134 ), .C0(\freqer.counter[5] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n134 ), .CIN1(\freqer.n601 ), 
    .Q0(\freqer.counter[5] ), .Q1(\freqer.counter[6] ), .F0(\freqer.n133[5] ), 
    .F1(\freqer.n133[6] ), .COUT1(\freqer.n136 ), .COUT0(\freqer.n601 ));
  freqer_SLICE_13 \freqer.SLICE_13 ( .DI1(\freqer.n133[4] ), 
    .DI0(\freqer.n133[3] ), .D1(\freqer.n598 ), .C1(\freqer.counter[4] ), 
    .D0(\freqer.n132 ), .C0(\freqer.counter[3] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n132 ), .CIN1(\freqer.n598 ), 
    .Q0(\freqer.counter[3] ), .Q1(\freqer.counter[4] ), .F0(\freqer.n133[3] ), 
    .F1(\freqer.n133[4] ), .COUT1(\freqer.n134 ), .COUT0(\freqer.n598 ));
  freqer_SLICE_14 \freqer.SLICE_14 ( .DI1(\freqer.n133[2] ), 
    .DI0(\freqer.n133[1] ), .D1(\freqer.n595 ), .C1(\freqer.counter[2] ), 
    .D0(\freqer.n130 ), .C0(\freqer.counter[1] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n130 ), .CIN1(\freqer.n595 ), 
    .Q0(\freqer.counter[1] ), .Q1(\freqer.counter[2] ), .F0(\freqer.n133[1] ), 
    .F1(\freqer.n133[2] ), .COUT1(\freqer.n132 ), .COUT0(\freqer.n595 ));
  freqer_SLICE_15 \freqer.SLICE_15 ( .DI1(\freqer.n133[0] ), 
    .D1(\freqer.n592 ), .C1(\freqer.counter[0] ), .B1(VCC_net), 
    .LSR(\freqer.clkStrobe ), .CLK(int_osc), .CIN1(\freqer.n592 ), 
    .Q1(\freqer.counter[0] ), .F1(\freqer.n133[0] ), .COUT1(\freqer.n130 ), 
    .COUT0(\freqer.n592 ));
  freqer_SLICE_16 \freqer.SLICE_16 ( .DI1(\freqer.n133[28] ), 
    .DI0(\freqer.n133[27] ), .D1(\freqer.n634 ), .C1(\freqer.counter[28] ), 
    .D0(\freqer.n156 ), .C0(\freqer.counter[27] ), .LSR(\freqer.clkStrobe ), 
    .CLK(int_osc), .CIN0(\freqer.n156 ), .CIN1(\freqer.n634 ), 
    .Q0(\freqer.counter[27] ), .Q1(\freqer.counter[28] ), 
    .F0(\freqer.n133[27] ), .F1(\freqer.n133[28] ), .COUT1(\freqer.n158 ), 
    .COUT0(\freqer.n634 ));
  freqer_SLICE_17 \freqer.SLICE_17 ( .DI1(\freqer.toneFreq_N_65 ), 
    .DI0(\freqer.clkStrobe_N_66 ), .D1(\freqer.clkStrobe ), .C1(pwm_c), 
    .D0(\freqer.counter[3] ), .C0(\freqer.counter[9] ), .B0(\freqer.n11 ), 
    .A0(\freqer.n7 ), .CLK(int_osc), .Q0(\freqer.clkStrobe ), .Q1(pwm_c), 
    .F0(\freqer.clkStrobe_N_66 ), .F1(\freqer.toneFreq_N_65 ));
  freqer_SLICE_19 \freqer.SLICE_19 ( .D0(\freqer.counter[23] ), 
    .C0(\freqer.counter[24] ), .B0(\freqer.counter[15] ), 
    .A0(\freqer.counter[27] ), .F0(\freqer.n40 ));
  freqer_SLICE_20 \freqer.SLICE_20 ( .D1(\freqer.counter[1] ), 
    .C1(\freqer.n45 ), .B1(\freqer.n40 ), .A1(\freqer.counter[29] ), 
    .D0(\freqer.counter[30] ), .C0(\freqer.counter[22] ), 
    .B0(\freqer.counter[19] ), .A0(\freqer.counter[5] ), .F0(\freqer.n45 ), 
    .F1(\freqer.n49 ));
  freqer_SLICE_21 \freqer.SLICE_21 ( .D1(\freqer.n43 ), .C1(\freqer.n44 ), 
    .B1(\freqer.n41 ), .A1(\freqer.n42 ), .D0(\freqer.counter[2] ), 
    .C0(\freqer.counter[4] ), .B0(\freqer.counter[16] ), 
    .A0(\freqer.counter[17] ), .F0(\freqer.n44 ), .F1(\freqer.n50 ));
  freqer_SLICE_23 \freqer.SLICE_23 ( .D1(\freqer.counter[6] ), 
    .C1(\freqer.counter[10] ), .B1(\freqer.counter[26] ), 
    .A1(\freqer.counter[25] ), .D0(\freqer.counter[7] ), 
    .B0(\freqer.counter[14] ), .F0(\freqer.n7 ), .F1(\freqer.n43 ));
  freqer_SLICE_24 \freqer.SLICE_24 ( .D0(\freqer.counter[11] ), 
    .C0(\freqer.n50 ), .B0(\freqer.n49 ), .A0(\freqer.counter[13] ), 
    .F0(\freqer.n11 ));
  freqer_SLICE_25 \freqer.SLICE_25 ( .D0(\freqer.counter[28] ), 
    .C0(\freqer.counter[20] ), .B0(\freqer.counter[18] ), 
    .A0(\freqer.counter[12] ), .F0(\freqer.n41 ));
  SLICE_27 SLICE_27( .F0(VCC_net));
  freqer_SLICE_29 \freqer.SLICE_29 ( .D0(\freqer.counter[8] ), 
    .C0(\freqer.counter[0] ), .B0(\freqer.counter[31] ), 
    .A0(\freqer.counter[21] ), .F0(\freqer.n42 ));
  hf_osc hf_osc( .CLKHFPU(VCC_net), .CLKHF(int_osc));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module freqer_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module freqer_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_7 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_15 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \freqer/counter_7_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \freqer/counter_7__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/counter_7__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module freqer_SLICE_17 ( input DI1, DI0, D1, C1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \freqer/toneFreq_I_33_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \freqer/i4_4_lut_adj_35 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \freqer/toneFreq ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \freqer/clkStrobe_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_19 ( input D0, C0, B0, A0, output F0 );

  lut40002 \freqer/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_20 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40003 \freqer/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \freqer/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_21 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40005 \freqer/i24_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \freqer/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_23 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40007 \freqer/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 \freqer/i2_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_24 ( input D0, C0, B0, A0, output F0 );

  lut40009 \freqer/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_25 ( input D0, C0, B0, A0, output F0 );

  lut40010 \freqer/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_27 ( output F0 );
  wire   GNDI;

  lut40011 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module freqer_SLICE_29 ( input D0, C0, B0, A0, output F0 );

  lut40012 \freqer/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module hf_osc ( input CLKHFPU, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hf_osc( .CLKHFPU(CLKHFPU), .CLKHFEN(GNDI), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b01";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule
