
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Wed Dec  7 11:13:12 2022
// Netlist written on Wed Dec  7 11:13:21 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( ce, sdi, sck, nreset, makingMusic, pwm );
  input  ce, sdi, sck, nreset;
  output makingMusic, pwm;
  wire   \tuner.pitch.n133[0] , \tuner.pitch.n4629 , \tuner.pitch.counter[0] , 
         VCC_net, \tuner.pitch.counter_31__N_346 , int_osc, 
         \tuner.pitch.n2764 , \tuner.pitch.n133[31] , \tuner.pitch.n4728 , 
         \tuner.pitch.n2794 , \tuner.pitch.counter[31] , 
         \tuner.pitch.n133[30] , \tuner.pitch.n133[29] , \tuner.pitch.n4725 , 
         \tuner.pitch.counter[30] , \tuner.pitch.n2792 , 
         \tuner.pitch.counter[29] , \tuner.pitch.n133[28] , 
         \tuner.pitch.n133[27] , \tuner.pitch.n4722 , 
         \tuner.pitch.counter[28] , \tuner.pitch.n2790 , 
         \tuner.pitch.counter[27] , \tuner.pitch.n133[26] , 
         \tuner.pitch.n133[25] , \tuner.pitch.n4719 , 
         \tuner.pitch.counter[26] , \tuner.pitch.n2788 , 
         \tuner.pitch.counter[25] , \tuner.pitch.n133[24] , 
         \tuner.pitch.n133[23] , \tuner.pitch.n4716 , 
         \tuner.pitch.counter[24] , \tuner.pitch.n2786 , 
         \tuner.pitch.counter[23] , \tuner.pitch.n133[22] , 
         \tuner.pitch.n133[21] , \tuner.pitch.n4713 , 
         \tuner.pitch.counter[22] , \tuner.pitch.n2784 , 
         \tuner.pitch.counter[21] , \tuner.pitch.n133[20] , 
         \tuner.pitch.n133[19] , \tuner.pitch.n4710 , 
         \tuner.pitch.counter[20] , \tuner.pitch.n2782 , 
         \tuner.pitch.counter[19] , \tuner.pitch.n133[18] , 
         \tuner.pitch.n133[17] , \tuner.pitch.n4707 , 
         \tuner.pitch.counter[18] , \tuner.pitch.n2780 , 
         \tuner.pitch.counter[17] , \tuner.pitch.n133[16] , 
         \tuner.pitch.n133[15] , \tuner.pitch.n4704 , 
         \tuner.pitch.counter[16] , \tuner.pitch.n2778 , 
         \tuner.pitch.counter[15] , \tuner.pitch.n133[14] , 
         \tuner.pitch.n133[13] , \tuner.pitch.n4701 , 
         \tuner.pitch.counter[14] , \tuner.pitch.n2776 , 
         \tuner.pitch.counter[13] , \tuner.pitch.n133[12] , 
         \tuner.pitch.n133[11] , \tuner.pitch.n4698 , 
         \tuner.pitch.counter[12] , \tuner.pitch.n2774 , 
         \tuner.pitch.counter[11] , \tuner.pitch.n133[10] , 
         \tuner.pitch.n133[9] , \tuner.pitch.n4695 , \tuner.pitch.counter[10] , 
         \tuner.pitch.n2772 , \tuner.pitch.counter[9] , \tuner.pitch.n133[8] , 
         \tuner.pitch.n133[7] , \tuner.pitch.n4692 , \tuner.pitch.counter[8] , 
         \tuner.pitch.n2770 , \tuner.pitch.counter[7] , \tuner.pitch.n133[6] , 
         \tuner.pitch.n133[5] , \tuner.pitch.n4689 , \tuner.pitch.counter[6] , 
         \tuner.pitch.n2768 , \tuner.pitch.counter[5] , \tuner.pitch.n133[4] , 
         \tuner.pitch.n133[3] , \tuner.pitch.n4686 , \tuner.pitch.counter[4] , 
         \tuner.pitch.n2766 , \tuner.pitch.counter[3] , \tuner.pitch.n133[2] , 
         \tuner.pitch.n133[1] , \tuner.pitch.n4683 , \tuner.pitch.counter[2] , 
         \tuner.pitch.counter[1] , \tuner.howLong.n133[31] , 
         \tuner.howLong.n4680 , \tuner.howLong.n2827 , 
         \tuner.howLong.counter[31] , \tuner.howLong.counter_31__N_281 , 
         \tuner.howLong.n133[30] , \tuner.howLong.n133[29] , 
         \tuner.howLong.n4677 , \tuner.howLong.counter[30] , 
         \tuner.howLong.n2825 , \tuner.howLong.counter[29] , 
         \tuner.howLong.n133[28] , \tuner.howLong.n133[27] , 
         \tuner.howLong.n4674 , \tuner.howLong.counter[28] , 
         \tuner.howLong.n2823 , \tuner.howLong.counter[27] , 
         \tuner.howLong.n133[26] , \tuner.howLong.n133[25] , 
         \tuner.howLong.n4671 , \tuner.howLong.counter[26] , 
         \tuner.howLong.n2821 , \tuner.howLong.counter[25] , 
         \tuner.howLong.n133[24] , \tuner.howLong.n133[23] , 
         \tuner.howLong.n4668 , \tuner.howLong.counter[24] , 
         \tuner.howLong.n2819 , \tuner.howLong.counter[23] , 
         \tuner.howLong.n133[22] , \tuner.howLong.n133[21] , 
         \tuner.howLong.n4665 , \tuner.howLong.counter[22] , 
         \tuner.howLong.n2817 , \tuner.howLong.counter[21] , 
         \tuner.howLong.n133[20] , \tuner.howLong.n133[19] , 
         \tuner.howLong.n4662 , \tuner.howLong.counter[20] , 
         \tuner.howLong.n2815 , \tuner.howLong.counter[19] , 
         \tuner.howLong.n133[18] , \tuner.howLong.n133[17] , 
         \tuner.howLong.n4659 , \tuner.howLong.counter[18] , 
         \tuner.howLong.n2813 , \tuner.howLong.counter[17] , 
         \tuner.howLong.n133[16] , \tuner.howLong.n133[15] , 
         \tuner.howLong.n4656 , \tuner.howLong.counter[16] , 
         \tuner.howLong.n2811 , \tuner.howLong.counter[15] , 
         \tuner.howLong.n133[14] , \tuner.howLong.n133[13] , 
         \tuner.howLong.n4653 , \tuner.howLong.counter[14] , 
         \tuner.howLong.n2809 , \tuner.howLong.counter[13] , 
         \tuner.howLong.n133[12] , \tuner.howLong.n133[11] , 
         \tuner.howLong.n4650 , \tuner.howLong.counter[12] , 
         \tuner.howLong.n2807 , \tuner.howLong.counter[11] , 
         \tuner.howLong.n133[10] , \tuner.howLong.n133[9] , 
         \tuner.howLong.n4647 , \tuner.howLong.counter[10] , 
         \tuner.howLong.n2805 , \tuner.howLong.counter[9] , 
         \tuner.howLong.n133[8] , \tuner.howLong.n133[7] , 
         \tuner.howLong.n4644 , \tuner.howLong.counter[8] , 
         \tuner.howLong.n2803 , \tuner.howLong.counter[7] , 
         \tuner.howLong.n133[6] , \tuner.howLong.n133[5] , 
         \tuner.howLong.n4641 , \tuner.howLong.counter[6] , 
         \tuner.howLong.n2801 , \tuner.howLong.counter[5] , 
         \tuner.howLong.n133[4] , \tuner.howLong.n133[3] , 
         \tuner.howLong.n4638 , \tuner.howLong.counter[4] , 
         \tuner.howLong.n2799 , \tuner.howLong.counter[3] , 
         \tuner.howLong.n133[2] , \tuner.howLong.n133[1] , 
         \tuner.howLong.n4635 , \tuner.howLong.counter[2] , 
         \tuner.howLong.n2797 , \tuner.howLong.counter[1] , 
         \tuner.howLong.n133[0] , \tuner.howLong.n4632 , 
         \tuner.howLong.counter[0] , nextstate_5__N_209, nextstate_5__N_126, 
         \tuner.en , \tuner.n4310 , \tuner.n4304 , \tuner.n4307 , 
         \freqThreshold0[1] , \tuner.n2006 , \freqThreshold1[1] , 
         \tuner.n4301 , \freqThreshold0[0] , \freqThreshold1[0] , n2136, 
         \tuner.freqThreshold[0] , \tuner.freqThreshold[1] , \tuner.n3045 , 
         \tuner.n2053 , \tuner.n4 , start, \tuner.nextstate_5__N_125 , 
         nreset_c, nextstate_5__N_121, 
         \nextstate_5__N_121.sig_002.FeedThruLUT , 
         \tuner.n425[1].sig_000.FeedThruLUT , \tuner.n425[1] , n2162, 
         \tuner.n425[2] , \tuner.n533[1] , \tuner.counter[1]_2 , \counter[0] , 
         n2163, \tuner.n4358 , \tuner.n3643 , \freqThreshold1[14] , 
         \freqThreshold0[14] , \tuner.n4355 , \tuner.n3642 , \tuner.n3805 , 
         \tuner.freqThreshold[15] , \tuner.freqThreshold[14] , \tuner.n4382 , 
         \tuner.n4370 , \tuner.n4379 , \freqThreshold1[12] , 
         \freqThreshold0[12] , \tuner.n4367 , \freqThreshold0[13] , 
         \freqThreshold1[13] , \tuner.freqThreshold[13] , 
         \tuner.freqThreshold[12] , \tuner.n4400 , \tuner.n4394 , 
         \tuner.n4397 , \freqThreshold0[10] , \freqThreshold1[10] , 
         \freqThreshold0[11] , \tuner.n4391 , \freqThreshold1[11] , 
         \tuner.freqThreshold[11] , \tuner.freqThreshold[10] , \tuner.n4376 , 
         \tuner.n4388 , \tuner.n4373 , \freqThreshold0[8] , 
         \freqThreshold1[8] , \tuner.n4385 , \freqThreshold1[9] , 
         \freqThreshold0[9] , \tuner.freqThreshold[9] , 
         \tuner.freqThreshold[8] , \tuner.n4352 , \tuner.n4364 , \tuner.n4349 , 
         \freqThreshold0[6] , \freqThreshold1[6] , \tuner.n4361 , 
         \freqThreshold0[7] , \freqThreshold1[7] , \tuner.freqThreshold[7] , 
         \tuner.freqThreshold[6] , \tuner.n3667 , \tuner.n4334 , \tuner.n3666 , 
         \tuner.n3819 , \tuner.n4331 , \freqThreshold1[5] , 
         \freqThreshold0[5] , \tuner.freqThreshold[5] , 
         \tuner.freqThreshold[4] , \tuner.n4316 , \tuner.n4322 , \tuner.n4313 , 
         \freqThreshold0[2] , \freqThreshold1[2] , \tuner.n4319 , 
         \freqThreshold0[3] , \freqThreshold1[3] , \tuner.freqThreshold[3] , 
         \tuner.freqThreshold[2] , n2159, n2160, n1983, \durThreshold[8] , 
         n1984, \durThreshold[7] , n2157, n2158, \durThreshold[11] , 
         \durThreshold[9] , n1982, n2155, n2156, n1968, \durThreshold[13] , 
         \durThreshold[12] , n2153, n2154, \durThreshold[16] , 
         \durThreshold[15] , n2151, n2152, \durThreshold[20] , 
         \durThreshold[17] , n2030, n2149, n2150, \durThreshold[22] , 
         \durThreshold[21] , \n1982$n0 , \tuner.n4328 , \tuner.n3816 , 
         \tuner.n3663 , \durThresh0[19] , \durThresh1[19] , \tuner.n4325 , 
         \tuner.durThreshold[19] , \tuner.durThreshold[18] , 
         \newFlattenedMCUout[34].sig_004.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_003.FeedThruLUT , 
         \newFlattenedMCUout[34] , \newFlattenedMCUout[35] , sck_c, 
         \newFlattenedMCUout[36] , 
         \newFlattenedMCUout[32].sig_006.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_005.FeedThruLUT , 
         \newFlattenedMCUout[32] , \newFlattenedMCUout[33] , 
         \newFlattenedMCUout[30].sig_008.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_007.FeedThruLUT , 
         \newFlattenedMCUout[30] , \newFlattenedMCUout[31] , 
         \newFlattenedMCUout[28].sig_010.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_009.FeedThruLUT , 
         \newFlattenedMCUout[28] , \newFlattenedMCUout[29] , 
         \newFlattenedMCUout[26].sig_012.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_011.FeedThruLUT , 
         \newFlattenedMCUout[26] , \newFlattenedMCUout[27] , 
         \newFlattenedMCUout[24].sig_014.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_013.FeedThruLUT , 
         \newFlattenedMCUout[24] , \newFlattenedMCUout[25] , 
         \newFlattenedMCUout[22].sig_016.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_015.FeedThruLUT , 
         \newFlattenedMCUout[22] , \newFlattenedMCUout[23] , 
         \newFlattenedMCUout[20].sig_018.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_017.FeedThruLUT , 
         \newFlattenedMCUout[20] , \newFlattenedMCUout[21] , 
         \newFlattenedMCUout[18].sig_020.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_019.FeedThruLUT , 
         \newFlattenedMCUout[18] , \newFlattenedMCUout[19] , 
         \newFlattenedMCUout[16].sig_022.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_021.FeedThruLUT , 
         \newFlattenedMCUout[16] , \newFlattenedMCUout[17] , 
         \newFlattenedMCUout[14].sig_024.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_023.FeedThruLUT , 
         \newFlattenedMCUout[14] , \newFlattenedMCUout[15] , 
         \newFlattenedMCUout[12].sig_026.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_025.FeedThruLUT , 
         \newFlattenedMCUout[12] , \newFlattenedMCUout[13] , 
         \newFlattenedMCUout[38].sig_027.FeedThruLUT , 
         \newFlattenedMCUout[38] , \newFlattenedMCUout[39] , 
         \newFlattenedMCUout[36].sig_041.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_028.FeedThruLUT , 
         \newFlattenedMCUout[37] , 
         \newFlattenedMCUout[10].sig_030.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_029.FeedThruLUT , 
         \newFlattenedMCUout[10] , \newFlattenedMCUout[11] , 
         \newFlattenedMCUout[8].sig_032.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_031.FeedThruLUT , \newFlattenedMCUout[8] , 
         \newFlattenedMCUout[9] , \newFlattenedMCUout[0].sig_040.FeedThruLUT , 
         \spi.newFlattenedMCUout[7]_2.sig_033.FeedThruLUT , 
         \newFlattenedMCUout[0] , \spi.newFlattenedMCUout[7]_2 , 
         \newFlattenedMCUout[1] , 
         \spi.newFlattenedMCUout[6]_2.sig_034.FeedThruLUT , 
         \spi.newFlattenedMCUout[6]_2 , 
         \spi.newFlattenedMCUout[4]_2.sig_036.FeedThruLUT , 
         \spi.newFlattenedMCUout[5]_2.sig_035.FeedThruLUT , 
         \spi.newFlattenedMCUout[4]_2 , \spi.newFlattenedMCUout[5]_2 , 
         \spi.newFlattenedMCUout[2]_2.sig_038.FeedThruLUT , 
         \spi.newFlattenedMCUout[3]_2.sig_037.FeedThruLUT , 
         \spi.newFlattenedMCUout[2]_2 , \spi.newFlattenedMCUout[3]_2 , 
         \newFlattenedMCUout[1].sig_039.FeedThruLUT , 
         \ce_c.sig_042.FeedThruLUT , ce_c, \enabler.twoAgoCE , 
         \newFlattenedMCUout[1].sig_076.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_043.FeedThruLUT , 
         \enabler.flattenedMCUout_39__N_41 , \flattenedMCUout[0] , 
         \flattenedMCUout[1] , \enabler.twoAgoCE.sig_077.FeedThruLUT , n2140, 
         makingMusic_c, lastCE, \newFlattenedMCUout[38].sig_045.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_044.FeedThruLUT , \flattenedMCUout[39] , 
         \flattenedMCUout[38] , \newFlattenedMCUout[36].sig_047.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_046.FeedThruLUT , \flattenedMCUout[37] , 
         \flattenedMCUout[36] , \newFlattenedMCUout[34].sig_049.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_048.FeedThruLUT , \flattenedMCUout[35] , 
         \flattenedMCUout[34] , \newFlattenedMCUout[32].sig_051.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_050.FeedThruLUT , \flattenedMCUout[33] , 
         \flattenedMCUout[32] , \newFlattenedMCUout[30].sig_053.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_052.FeedThruLUT , \flattenedMCUout[31] , 
         \flattenedMCUout[30] , \newFlattenedMCUout[28].sig_055.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_054.FeedThruLUT , \flattenedMCUout[29] , 
         \flattenedMCUout[28] , \newFlattenedMCUout[26].sig_057.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_056.FeedThruLUT , \flattenedMCUout[27] , 
         \flattenedMCUout[26] , \newFlattenedMCUout[24].sig_059.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_058.FeedThruLUT , \flattenedMCUout[25] , 
         \flattenedMCUout[24] , \newFlattenedMCUout[22].sig_061.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_060.FeedThruLUT , \flattenedMCUout[23] , 
         \flattenedMCUout[22] , \newFlattenedMCUout[20].sig_063.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_062.FeedThruLUT , \flattenedMCUout[21] , 
         \flattenedMCUout[20] , \newFlattenedMCUout[18].sig_065.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_064.FeedThruLUT , \flattenedMCUout[19] , 
         \flattenedMCUout[18] , \newFlattenedMCUout[16].sig_067.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_066.FeedThruLUT , \flattenedMCUout[17] , 
         \flattenedMCUout[16] , \newFlattenedMCUout[14].sig_069.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_068.FeedThruLUT , \flattenedMCUout[15] , 
         \flattenedMCUout[14] , \newFlattenedMCUout[12].sig_071.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_070.FeedThruLUT , \flattenedMCUout[13] , 
         \flattenedMCUout[12] , \newFlattenedMCUout[10].sig_073.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_072.FeedThruLUT , 
         \enabler.flattenedMCUout[11] , \enabler.flattenedMCUout[10] , 
         \newFlattenedMCUout[8].sig_075.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_074.FeedThruLUT , 
         \enabler.flattenedMCUout[9] , \enabler.flattenedMCUout[8] , 
         \durThresh1[15] , \tuner.n4343 , \durThresh0[15] , \tuner.n2008 , 
         \tuner.n3748 , \durThresh2[15] , \durThresh1[20] , \tuner.n4337 , 
         \durThresh0[20] , \durThresh2[20] , \tuner.n3744 , nextstate_5__N_124, 
         \freqThreshold3[10] , \tuner.n3777 , n5_adj_355, \tuner.n3736 , 
         \freqThreshold2[1] , \freqThreshold2[10] , \tuner.n3768 , 
         \freqThreshold2[11] , \freqThreshold2[0] , \tuner.n3735 , 
         \freqThreshold2[9] , \tuner.n3767 , \tuner.n3766 , 
         \freqThreshold2[12] , \tuner.n3761 , \freqThreshold2[8] , \tuner.rep , 
         done, \tuner.n3760 , \freqThreshold2[13] , \freqThreshold2[7] , 
         \tuner.n3759 , \tuner.n3832 , \tuner.n3690 , n69, \tuner.n3758 , 
         \freqThreshold2[14] , \tuner.n3755 , \freqThreshold2[6] , 
         \tuner.n3727 , \durThresh2[23] , \tuner.n4295 , n2630, n2624, 
         \freqThreshold2[2] , n2646, n2618, \freqThreshold3[1] , 
         \freqThreshold3[2] , \tuner.n3738 , \tuner.n3757 , n2654, 
         \tuner.n3743 , \freqThreshold2[5] , n2561, n2640, \tuner.n3695 , 
         \durThresh2[19] , \freqThreshold3[3] , \tuner.n3739 , n3069, 
         \freqThreshold3[5] , \freqThreshold2[3] , n2289, \freqThreshold3[6] , 
         \freqThreshold3[14] , \freqThreshold3[7] , \freqThreshold3[13] , 
         \freqThreshold3[8] , \freqThreshold3[12] , \freqThreshold3[9] , 
         \freqThreshold3[0] , \freqThreshold3[11] , \tuner.pitch.n23 , 
         \tuner.pitch.n24 , \tuner.pitch.n22 , \tuner.pitch.n21 , 
         \tuner.pitch.n30 , \tuner.pitch.n28 , \tuner.pitch.n26 , 
         \tuner.pitch.n25 , \tuner.pitch.n27 , \tuner.pitch.n3052 , 
         \tuner.pitch.n20 , \tuner.pitch.n17 , \tuner.pitch.n19 , 
         \tuner.pitch.n18 , \tuner.pitch.n29 , \tuner.howLong.n25 , 
         \tuner.howLong.n18 , \tuner.howLong.n30 , \tuner.howLong.n22 , 
         \tuner.howLong.n24 , \tuner.howLong.n20 , \tuner.howLong.n19 , 
         \tuner.howLong.n21 , \durThreshold[24] , \tuner.howLong.n31 , 
         \tuner.howLong.n27 , \tuner.howLong.n3049 , 
         \tuner.howLong.n25_adj_353 , \tuner.howLong.n26 , \tuner.howLong.n23 , 
         \tuner.howLong.n24_adj_352 , \tuner.n425[2].sig_001.FeedThruLUT , 
         \durThresh1[23] , \durThresh0[23] , \tuner.pitch.pwm_N_350 , pwm_c, 
         n2147, \tuner.n2133 , \tuner.n4298 , \tuner.durThreshold[23] , 
         \tuner.howLong.counter_31__N_281$n1 , \tuner.n3406 , n5, 
         \enabler.n2302 , stopCountFlag, n3339, sdi_c;

  tuner_pitch_SLICE_0 \tuner.pitch.SLICE_0 ( .DI1(\tuner.pitch.n133[0] ), 
    .D1(\tuner.pitch.n4629 ), .C1(\tuner.pitch.counter[0] ), .B1(VCC_net), 
    .LSR(\tuner.pitch.counter_31__N_346 ), .CLK(int_osc), 
    .CIN1(\tuner.pitch.n4629 ), .Q1(\tuner.pitch.counter[0] ), 
    .F1(\tuner.pitch.n133[0] ), .COUT1(\tuner.pitch.n2764 ), 
    .COUT0(\tuner.pitch.n4629 ));
  tuner_pitch_SLICE_1 \tuner.pitch.SLICE_1 ( .DI0(\tuner.pitch.n133[31] ), 
    .D1(\tuner.pitch.n4728 ), .D0(\tuner.pitch.n2794 ), 
    .C0(\tuner.pitch.counter[31] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2794 ), .CIN1(\tuner.pitch.n4728 ), 
    .Q0(\tuner.pitch.counter[31] ), .F0(\tuner.pitch.n133[31] ), 
    .COUT0(\tuner.pitch.n4728 ));
  tuner_pitch_SLICE_2 \tuner.pitch.SLICE_2 ( .DI1(\tuner.pitch.n133[30] ), 
    .DI0(\tuner.pitch.n133[29] ), .D1(\tuner.pitch.n4725 ), 
    .C1(\tuner.pitch.counter[30] ), .D0(\tuner.pitch.n2792 ), 
    .C0(\tuner.pitch.counter[29] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2792 ), .CIN1(\tuner.pitch.n4725 ), 
    .Q0(\tuner.pitch.counter[29] ), .Q1(\tuner.pitch.counter[30] ), 
    .F0(\tuner.pitch.n133[29] ), .F1(\tuner.pitch.n133[30] ), 
    .COUT1(\tuner.pitch.n2794 ), .COUT0(\tuner.pitch.n4725 ));
  tuner_pitch_SLICE_3 \tuner.pitch.SLICE_3 ( .DI1(\tuner.pitch.n133[28] ), 
    .DI0(\tuner.pitch.n133[27] ), .D1(\tuner.pitch.n4722 ), 
    .C1(\tuner.pitch.counter[28] ), .D0(\tuner.pitch.n2790 ), 
    .C0(\tuner.pitch.counter[27] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2790 ), .CIN1(\tuner.pitch.n4722 ), 
    .Q0(\tuner.pitch.counter[27] ), .Q1(\tuner.pitch.counter[28] ), 
    .F0(\tuner.pitch.n133[27] ), .F1(\tuner.pitch.n133[28] ), 
    .COUT1(\tuner.pitch.n2792 ), .COUT0(\tuner.pitch.n4722 ));
  tuner_pitch_SLICE_4 \tuner.pitch.SLICE_4 ( .DI1(\tuner.pitch.n133[26] ), 
    .DI0(\tuner.pitch.n133[25] ), .D1(\tuner.pitch.n4719 ), 
    .C1(\tuner.pitch.counter[26] ), .D0(\tuner.pitch.n2788 ), 
    .C0(\tuner.pitch.counter[25] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2788 ), .CIN1(\tuner.pitch.n4719 ), 
    .Q0(\tuner.pitch.counter[25] ), .Q1(\tuner.pitch.counter[26] ), 
    .F0(\tuner.pitch.n133[25] ), .F1(\tuner.pitch.n133[26] ), 
    .COUT1(\tuner.pitch.n2790 ), .COUT0(\tuner.pitch.n4719 ));
  tuner_pitch_SLICE_5 \tuner.pitch.SLICE_5 ( .DI1(\tuner.pitch.n133[24] ), 
    .DI0(\tuner.pitch.n133[23] ), .D1(\tuner.pitch.n4716 ), 
    .C1(\tuner.pitch.counter[24] ), .D0(\tuner.pitch.n2786 ), 
    .C0(\tuner.pitch.counter[23] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2786 ), .CIN1(\tuner.pitch.n4716 ), 
    .Q0(\tuner.pitch.counter[23] ), .Q1(\tuner.pitch.counter[24] ), 
    .F0(\tuner.pitch.n133[23] ), .F1(\tuner.pitch.n133[24] ), 
    .COUT1(\tuner.pitch.n2788 ), .COUT0(\tuner.pitch.n4716 ));
  tuner_pitch_SLICE_6 \tuner.pitch.SLICE_6 ( .DI1(\tuner.pitch.n133[22] ), 
    .DI0(\tuner.pitch.n133[21] ), .D1(\tuner.pitch.n4713 ), 
    .C1(\tuner.pitch.counter[22] ), .D0(\tuner.pitch.n2784 ), 
    .C0(\tuner.pitch.counter[21] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2784 ), .CIN1(\tuner.pitch.n4713 ), 
    .Q0(\tuner.pitch.counter[21] ), .Q1(\tuner.pitch.counter[22] ), 
    .F0(\tuner.pitch.n133[21] ), .F1(\tuner.pitch.n133[22] ), 
    .COUT1(\tuner.pitch.n2786 ), .COUT0(\tuner.pitch.n4713 ));
  tuner_pitch_SLICE_7 \tuner.pitch.SLICE_7 ( .DI1(\tuner.pitch.n133[20] ), 
    .DI0(\tuner.pitch.n133[19] ), .D1(\tuner.pitch.n4710 ), 
    .C1(\tuner.pitch.counter[20] ), .D0(\tuner.pitch.n2782 ), 
    .C0(\tuner.pitch.counter[19] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2782 ), .CIN1(\tuner.pitch.n4710 ), 
    .Q0(\tuner.pitch.counter[19] ), .Q1(\tuner.pitch.counter[20] ), 
    .F0(\tuner.pitch.n133[19] ), .F1(\tuner.pitch.n133[20] ), 
    .COUT1(\tuner.pitch.n2784 ), .COUT0(\tuner.pitch.n4710 ));
  tuner_pitch_SLICE_8 \tuner.pitch.SLICE_8 ( .DI1(\tuner.pitch.n133[18] ), 
    .DI0(\tuner.pitch.n133[17] ), .D1(\tuner.pitch.n4707 ), 
    .C1(\tuner.pitch.counter[18] ), .D0(\tuner.pitch.n2780 ), 
    .C0(\tuner.pitch.counter[17] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2780 ), .CIN1(\tuner.pitch.n4707 ), 
    .Q0(\tuner.pitch.counter[17] ), .Q1(\tuner.pitch.counter[18] ), 
    .F0(\tuner.pitch.n133[17] ), .F1(\tuner.pitch.n133[18] ), 
    .COUT1(\tuner.pitch.n2782 ), .COUT0(\tuner.pitch.n4707 ));
  tuner_pitch_SLICE_9 \tuner.pitch.SLICE_9 ( .DI1(\tuner.pitch.n133[16] ), 
    .DI0(\tuner.pitch.n133[15] ), .D1(\tuner.pitch.n4704 ), 
    .C1(\tuner.pitch.counter[16] ), .D0(\tuner.pitch.n2778 ), 
    .C0(\tuner.pitch.counter[15] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2778 ), .CIN1(\tuner.pitch.n4704 ), 
    .Q0(\tuner.pitch.counter[15] ), .Q1(\tuner.pitch.counter[16] ), 
    .F0(\tuner.pitch.n133[15] ), .F1(\tuner.pitch.n133[16] ), 
    .COUT1(\tuner.pitch.n2780 ), .COUT0(\tuner.pitch.n4704 ));
  tuner_pitch_SLICE_10 \tuner.pitch.SLICE_10 ( .DI1(\tuner.pitch.n133[14] ), 
    .DI0(\tuner.pitch.n133[13] ), .D1(\tuner.pitch.n4701 ), 
    .C1(\tuner.pitch.counter[14] ), .D0(\tuner.pitch.n2776 ), 
    .C0(\tuner.pitch.counter[13] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2776 ), .CIN1(\tuner.pitch.n4701 ), 
    .Q0(\tuner.pitch.counter[13] ), .Q1(\tuner.pitch.counter[14] ), 
    .F0(\tuner.pitch.n133[13] ), .F1(\tuner.pitch.n133[14] ), 
    .COUT1(\tuner.pitch.n2778 ), .COUT0(\tuner.pitch.n4701 ));
  tuner_pitch_SLICE_11 \tuner.pitch.SLICE_11 ( .DI1(\tuner.pitch.n133[12] ), 
    .DI0(\tuner.pitch.n133[11] ), .D1(\tuner.pitch.n4698 ), 
    .C1(\tuner.pitch.counter[12] ), .D0(\tuner.pitch.n2774 ), 
    .C0(\tuner.pitch.counter[11] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2774 ), .CIN1(\tuner.pitch.n4698 ), 
    .Q0(\tuner.pitch.counter[11] ), .Q1(\tuner.pitch.counter[12] ), 
    .F0(\tuner.pitch.n133[11] ), .F1(\tuner.pitch.n133[12] ), 
    .COUT1(\tuner.pitch.n2776 ), .COUT0(\tuner.pitch.n4698 ));
  tuner_pitch_SLICE_12 \tuner.pitch.SLICE_12 ( .DI1(\tuner.pitch.n133[10] ), 
    .DI0(\tuner.pitch.n133[9] ), .D1(\tuner.pitch.n4695 ), 
    .C1(\tuner.pitch.counter[10] ), .D0(\tuner.pitch.n2772 ), 
    .C0(\tuner.pitch.counter[9] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2772 ), .CIN1(\tuner.pitch.n4695 ), 
    .Q0(\tuner.pitch.counter[9] ), .Q1(\tuner.pitch.counter[10] ), 
    .F0(\tuner.pitch.n133[9] ), .F1(\tuner.pitch.n133[10] ), 
    .COUT1(\tuner.pitch.n2774 ), .COUT0(\tuner.pitch.n4695 ));
  tuner_pitch_SLICE_13 \tuner.pitch.SLICE_13 ( .DI1(\tuner.pitch.n133[8] ), 
    .DI0(\tuner.pitch.n133[7] ), .D1(\tuner.pitch.n4692 ), 
    .C1(\tuner.pitch.counter[8] ), .D0(\tuner.pitch.n2770 ), 
    .C0(\tuner.pitch.counter[7] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2770 ), .CIN1(\tuner.pitch.n4692 ), 
    .Q0(\tuner.pitch.counter[7] ), .Q1(\tuner.pitch.counter[8] ), 
    .F0(\tuner.pitch.n133[7] ), .F1(\tuner.pitch.n133[8] ), 
    .COUT1(\tuner.pitch.n2772 ), .COUT0(\tuner.pitch.n4692 ));
  tuner_pitch_SLICE_14 \tuner.pitch.SLICE_14 ( .DI1(\tuner.pitch.n133[6] ), 
    .DI0(\tuner.pitch.n133[5] ), .D1(\tuner.pitch.n4689 ), 
    .C1(\tuner.pitch.counter[6] ), .D0(\tuner.pitch.n2768 ), 
    .C0(\tuner.pitch.counter[5] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2768 ), .CIN1(\tuner.pitch.n4689 ), 
    .Q0(\tuner.pitch.counter[5] ), .Q1(\tuner.pitch.counter[6] ), 
    .F0(\tuner.pitch.n133[5] ), .F1(\tuner.pitch.n133[6] ), 
    .COUT1(\tuner.pitch.n2770 ), .COUT0(\tuner.pitch.n4689 ));
  tuner_pitch_SLICE_15 \tuner.pitch.SLICE_15 ( .DI1(\tuner.pitch.n133[4] ), 
    .DI0(\tuner.pitch.n133[3] ), .D1(\tuner.pitch.n4686 ), 
    .C1(\tuner.pitch.counter[4] ), .D0(\tuner.pitch.n2766 ), 
    .C0(\tuner.pitch.counter[3] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2766 ), .CIN1(\tuner.pitch.n4686 ), 
    .Q0(\tuner.pitch.counter[3] ), .Q1(\tuner.pitch.counter[4] ), 
    .F0(\tuner.pitch.n133[3] ), .F1(\tuner.pitch.n133[4] ), 
    .COUT1(\tuner.pitch.n2768 ), .COUT0(\tuner.pitch.n4686 ));
  tuner_pitch_SLICE_16 \tuner.pitch.SLICE_16 ( .DI1(\tuner.pitch.n133[2] ), 
    .DI0(\tuner.pitch.n133[1] ), .D1(\tuner.pitch.n4683 ), 
    .C1(\tuner.pitch.counter[2] ), .D0(\tuner.pitch.n2764 ), 
    .C0(\tuner.pitch.counter[1] ), .LSR(\tuner.pitch.counter_31__N_346 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2764 ), .CIN1(\tuner.pitch.n4683 ), 
    .Q0(\tuner.pitch.counter[1] ), .Q1(\tuner.pitch.counter[2] ), 
    .F0(\tuner.pitch.n133[1] ), .F1(\tuner.pitch.n133[2] ), 
    .COUT1(\tuner.pitch.n2766 ), .COUT0(\tuner.pitch.n4683 ));
  tuner_howLong_SLICE_17 \tuner.howLong.SLICE_17 ( 
    .DI0(\tuner.howLong.n133[31] ), .D1(\tuner.howLong.n4680 ), 
    .D0(\tuner.howLong.n2827 ), .C0(\tuner.howLong.counter[31] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2827 ), .CIN1(\tuner.howLong.n4680 ), 
    .Q0(\tuner.howLong.counter[31] ), .F0(\tuner.howLong.n133[31] ), 
    .COUT0(\tuner.howLong.n4680 ));
  tuner_howLong_SLICE_18 \tuner.howLong.SLICE_18 ( 
    .DI1(\tuner.howLong.n133[30] ), .DI0(\tuner.howLong.n133[29] ), 
    .D1(\tuner.howLong.n4677 ), .C1(\tuner.howLong.counter[30] ), 
    .D0(\tuner.howLong.n2825 ), .C0(\tuner.howLong.counter[29] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2825 ), .CIN1(\tuner.howLong.n4677 ), 
    .Q0(\tuner.howLong.counter[29] ), .Q1(\tuner.howLong.counter[30] ), 
    .F0(\tuner.howLong.n133[29] ), .F1(\tuner.howLong.n133[30] ), 
    .COUT1(\tuner.howLong.n2827 ), .COUT0(\tuner.howLong.n4677 ));
  tuner_howLong_SLICE_19 \tuner.howLong.SLICE_19 ( 
    .DI1(\tuner.howLong.n133[28] ), .DI0(\tuner.howLong.n133[27] ), 
    .D1(\tuner.howLong.n4674 ), .C1(\tuner.howLong.counter[28] ), 
    .D0(\tuner.howLong.n2823 ), .C0(\tuner.howLong.counter[27] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2823 ), .CIN1(\tuner.howLong.n4674 ), 
    .Q0(\tuner.howLong.counter[27] ), .Q1(\tuner.howLong.counter[28] ), 
    .F0(\tuner.howLong.n133[27] ), .F1(\tuner.howLong.n133[28] ), 
    .COUT1(\tuner.howLong.n2825 ), .COUT0(\tuner.howLong.n4674 ));
  tuner_howLong_SLICE_20 \tuner.howLong.SLICE_20 ( 
    .DI1(\tuner.howLong.n133[26] ), .DI0(\tuner.howLong.n133[25] ), 
    .D1(\tuner.howLong.n4671 ), .C1(\tuner.howLong.counter[26] ), 
    .D0(\tuner.howLong.n2821 ), .C0(\tuner.howLong.counter[25] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2821 ), .CIN1(\tuner.howLong.n4671 ), 
    .Q0(\tuner.howLong.counter[25] ), .Q1(\tuner.howLong.counter[26] ), 
    .F0(\tuner.howLong.n133[25] ), .F1(\tuner.howLong.n133[26] ), 
    .COUT1(\tuner.howLong.n2823 ), .COUT0(\tuner.howLong.n4671 ));
  tuner_howLong_SLICE_21 \tuner.howLong.SLICE_21 ( 
    .DI1(\tuner.howLong.n133[24] ), .DI0(\tuner.howLong.n133[23] ), 
    .D1(\tuner.howLong.n4668 ), .C1(\tuner.howLong.counter[24] ), 
    .D0(\tuner.howLong.n2819 ), .C0(\tuner.howLong.counter[23] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2819 ), .CIN1(\tuner.howLong.n4668 ), 
    .Q0(\tuner.howLong.counter[23] ), .Q1(\tuner.howLong.counter[24] ), 
    .F0(\tuner.howLong.n133[23] ), .F1(\tuner.howLong.n133[24] ), 
    .COUT1(\tuner.howLong.n2821 ), .COUT0(\tuner.howLong.n4668 ));
  tuner_howLong_SLICE_22 \tuner.howLong.SLICE_22 ( 
    .DI1(\tuner.howLong.n133[22] ), .DI0(\tuner.howLong.n133[21] ), 
    .D1(\tuner.howLong.n4665 ), .C1(\tuner.howLong.counter[22] ), 
    .D0(\tuner.howLong.n2817 ), .C0(\tuner.howLong.counter[21] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2817 ), .CIN1(\tuner.howLong.n4665 ), 
    .Q0(\tuner.howLong.counter[21] ), .Q1(\tuner.howLong.counter[22] ), 
    .F0(\tuner.howLong.n133[21] ), .F1(\tuner.howLong.n133[22] ), 
    .COUT1(\tuner.howLong.n2819 ), .COUT0(\tuner.howLong.n4665 ));
  tuner_howLong_SLICE_23 \tuner.howLong.SLICE_23 ( 
    .DI1(\tuner.howLong.n133[20] ), .DI0(\tuner.howLong.n133[19] ), 
    .D1(\tuner.howLong.n4662 ), .C1(\tuner.howLong.counter[20] ), 
    .D0(\tuner.howLong.n2815 ), .C0(\tuner.howLong.counter[19] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2815 ), .CIN1(\tuner.howLong.n4662 ), 
    .Q0(\tuner.howLong.counter[19] ), .Q1(\tuner.howLong.counter[20] ), 
    .F0(\tuner.howLong.n133[19] ), .F1(\tuner.howLong.n133[20] ), 
    .COUT1(\tuner.howLong.n2817 ), .COUT0(\tuner.howLong.n4662 ));
  tuner_howLong_SLICE_24 \tuner.howLong.SLICE_24 ( 
    .DI1(\tuner.howLong.n133[18] ), .DI0(\tuner.howLong.n133[17] ), 
    .D1(\tuner.howLong.n4659 ), .C1(\tuner.howLong.counter[18] ), 
    .D0(\tuner.howLong.n2813 ), .C0(\tuner.howLong.counter[17] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2813 ), .CIN1(\tuner.howLong.n4659 ), 
    .Q0(\tuner.howLong.counter[17] ), .Q1(\tuner.howLong.counter[18] ), 
    .F0(\tuner.howLong.n133[17] ), .F1(\tuner.howLong.n133[18] ), 
    .COUT1(\tuner.howLong.n2815 ), .COUT0(\tuner.howLong.n4659 ));
  tuner_howLong_SLICE_25 \tuner.howLong.SLICE_25 ( 
    .DI1(\tuner.howLong.n133[16] ), .DI0(\tuner.howLong.n133[15] ), 
    .D1(\tuner.howLong.n4656 ), .C1(\tuner.howLong.counter[16] ), 
    .D0(\tuner.howLong.n2811 ), .C0(\tuner.howLong.counter[15] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2811 ), .CIN1(\tuner.howLong.n4656 ), 
    .Q0(\tuner.howLong.counter[15] ), .Q1(\tuner.howLong.counter[16] ), 
    .F0(\tuner.howLong.n133[15] ), .F1(\tuner.howLong.n133[16] ), 
    .COUT1(\tuner.howLong.n2813 ), .COUT0(\tuner.howLong.n4656 ));
  tuner_howLong_SLICE_26 \tuner.howLong.SLICE_26 ( 
    .DI1(\tuner.howLong.n133[14] ), .DI0(\tuner.howLong.n133[13] ), 
    .D1(\tuner.howLong.n4653 ), .C1(\tuner.howLong.counter[14] ), 
    .D0(\tuner.howLong.n2809 ), .C0(\tuner.howLong.counter[13] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2809 ), .CIN1(\tuner.howLong.n4653 ), 
    .Q0(\tuner.howLong.counter[13] ), .Q1(\tuner.howLong.counter[14] ), 
    .F0(\tuner.howLong.n133[13] ), .F1(\tuner.howLong.n133[14] ), 
    .COUT1(\tuner.howLong.n2811 ), .COUT0(\tuner.howLong.n4653 ));
  tuner_howLong_SLICE_27 \tuner.howLong.SLICE_27 ( 
    .DI1(\tuner.howLong.n133[12] ), .DI0(\tuner.howLong.n133[11] ), 
    .D1(\tuner.howLong.n4650 ), .C1(\tuner.howLong.counter[12] ), 
    .D0(\tuner.howLong.n2807 ), .C0(\tuner.howLong.counter[11] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2807 ), .CIN1(\tuner.howLong.n4650 ), 
    .Q0(\tuner.howLong.counter[11] ), .Q1(\tuner.howLong.counter[12] ), 
    .F0(\tuner.howLong.n133[11] ), .F1(\tuner.howLong.n133[12] ), 
    .COUT1(\tuner.howLong.n2809 ), .COUT0(\tuner.howLong.n4650 ));
  tuner_howLong_SLICE_28 \tuner.howLong.SLICE_28 ( 
    .DI1(\tuner.howLong.n133[10] ), .DI0(\tuner.howLong.n133[9] ), 
    .D1(\tuner.howLong.n4647 ), .C1(\tuner.howLong.counter[10] ), 
    .D0(\tuner.howLong.n2805 ), .C0(\tuner.howLong.counter[9] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2805 ), .CIN1(\tuner.howLong.n4647 ), 
    .Q0(\tuner.howLong.counter[9] ), .Q1(\tuner.howLong.counter[10] ), 
    .F0(\tuner.howLong.n133[9] ), .F1(\tuner.howLong.n133[10] ), 
    .COUT1(\tuner.howLong.n2807 ), .COUT0(\tuner.howLong.n4647 ));
  tuner_howLong_SLICE_29 \tuner.howLong.SLICE_29 ( 
    .DI1(\tuner.howLong.n133[8] ), .DI0(\tuner.howLong.n133[7] ), 
    .D1(\tuner.howLong.n4644 ), .C1(\tuner.howLong.counter[8] ), 
    .D0(\tuner.howLong.n2803 ), .C0(\tuner.howLong.counter[7] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2803 ), .CIN1(\tuner.howLong.n4644 ), 
    .Q0(\tuner.howLong.counter[7] ), .Q1(\tuner.howLong.counter[8] ), 
    .F0(\tuner.howLong.n133[7] ), .F1(\tuner.howLong.n133[8] ), 
    .COUT1(\tuner.howLong.n2805 ), .COUT0(\tuner.howLong.n4644 ));
  tuner_howLong_SLICE_30 \tuner.howLong.SLICE_30 ( 
    .DI1(\tuner.howLong.n133[6] ), .DI0(\tuner.howLong.n133[5] ), 
    .D1(\tuner.howLong.n4641 ), .C1(\tuner.howLong.counter[6] ), 
    .D0(\tuner.howLong.n2801 ), .C0(\tuner.howLong.counter[5] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2801 ), .CIN1(\tuner.howLong.n4641 ), 
    .Q0(\tuner.howLong.counter[5] ), .Q1(\tuner.howLong.counter[6] ), 
    .F0(\tuner.howLong.n133[5] ), .F1(\tuner.howLong.n133[6] ), 
    .COUT1(\tuner.howLong.n2803 ), .COUT0(\tuner.howLong.n4641 ));
  tuner_howLong_SLICE_31 \tuner.howLong.SLICE_31 ( 
    .DI1(\tuner.howLong.n133[4] ), .DI0(\tuner.howLong.n133[3] ), 
    .D1(\tuner.howLong.n4638 ), .C1(\tuner.howLong.counter[4] ), 
    .D0(\tuner.howLong.n2799 ), .C0(\tuner.howLong.counter[3] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2799 ), .CIN1(\tuner.howLong.n4638 ), 
    .Q0(\tuner.howLong.counter[3] ), .Q1(\tuner.howLong.counter[4] ), 
    .F0(\tuner.howLong.n133[3] ), .F1(\tuner.howLong.n133[4] ), 
    .COUT1(\tuner.howLong.n2801 ), .COUT0(\tuner.howLong.n4638 ));
  tuner_howLong_SLICE_32 \tuner.howLong.SLICE_32 ( 
    .DI1(\tuner.howLong.n133[2] ), .DI0(\tuner.howLong.n133[1] ), 
    .D1(\tuner.howLong.n4635 ), .C1(\tuner.howLong.counter[2] ), 
    .D0(\tuner.howLong.n2797 ), .C0(\tuner.howLong.counter[1] ), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2797 ), .CIN1(\tuner.howLong.n4635 ), 
    .Q0(\tuner.howLong.counter[1] ), .Q1(\tuner.howLong.counter[2] ), 
    .F0(\tuner.howLong.n133[1] ), .F1(\tuner.howLong.n133[2] ), 
    .COUT1(\tuner.howLong.n2799 ), .COUT0(\tuner.howLong.n4635 ));
  tuner_howLong_SLICE_33 \tuner.howLong.SLICE_33 ( 
    .DI1(\tuner.howLong.n133[0] ), .D1(\tuner.howLong.n4632 ), 
    .C1(\tuner.howLong.counter[0] ), .B1(VCC_net), 
    .LSR(\tuner.howLong.counter_31__N_281 ), .CLK(int_osc), 
    .CIN1(\tuner.howLong.n4632 ), .Q1(\tuner.howLong.counter[0] ), 
    .F1(\tuner.howLong.n133[0] ), .COUT1(\tuner.howLong.n2797 ), 
    .COUT0(\tuner.howLong.n4632 ));
  SLICE_34 SLICE_34( .DI0(nextstate_5__N_209), .D0(nextstate_5__N_126), 
    .CLK(int_osc), .Q0(\tuner.en ), .F0(nextstate_5__N_209));
  tuner_SLICE_35 \tuner.SLICE_35 ( .DI1(\tuner.n4310 ), .DI0(\tuner.n4304 ), 
    .D1(\tuner.n4307 ), .C1(\freqThreshold0[1] ), .B1(\tuner.n2006 ), 
    .A1(\freqThreshold1[1] ), .D0(\tuner.n4301 ), .C0(\tuner.n2006 ), 
    .B0(\freqThreshold0[0] ), .A0(\freqThreshold1[0] ), .CE(n2136), 
    .CLK(int_osc), .Q0(\tuner.freqThreshold[0] ), 
    .Q1(\tuner.freqThreshold[1] ), .F0(\tuner.n4304 ), .F1(\tuner.n4310 ));
  tuner_SLICE_36 \tuner.SLICE_36 ( .DI1(\tuner.n3045 ), .DI0(\tuner.n2053 ), 
    .D1(\tuner.n4 ), .C1(nextstate_5__N_126), .B1(start), 
    .D0(nextstate_5__N_126), .C0(\tuner.nextstate_5__N_125 ), .A0(start), 
    .LSR(nreset_c), .CLK(int_osc), .Q0(nextstate_5__N_126), 
    .Q1(nextstate_5__N_121), .F0(\tuner.n2053 ), .F1(\tuner.n3045 ));
  tuner_SLICE_37 \tuner.SLICE_37 ( 
    .DI1(\nextstate_5__N_121.sig_002.FeedThruLUT ), 
    .DI0(\tuner.n425[1].sig_000.FeedThruLUT ), .D1(nextstate_5__N_121), 
    .D0(\tuner.n425[1] ), .CE(n2162), .LSR(nreset_c), .CLK(int_osc), 
    .Q0(\tuner.n425[2] ), .Q1(\tuner.n425[1] ), 
    .F0(\tuner.n425[1].sig_000.FeedThruLUT ), 
    .F1(\nextstate_5__N_121.sig_002.FeedThruLUT ));
  tuner_SLICE_40 \tuner.SLICE_40 ( .DI0(\tuner.n533[1] ), 
    .D0(\tuner.counter[1]_2 ), .C0(\counter[0] ), .CE(n2163), 
    .LSR(nextstate_5__N_126), .CLK(int_osc), .Q0(\tuner.counter[1]_2 ), 
    .F0(\tuner.n533[1] ));
  tuner_SLICE_41 \tuner.SLICE_41 ( .DI1(\tuner.n4358 ), .DI0(\tuner.n3643 ), 
    .D1(\freqThreshold1[14] ), .C1(\tuner.n2006 ), .B1(\freqThreshold0[14] ), 
    .A1(\tuner.n4355 ), .D0(nextstate_5__N_121), .C0(\tuner.n425[1] ), 
    .B0(\tuner.n3642 ), .A0(\tuner.n3805 ), .CE(n2136), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[15] ), .Q1(\tuner.freqThreshold[14] ), 
    .F0(\tuner.n3643 ), .F1(\tuner.n4358 ));
  tuner_SLICE_43 \tuner.SLICE_43 ( .DI1(\tuner.n4382 ), .DI0(\tuner.n4370 ), 
    .D1(\tuner.n4379 ), .C1(\tuner.n2006 ), .B1(\freqThreshold1[12] ), 
    .A1(\freqThreshold0[12] ), .D0(\tuner.n4367 ), .C0(\freqThreshold0[13] ), 
    .B0(\tuner.n2006 ), .A0(\freqThreshold1[13] ), .CE(n2136), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[13] ), .Q1(\tuner.freqThreshold[12] ), 
    .F0(\tuner.n4370 ), .F1(\tuner.n4382 ));
  tuner_SLICE_45 \tuner.SLICE_45 ( .DI1(\tuner.n4400 ), .DI0(\tuner.n4394 ), 
    .D1(\tuner.n4397 ), .C1(\freqThreshold0[10] ), .B1(\tuner.n2006 ), 
    .A1(\freqThreshold1[10] ), .D0(\freqThreshold0[11] ), .C0(\tuner.n4391 ), 
    .B0(\freqThreshold1[11] ), .A0(\tuner.n2006 ), .CE(n2136), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[11] ), .Q1(\tuner.freqThreshold[10] ), 
    .F0(\tuner.n4394 ), .F1(\tuner.n4400 ));
  tuner_SLICE_47 \tuner.SLICE_47 ( .DI1(\tuner.n4376 ), .DI0(\tuner.n4388 ), 
    .D1(\tuner.n4373 ), .C1(\tuner.n2006 ), .B1(\freqThreshold0[8] ), 
    .A1(\freqThreshold1[8] ), .D0(\tuner.n4385 ), .C0(\freqThreshold1[9] ), 
    .B0(\tuner.n2006 ), .A0(\freqThreshold0[9] ), .CE(n2136), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[9] ), .Q1(\tuner.freqThreshold[8] ), 
    .F0(\tuner.n4388 ), .F1(\tuner.n4376 ));
  tuner_SLICE_49 \tuner.SLICE_49 ( .DI1(\tuner.n4352 ), .DI0(\tuner.n4364 ), 
    .D1(\tuner.n4349 ), .C1(\tuner.n2006 ), .B1(\freqThreshold0[6] ), 
    .A1(\freqThreshold1[6] ), .D0(\tuner.n2006 ), .C0(\tuner.n4361 ), 
    .B0(\freqThreshold0[7] ), .A0(\freqThreshold1[7] ), .CE(n2136), 
    .CLK(int_osc), .Q0(\tuner.freqThreshold[7] ), 
    .Q1(\tuner.freqThreshold[6] ), .F0(\tuner.n4364 ), .F1(\tuner.n4352 ));
  tuner_SLICE_51 \tuner.SLICE_51 ( .DI1(\tuner.n3667 ), .DI0(\tuner.n4334 ), 
    .D1(nextstate_5__N_121), .C1(\tuner.n3666 ), .B1(\tuner.n425[1] ), 
    .A1(\tuner.n3819 ), .D0(\tuner.n4331 ), .C0(\tuner.n2006 ), 
    .B0(\freqThreshold1[5] ), .A0(\freqThreshold0[5] ), .CE(n2136), 
    .CLK(int_osc), .Q0(\tuner.freqThreshold[5] ), 
    .Q1(\tuner.freqThreshold[4] ), .F0(\tuner.n4334 ), .F1(\tuner.n3667 ));
  tuner_SLICE_53 \tuner.SLICE_53 ( .DI1(\tuner.n4316 ), .DI0(\tuner.n4322 ), 
    .D1(\tuner.n4313 ), .C1(\tuner.n2006 ), .B1(\freqThreshold0[2] ), 
    .A1(\freqThreshold1[2] ), .D0(\tuner.n4319 ), .C0(\freqThreshold0[3] ), 
    .B0(\tuner.n2006 ), .A0(\freqThreshold1[3] ), .CE(n2136), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[3] ), .Q1(\tuner.freqThreshold[2] ), 
    .F0(\tuner.n4322 ), .F1(\tuner.n4316 ));
  SLICE_56 SLICE_56( .DI1(n2159), .DI0(n2160), .D1(n1983), 
    .C1(\durThreshold[8] ), .B1(n2136), .D0(n1984), .C0(\durThreshold[7] ), 
    .A0(n2136), .CLK(int_osc), .Q0(\durThreshold[7] ), .Q1(\durThreshold[8] ), 
    .F0(n2160), .F1(n2159));
  SLICE_58 SLICE_58( .DI1(n2157), .DI0(n2158), .D1(n1983), 
    .C1(\durThreshold[11] ), .B1(n2136), .D0(\durThreshold[9] ), .C0(n1982), 
    .A0(n2136), .CLK(int_osc), .Q0(\durThreshold[9] ), .Q1(\durThreshold[11] ), 
    .F0(n2158), .F1(n2157));
  SLICE_60 SLICE_60( .DI1(n2155), .DI0(n2156), .D1(n1968), 
    .C1(\durThreshold[13] ), .B1(n2136), .D0(\durThreshold[12] ), .C0(n1982), 
    .A0(n2136), .CLK(int_osc), .Q0(\durThreshold[12] ), 
    .Q1(\durThreshold[13] ), .F0(n2156), .F1(n2155));
  SLICE_62 SLICE_62( .DI1(n2153), .DI0(n2154), .D1(n1983), 
    .C1(\durThreshold[16] ), .B1(n2136), .D0(n1984), .C0(\durThreshold[15] ), 
    .A0(n2136), .CLK(int_osc), .Q0(\durThreshold[15] ), 
    .Q1(\durThreshold[16] ), .F0(n2154), .F1(n2153));
  SLICE_64 SLICE_64( .DI1(n2151), .DI0(n2152), .D1(n1983), 
    .C1(\durThreshold[20] ), .B1(n2136), .D0(\durThreshold[17] ), .C0(n2030), 
    .A0(n2136), .CLK(int_osc), .Q0(\durThreshold[17] ), 
    .Q1(\durThreshold[20] ), .F0(n2152), .F1(n2151));
  SLICE_66 SLICE_66( .DI1(n2149), .DI0(n2150), .D1(\durThreshold[22] ), 
    .C1(n2030), .B1(n2136), .D0(n1982), .C0(\durThreshold[21] ), .A0(n2136), 
    .CLK(int_osc), .Q0(\durThreshold[21] ), .Q1(\durThreshold[22] ), 
    .F0(n2150), .F1(n2149));
  tuner_SLICE_71 \tuner.SLICE_71 ( .DI1(\n1982$n0 ), .DI0(\tuner.n4328 ), 
    .D1(\tuner.n3816 ), .C1(\tuner.n3663 ), .B1(\tuner.n425[1] ), 
    .A1(nextstate_5__N_121), .D0(\durThresh0[19] ), .C0(\durThresh1[19] ), 
    .B0(\tuner.n2006 ), .A0(\tuner.n4325 ), .CE(n2136), .CLK(int_osc), 
    .Q0(\tuner.durThreshold[19] ), .Q1(\tuner.durThreshold[18] ), 
    .F0(\tuner.n4328 ), .F1(\n1982$n0 ));
  SLICE_79 SLICE_79( .DI1(\newFlattenedMCUout[34].sig_004.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_003.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[36] ), .Q1(\newFlattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[35].sig_003.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_004.FeedThruLUT ));
  SLICE_81 SLICE_81( .DI1(\newFlattenedMCUout[32].sig_006.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_005.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[34] ), .Q1(\newFlattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[33].sig_005.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_006.FeedThruLUT ));
  SLICE_83 SLICE_83( .DI1(\newFlattenedMCUout[30].sig_008.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_007.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[32] ), .Q1(\newFlattenedMCUout[31] ), 
    .F0(\newFlattenedMCUout[31].sig_007.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_008.FeedThruLUT ));
  SLICE_85 SLICE_85( .DI1(\newFlattenedMCUout[28].sig_010.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_009.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[30] ), .Q1(\newFlattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[29].sig_009.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_010.FeedThruLUT ));
  SLICE_87 SLICE_87( .DI1(\newFlattenedMCUout[26].sig_012.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_011.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[28] ), .Q1(\newFlattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[27].sig_011.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_012.FeedThruLUT ));
  SLICE_89 SLICE_89( .DI1(\newFlattenedMCUout[24].sig_014.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_013.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[26] ), .Q1(\newFlattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[25].sig_013.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_014.FeedThruLUT ));
  SLICE_91 SLICE_91( .DI1(\newFlattenedMCUout[22].sig_016.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_015.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[24] ), .Q1(\newFlattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[23].sig_015.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_016.FeedThruLUT ));
  SLICE_93 SLICE_93( .DI1(\newFlattenedMCUout[20].sig_018.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_017.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[22] ), .Q1(\newFlattenedMCUout[21] ), 
    .F0(\newFlattenedMCUout[21].sig_017.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_018.FeedThruLUT ));
  SLICE_95 SLICE_95( .DI1(\newFlattenedMCUout[18].sig_020.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_019.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[20] ), .Q1(\newFlattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[19].sig_019.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_020.FeedThruLUT ));
  SLICE_97 SLICE_97( .DI1(\newFlattenedMCUout[16].sig_022.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_021.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[18] ), .Q1(\newFlattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[17].sig_021.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_022.FeedThruLUT ));
  SLICE_99 SLICE_99( .DI1(\newFlattenedMCUout[14].sig_024.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_023.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[16] ), .Q1(\newFlattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[15].sig_023.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_024.FeedThruLUT ));
  SLICE_101 SLICE_101( .DI1(\newFlattenedMCUout[12].sig_026.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_025.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[14] ), .Q1(\newFlattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[13].sig_025.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_026.FeedThruLUT ));
  SLICE_103 SLICE_103( .DI0(\newFlattenedMCUout[38].sig_027.FeedThruLUT ), 
    .D0(\newFlattenedMCUout[38] ), .CLK(sck_c), .Q0(\newFlattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[38].sig_027.FeedThruLUT ));
  SLICE_104 SLICE_104( .DI1(\newFlattenedMCUout[36].sig_041.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_028.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[38] ), .Q1(\newFlattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[37].sig_028.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_041.FeedThruLUT ));
  SLICE_105 SLICE_105( .DI1(\newFlattenedMCUout[10].sig_030.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_029.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[12] ), .Q1(\newFlattenedMCUout[11] ), 
    .F0(\newFlattenedMCUout[11].sig_029.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_030.FeedThruLUT ));
  SLICE_107 SLICE_107( .DI1(\newFlattenedMCUout[8].sig_032.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_031.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[10] ), .Q1(\newFlattenedMCUout[9] ), 
    .F0(\newFlattenedMCUout[9].sig_031.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_032.FeedThruLUT ));
  spi_SLICE_109 \spi.SLICE_109 ( 
    .DI1(\newFlattenedMCUout[0].sig_040.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[7]_2.sig_033.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[0] ), .D0(\spi.newFlattenedMCUout[7]_2 ), 
    .CLK(sck_c), .Q0(\newFlattenedMCUout[8] ), .Q1(\newFlattenedMCUout[1] ), 
    .F0(\spi.newFlattenedMCUout[7]_2.sig_033.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[0].sig_040.FeedThruLUT ));
  spi_SLICE_110 \spi.SLICE_110 ( 
    .DI0(\spi.newFlattenedMCUout[6]_2.sig_034.FeedThruLUT ), 
    .D0(\spi.newFlattenedMCUout[6]_2 ), .CLK(sck_c), 
    .Q0(\spi.newFlattenedMCUout[7]_2 ), 
    .F0(\spi.newFlattenedMCUout[6]_2.sig_034.FeedThruLUT ));
  spi_SLICE_111 \spi.SLICE_111 ( 
    .DI1(\spi.newFlattenedMCUout[4]_2.sig_036.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[5]_2.sig_035.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[4]_2 ), .D0(\spi.newFlattenedMCUout[5]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[6]_2 ), 
    .Q1(\spi.newFlattenedMCUout[5]_2 ), 
    .F0(\spi.newFlattenedMCUout[5]_2.sig_035.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[4]_2.sig_036.FeedThruLUT ));
  spi_SLICE_113 \spi.SLICE_113 ( 
    .DI1(\spi.newFlattenedMCUout[2]_2.sig_038.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[3]_2.sig_037.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[2]_2 ), .D0(\spi.newFlattenedMCUout[3]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[4]_2 ), 
    .Q1(\spi.newFlattenedMCUout[3]_2 ), 
    .F0(\spi.newFlattenedMCUout[3]_2.sig_037.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[2]_2.sig_038.FeedThruLUT ));
  SLICE_115 SLICE_115( .DI0(\newFlattenedMCUout[1].sig_039.FeedThruLUT ), 
    .D0(\newFlattenedMCUout[1] ), .CLK(sck_c), 
    .Q0(\spi.newFlattenedMCUout[2]_2 ), 
    .F0(\newFlattenedMCUout[1].sig_039.FeedThruLUT ));
  SLICE_118 SLICE_118( .DI0(\ce_c.sig_042.FeedThruLUT ), .D0(ce_c), 
    .CLK(int_osc), .Q0(\enabler.twoAgoCE ), .F0(\ce_c.sig_042.FeedThruLUT ));
  SLICE_119 SLICE_119( .DI1(\newFlattenedMCUout[1].sig_076.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_043.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[1] ), .D0(\newFlattenedMCUout[0] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[0] ), .Q1(\flattenedMCUout[1] ), 
    .F0(\newFlattenedMCUout[0].sig_043.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_076.FeedThruLUT ));
  SLICE_120 SLICE_120( .DI1(\enabler.twoAgoCE.sig_077.FeedThruLUT ), 
    .DI0(n2140), .D1(\enabler.twoAgoCE ), .D0(ce_c), .C0(makingMusic_c), 
    .B0(start), .A0(lastCE), .CLK(int_osc), .Q0(start), .Q1(lastCE), 
    .F0(n2140), .F1(\enabler.twoAgoCE.sig_077.FeedThruLUT ));
  SLICE_121 SLICE_121( .DI1(\newFlattenedMCUout[38].sig_045.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_044.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[38] ), .D0(\newFlattenedMCUout[39] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[39] ), .Q1(\flattenedMCUout[38] ), 
    .F0(\newFlattenedMCUout[39].sig_044.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_045.FeedThruLUT ));
  SLICE_123 SLICE_123( .DI1(\newFlattenedMCUout[36].sig_047.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_046.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[37] ), .Q1(\flattenedMCUout[36] ), 
    .F0(\newFlattenedMCUout[37].sig_046.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_047.FeedThruLUT ));
  SLICE_125 SLICE_125( .DI1(\newFlattenedMCUout[34].sig_049.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_048.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .C0(\newFlattenedMCUout[35] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[35] ), .Q1(\flattenedMCUout[34] ), 
    .F0(\newFlattenedMCUout[35].sig_048.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_049.FeedThruLUT ));
  SLICE_127 SLICE_127( .DI1(\newFlattenedMCUout[32].sig_051.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_050.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .C0(\newFlattenedMCUout[33] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[33] ), .Q1(\flattenedMCUout[32] ), 
    .F0(\newFlattenedMCUout[33].sig_050.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_051.FeedThruLUT ));
  SLICE_129 SLICE_129( .DI1(\newFlattenedMCUout[30].sig_053.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_052.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[31] ), .Q1(\flattenedMCUout[30] ), 
    .F0(\newFlattenedMCUout[31].sig_052.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_053.FeedThruLUT ));
  SLICE_131 SLICE_131( .DI1(\newFlattenedMCUout[28].sig_055.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_054.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[29] ), .Q1(\flattenedMCUout[28] ), 
    .F0(\newFlattenedMCUout[29].sig_054.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_055.FeedThruLUT ));
  SLICE_133 SLICE_133( .DI1(\newFlattenedMCUout[26].sig_057.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_056.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[27] ), .Q1(\flattenedMCUout[26] ), 
    .F0(\newFlattenedMCUout[27].sig_056.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_057.FeedThruLUT ));
  SLICE_135 SLICE_135( .DI1(\newFlattenedMCUout[24].sig_059.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_058.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[25] ), .Q1(\flattenedMCUout[24] ), 
    .F0(\newFlattenedMCUout[25].sig_058.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_059.FeedThruLUT ));
  SLICE_137 SLICE_137( .DI1(\newFlattenedMCUout[22].sig_061.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_060.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[23] ), .Q1(\flattenedMCUout[22] ), 
    .F0(\newFlattenedMCUout[23].sig_060.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_061.FeedThruLUT ));
  SLICE_139 SLICE_139( .DI1(\newFlattenedMCUout[20].sig_063.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_062.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[21] ), .Q1(\flattenedMCUout[20] ), 
    .F0(\newFlattenedMCUout[21].sig_062.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_063.FeedThruLUT ));
  SLICE_141 SLICE_141( .DI1(\newFlattenedMCUout[18].sig_065.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_064.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[19] ), .Q1(\flattenedMCUout[18] ), 
    .F0(\newFlattenedMCUout[19].sig_064.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_065.FeedThruLUT ));
  SLICE_143 SLICE_143( .DI1(\newFlattenedMCUout[16].sig_067.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_066.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[17] ), .Q1(\flattenedMCUout[16] ), 
    .F0(\newFlattenedMCUout[17].sig_066.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_067.FeedThruLUT ));
  SLICE_145 SLICE_145( .DI1(\newFlattenedMCUout[14].sig_069.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_068.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[15] ), .Q1(\flattenedMCUout[14] ), 
    .F0(\newFlattenedMCUout[15].sig_068.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_069.FeedThruLUT ));
  SLICE_147 SLICE_147( .DI1(\newFlattenedMCUout[12].sig_071.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_070.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[13] ), .Q1(\flattenedMCUout[12] ), 
    .F0(\newFlattenedMCUout[13].sig_070.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_071.FeedThruLUT ));
  SLICE_149 SLICE_149( .DI1(\newFlattenedMCUout[10].sig_073.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_072.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\enabler.flattenedMCUout[11] ), .Q1(\enabler.flattenedMCUout[10] ), 
    .F0(\newFlattenedMCUout[11].sig_072.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_073.FeedThruLUT ));
  SLICE_151 SLICE_151( .DI1(\newFlattenedMCUout[8].sig_075.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_074.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\enabler.flattenedMCUout[9] ), .Q1(\enabler.flattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[9].sig_074.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_075.FeedThruLUT ));
  tuner_SLICE_155 \tuner.SLICE_155 ( .D1(\durThresh1[15] ), .C1(\tuner.n4343 ), 
    .B1(\tuner.n2006 ), .A1(\durThresh0[15] ), .D0(\tuner.n2008 ), 
    .C0(\tuner.n3748 ), .B0(\durThresh2[15] ), .A0(\tuner.n2006 ), 
    .F0(\tuner.n4343 ), .F1(n1984));
  tuner_SLICE_157 \tuner.SLICE_157 ( .D1(\durThresh1[20] ), .C1(\tuner.n4337 ), 
    .B1(\durThresh0[20] ), .A1(\tuner.n2006 ), .D0(\durThresh2[20] ), 
    .C0(\tuner.n3744 ), .B0(\tuner.n2006 ), .A0(\tuner.n2008 ), 
    .F0(\tuner.n4337 ), .F1(n1983));
  tuner_SLICE_159 \tuner.SLICE_159 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[10] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[10] ), .F1(\tuner.n3777 ));
  tuner_SLICE_161 \tuner.SLICE_161 ( .D1(\durThresh2[15] ), .C1(\tuner.n2008 ), 
    .B1(nextstate_5__N_124), .A1(n5_adj_355), .D0(nextstate_5__N_121), 
    .C0(\tuner.n425[2] ), .A0(\tuner.n425[1] ), .F0(\tuner.n2008 ), 
    .F1(\tuner.n3663 ));
  tuner_SLICE_162 \tuner.SLICE_162 ( .D1(\tuner.n3736 ), 
    .C1(\freqThreshold2[1] ), .B1(\tuner.n2008 ), .A1(\tuner.n2006 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[1] ), .F1(\tuner.n4307 ));
  tuner_SLICE_163 \tuner.SLICE_163 ( .D1(\tuner.n3777 ), 
    .C1(\freqThreshold2[10] ), .B1(\tuner.n2006 ), .A1(\tuner.n2008 ), 
    .D0(\flattenedMCUout[21] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[10] ), .F1(\tuner.n4397 ));
  tuner_SLICE_165 \tuner.SLICE_165 ( .D1(\tuner.n3768 ), 
    .C1(\freqThreshold2[11] ), .B1(\tuner.n2008 ), .A1(\tuner.n2006 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[11] ), .F1(\tuner.n4391 ));
  tuner_SLICE_167 \tuner.SLICE_167 ( .D1(\tuner.n2008 ), 
    .C1(\freqThreshold2[0] ), .B1(\tuner.n2006 ), .A1(\tuner.n3735 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[0] ), .F1(\tuner.n4301 ));
  tuner_SLICE_169 \tuner.SLICE_169 ( .D1(\tuner.n2008 ), 
    .C1(\freqThreshold2[9] ), .B1(\tuner.n3767 ), .A1(\tuner.n2006 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[9] ), .F1(\tuner.n4385 ));
  tuner_SLICE_171 \tuner.SLICE_171 ( .D1(\tuner.n3766 ), 
    .C1(\freqThreshold2[12] ), .B1(\tuner.n2008 ), .A1(\tuner.n2006 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[12] ), .F1(\tuner.n4379 ));
  tuner_SLICE_173 \tuner.SLICE_173 ( .D1(\tuner.n3761 ), 
    .C1(\freqThreshold2[8] ), .B1(\tuner.n2006 ), .A1(\tuner.n2008 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[8] ), .F1(\tuner.n4373 ));
  tuner_SLICE_175 \tuner.SLICE_175 ( .D1(nextstate_5__N_121), .C1(\tuner.rep ), 
    .B1(done), .A1(nextstate_5__N_124), .D0(\counter[0] ), 
    .C0(\flattenedMCUout[1] ), .B0(\flattenedMCUout[0] ), 
    .A0(\tuner.counter[1]_2 ), .F0(\tuner.rep ), .F1(\tuner.n4 ));
  tuner_SLICE_177 \tuner.SLICE_177 ( .D1(\tuner.n3760 ), 
    .C1(\freqThreshold2[13] ), .B1(\tuner.n2008 ), .A1(\tuner.n2006 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[13] ), .F1(\tuner.n4367 ));
  tuner_SLICE_179 \tuner.SLICE_179 ( .D1(\tuner.n2008 ), 
    .C1(\freqThreshold2[7] ), .B1(\tuner.n2006 ), .A1(\tuner.n3759 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[7] ), .F1(\tuner.n4361 ));
  tuner_SLICE_181 \tuner.SLICE_181 ( .D1(\tuner.n3832 ), .C1(\tuner.n3690 ), 
    .B1(nextstate_5__N_121), .A1(\tuner.n425[1] ), .D0(n69), 
    .C0(\tuner.n2008 ), .B0(\durThresh2[20] ), .A0(nextstate_5__N_124), 
    .F0(\tuner.n3690 ), .F1(n1968));
  tuner_SLICE_183 \tuner.SLICE_183 ( .D1(\durThresh1[20] ), 
    .C1(\durThresh0[20] ), .A1(\tuner.n2008 ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[34] ), 
    .A0(\flattenedMCUout[32] ), .F0(\durThresh0[20] ), .F1(\tuner.n3832 ));
  tuner_SLICE_185 \tuner.SLICE_185 ( .D1(\tuner.n3758 ), 
    .C1(\freqThreshold2[14] ), .B1(\tuner.n2008 ), .A1(\tuner.n2006 ), 
    .D0(\flattenedMCUout[21] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[14] ), .F1(\tuner.n4355 ));
  tuner_SLICE_188 \tuner.SLICE_188 ( .D1(\tuner.n425[1] ), 
    .C1(nextstate_5__N_121), .B1(nextstate_5__N_124), .A1(\tuner.n425[2] ), 
    .D0(\tuner.n3663 ), .C0(\tuner.n3816 ), .B0(nextstate_5__N_121), 
    .A0(\tuner.n425[1] ), .F0(n1982), .F1(n2030));
  tuner_SLICE_189 \tuner.SLICE_189 ( .D1(\durThresh1[15] ), 
    .C1(\durThresh0[15] ), .A1(\tuner.n2008 ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[34] ), 
    .A0(\flattenedMCUout[32] ), .F0(\durThresh0[15] ), .F1(\tuner.n3816 ));
  tuner_SLICE_191 \tuner.SLICE_191 ( .D1(\tuner.n3755 ), 
    .C1(\freqThreshold2[6] ), .B1(\tuner.n2006 ), .A1(\tuner.n2008 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[22] ), 
    .F0(\freqThreshold2[6] ), .F1(\tuner.n4349 ));
  tuner_SLICE_193 \tuner.SLICE_193 ( .D1(\tuner.n3727 ), .C1(\durThresh2[23] ), 
    .B1(\tuner.n2006 ), .A1(\tuner.n2008 ), .D0(\flattenedMCUout[17] ), 
    .C0(\flattenedMCUout[18] ), .B0(\flattenedMCUout[19] ), 
    .A0(\flattenedMCUout[16] ), .F0(\durThresh2[23] ), .F1(\tuner.n4295 ));
  tuner_SLICE_195 \tuner.SLICE_195 ( .D1(\tuner.n2008 ), .C1(n2630), 
    .B1(nextstate_5__N_124), .A1(n2624), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(n2630), .F1(\tuner.n3666 ));
  aT2FT_t2F2_SLICE_196 \aT2FT.t2F2.SLICE_196 ( .D1(\flattenedMCUout[21] ), 
    .C1(\flattenedMCUout[20] ), .B1(\flattenedMCUout[23] ), 
    .A1(\flattenedMCUout[22] ), .D0(\flattenedMCUout[20] ), 
    .C0(\flattenedMCUout[21] ), .B0(\flattenedMCUout[22] ), 
    .A0(\flattenedMCUout[23] ), .F0(n2624), .F1(\freqThreshold2[2] ));
  tuner_SLICE_197 \tuner.SLICE_197 ( .D1(\tuner.n2008 ), .C1(n2646), 
    .B1(n2618), .D0(\flattenedMCUout[36] ), .C0(\flattenedMCUout[37] ), 
    .B0(\flattenedMCUout[38] ), .A0(\flattenedMCUout[39] ), .F0(n2646), 
    .F1(\tuner.n3819 ));
  tuner_SLICE_199 \tuner.SLICE_199 ( .C1(\freqThreshold3[1] ), 
    .B1(nextstate_5__N_124), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[1] ), .F1(\tuner.n3736 ));
  tuner_SLICE_201 \tuner.SLICE_201 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[2] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[2] ), .F1(\tuner.n3738 ));
  tuner_SLICE_203 \tuner.SLICE_203 ( .D1(\flattenedMCUout[15] ), 
    .C1(\tuner.n3757 ), .B1(n2654), .A1(\tuner.n2008 ), 
    .D0(\flattenedMCUout[13] ), .C0(\flattenedMCUout[14] ), 
    .A0(nextstate_5__N_124), .F0(\tuner.n3757 ), .F1(\tuner.n3642 ));
  tuner_SLICE_205 \tuner.SLICE_205 ( .D1(\tuner.n3743 ), 
    .C1(\freqThreshold2[5] ), .B1(\tuner.n2006 ), .A1(\tuner.n2008 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[5] ), .F1(\tuner.n4331 ));
  tuner_SLICE_207 \tuner.SLICE_207 ( .D1(\tuner.n2008 ), .C1(n2561), 
    .B1(\flattenedMCUout[39] ), .A1(n2640), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .F0(n2561), .F1(\tuner.n3805 ));
  tuner_SLICE_209 \tuner.SLICE_209 ( .D1(\tuner.n3695 ), .C1(\durThresh2[19] ), 
    .B1(\tuner.n2008 ), .A1(\tuner.n2006 ), .D0(\flattenedMCUout[17] ), 
    .C0(\flattenedMCUout[18] ), .B0(\flattenedMCUout[19] ), 
    .A0(\flattenedMCUout[16] ), .F0(\durThresh2[19] ), .F1(\tuner.n4325 ));
  tuner_SLICE_211 \tuner.SLICE_211 ( .C1(\freqThreshold3[3] ), 
    .A1(nextstate_5__N_124), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[3] ), .F1(\tuner.n3739 ));
  tuner_SLICE_213 \tuner.SLICE_213 ( .D1(nextstate_5__N_124), .C1(n3069), 
    .D0(\enabler.flattenedMCUout[11] ), .C0(\enabler.flattenedMCUout[10] ), 
    .B0(\enabler.flattenedMCUout[8] ), .A0(\enabler.flattenedMCUout[9] ), 
    .F0(n3069), .F1(\tuner.n3695 ));
  tuner_SLICE_215 \tuner.SLICE_215 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[5] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[5] ), .F1(\tuner.n3743 ));
  tuner_SLICE_217 \tuner.SLICE_217 ( .D1(\tuner.n3739 ), 
    .C1(\freqThreshold2[3] ), .B1(\tuner.n2006 ), .A1(\tuner.n2008 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[3] ), .F1(\tuner.n4319 ));
  tuner_SLICE_219 \tuner.SLICE_219 ( .D1(\tuner.n3738 ), .C1(\tuner.n2006 ), 
    .B1(\freqThreshold2[2] ), .A1(\tuner.n2008 ), .D0(nextstate_5__N_121), 
    .B0(\tuner.n425[1] ), .F0(\tuner.n2006 ), .F1(\tuner.n4313 ));
  tuner_SLICE_221 \tuner.SLICE_221 ( .D1(nextstate_5__N_124), .C1(n69), 
    .D0(\enabler.flattenedMCUout[8] ), .C0(\enabler.flattenedMCUout[11] ), 
    .B0(\enabler.flattenedMCUout[9] ), .A0(\enabler.flattenedMCUout[10] ), 
    .F0(n69), .F1(\tuner.n3744 ));
  tuner_SLICE_223 \tuner.SLICE_223 ( .D1(nextstate_5__N_124), .C1(n2289), 
    .D0(\enabler.flattenedMCUout[10] ), .C0(\enabler.flattenedMCUout[11] ), 
    .B0(\enabler.flattenedMCUout[8] ), .A0(\enabler.flattenedMCUout[9] ), 
    .F0(n2289), .F1(\tuner.n3727 ));
  tuner_SLICE_225 \tuner.SLICE_225 ( .D1(nextstate_5__N_124), .C1(n5_adj_355), 
    .D0(\enabler.flattenedMCUout[11] ), .C0(\enabler.flattenedMCUout[10] ), 
    .B0(\enabler.flattenedMCUout[8] ), .A0(\enabler.flattenedMCUout[9] ), 
    .F0(n5_adj_355), .F1(\tuner.n3748 ));
  tuner_SLICE_227 \tuner.SLICE_227 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[6] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[6] ), .F1(\tuner.n3755 ));
  tuner_SLICE_229 \tuner.SLICE_229 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[14] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[14] ), .F1(\tuner.n3758 ));
  tuner_SLICE_231 \tuner.SLICE_231 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[7] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[7] ), .F1(\tuner.n3759 ));
  tuner_SLICE_233 \tuner.SLICE_233 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[13] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[13] ), .F1(\tuner.n3760 ));
  tuner_SLICE_235 \tuner.SLICE_235 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[8] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[8] ), .F1(\tuner.n3761 ));
  tuner_SLICE_237 \tuner.SLICE_237 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[12] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[12] ), .F1(\tuner.n3766 ));
  tuner_SLICE_239 \tuner.SLICE_239 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[9] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[9] ), .F1(\tuner.n3767 ));
  tuner_SLICE_241 \tuner.SLICE_241 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[0] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[0] ), .F1(\tuner.n3735 ));
  tuner_SLICE_243 \tuner.SLICE_243 ( .C1(\freqThreshold3[11] ), 
    .A1(nextstate_5__N_124), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[11] ), .F1(\tuner.n3768 ));
  tuner_pitch_SLICE_245 \tuner.pitch.SLICE_245 ( .D1(\tuner.pitch.n23 ), 
    .C1(\tuner.pitch.n24 ), .B1(\tuner.pitch.n22 ), .A1(\tuner.pitch.n21 ), 
    .D0(\tuner.pitch.counter[7] ), .C0(\tuner.freqThreshold[7] ), 
    .B0(\tuner.freqThreshold[15] ), .A0(\tuner.pitch.counter[15] ), 
    .F0(\tuner.pitch.n24 ), .F1(\tuner.pitch.n30 ));
  tuner_pitch_SLICE_247 \tuner.pitch.SLICE_247 ( 
    .D0(\tuner.pitch.counter[23] ), .C0(\tuner.pitch.counter[31] ), 
    .B0(\tuner.pitch.counter[29] ), .A0(\tuner.pitch.counter[27] ), 
    .F0(\tuner.pitch.n28 ));
  tuner_pitch_SLICE_248 \tuner.pitch.SLICE_248 ( .D1(\tuner.pitch.n26 ), 
    .C1(\tuner.pitch.n25 ), .B1(\tuner.pitch.n27 ), .A1(\tuner.pitch.n28 ), 
    .D0(\tuner.pitch.counter[20] ), .C0(\tuner.pitch.counter[18] ), 
    .B0(\tuner.pitch.counter[24] ), .A0(\tuner.pitch.counter[16] ), 
    .F0(\tuner.pitch.n25 ), .F1(\tuner.pitch.n3052 ));
  tuner_pitch_SLICE_249 \tuner.pitch.SLICE_249 ( .D0(\tuner.freqThreshold[9] ), 
    .C0(\tuner.freqThreshold[10] ), .B0(\tuner.pitch.counter[9] ), 
    .A0(\tuner.pitch.counter[10] ), .F0(\tuner.pitch.n20 ));
  tuner_pitch_SLICE_250 \tuner.pitch.SLICE_250 ( .D1(\tuner.pitch.n20 ), 
    .C1(\tuner.pitch.n17 ), .B1(\tuner.pitch.n19 ), .A1(\tuner.pitch.n18 ), 
    .D0(\tuner.pitch.counter[0] ), .C0(\tuner.freqThreshold[8] ), 
    .B0(\tuner.pitch.counter[8] ), .A0(\tuner.freqThreshold[0] ), 
    .F0(\tuner.pitch.n17 ), .F1(\tuner.pitch.n29 ));
  tuner_howLong_SLICE_251 \tuner.howLong.SLICE_251 ( .D1(\tuner.howLong.n25 ), 
    .C1(\tuner.howLong.n18 ), .B1(\tuner.howLong.counter[15] ), 
    .A1(\durThreshold[15] ), .D0(\tuner.howLong.counter[8] ), 
    .C0(\tuner.howLong.counter[16] ), .B0(\durThreshold[8] ), 
    .A0(\durThreshold[16] ), .F0(\tuner.howLong.n18 ), 
    .F1(\tuner.howLong.n30 ));
  tuner_howLong_SLICE_253 \tuner.howLong.SLICE_253 ( 
    .D1(\tuner.howLong.counter[11] ), .C1(\tuner.howLong.counter[13] ), 
    .B1(\durThreshold[11] ), .A1(\durThreshold[13] ), 
    .D0(\tuner.howLong.counter[22] ), .C0(\tuner.howLong.counter[9] ), 
    .B0(\durThreshold[9] ), .A0(\durThreshold[22] ), .F0(\tuner.howLong.n22 ), 
    .F1(\tuner.howLong.n24 ));
  tuner_howLong_SLICE_254 \tuner.howLong.SLICE_254 ( .D1(\tuner.howLong.n20 ), 
    .C1(\tuner.howLong.n19 ), .B1(\tuner.howLong.n21 ), 
    .A1(\tuner.howLong.n22 ), .D0(\tuner.howLong.counter[24] ), 
    .C0(\tuner.howLong.counter[20] ), .B0(\durThreshold[20] ), 
    .A0(\durThreshold[24] ), .F0(\tuner.howLong.n19 ), 
    .F1(\tuner.howLong.n31 ));
  tuner_howLong_SLICE_256 \tuner.howLong.SLICE_256 ( .D1(\tuner.howLong.n27 ), 
    .C1(\tuner.howLong.n3049 ), .B1(\tuner.howLong.n25_adj_353 ), 
    .A1(\tuner.howLong.n26 ), .D0(\tuner.howLong.n31 ), 
    .C0(\tuner.howLong.n30 ), .B0(\tuner.howLong.n23 ), 
    .A0(\tuner.howLong.n24 ), .F0(\tuner.howLong.n3049 ), 
    .F1(\tuner.howLong.counter_31__N_281 ));
  tuner_howLong_SLICE_257 \tuner.howLong.SLICE_257 ( 
    .D1(\tuner.howLong.counter[0] ), .C1(\tuner.howLong.n24_adj_352 ), 
    .B1(\tuner.howLong.counter[31] ), .A1(\tuner.howLong.counter[4] ), 
    .D0(\tuner.howLong.counter[1] ), .C0(\tuner.howLong.counter[2] ), 
    .B0(\tuner.howLong.counter[5] ), .A0(\tuner.howLong.counter[6] ), 
    .F0(\tuner.howLong.n24_adj_352 ), .F1(\tuner.howLong.n27 ));
  tuner_howLong_SLICE_259 \tuner.howLong.SLICE_259 ( 
    .D0(\tuner.howLong.counter[14] ), .C0(\tuner.howLong.counter[30] ), 
    .B0(\tuner.howLong.counter[27] ), .A0(\tuner.howLong.counter[29] ), 
    .F0(\tuner.howLong.n26 ));
  tuner_SLICE_261 \tuner.SLICE_261 ( .DI1(\tuner.n425[2].sig_001.FeedThruLUT ), 
    .D1(\tuner.n425[2] ), .D0(nextstate_5__N_124), .C0(nextstate_5__N_121), 
    .B0(\tuner.n425[1] ), .A0(\tuner.n425[2] ), .CE(n2162), .LSR(nreset_c), 
    .CLK(int_osc), .Q1(nextstate_5__N_124), .F0(n2136), 
    .F1(\tuner.n425[2].sig_001.FeedThruLUT ));
  aD2DT_d2d2_SLICE_263 \aD2DT.d2d2.SLICE_263 ( .D1(\flattenedMCUout[18] ), 
    .C1(\flattenedMCUout[17] ), .B1(\flattenedMCUout[16] ), 
    .A1(\flattenedMCUout[19] ), .D0(\flattenedMCUout[17] ), 
    .C0(\flattenedMCUout[18] ), .B0(\flattenedMCUout[19] ), 
    .A0(\flattenedMCUout[16] ), .F0(\durThresh2[20] ), .F1(\durThresh2[15] ));
  aD2DT_d2d1_SLICE_265 \aD2DT.d2d1.SLICE_265 ( .D1(\flattenedMCUout[25] ), 
    .C1(\flattenedMCUout[26] ), .B1(\flattenedMCUout[27] ), 
    .A1(\flattenedMCUout[24] ), .D0(\flattenedMCUout[26] ), 
    .C0(\flattenedMCUout[25] ), .B0(\flattenedMCUout[24] ), 
    .A0(\flattenedMCUout[27] ), .F0(\durThresh1[19] ), .F1(\durThresh1[15] ));
  aD2DT_d2d1_SLICE_267 \aD2DT.d2d1.SLICE_267 ( .D1(\flattenedMCUout[25] ), 
    .C1(\flattenedMCUout[26] ), .B1(\flattenedMCUout[27] ), 
    .A1(\flattenedMCUout[24] ), .D0(\flattenedMCUout[26] ), 
    .C0(\flattenedMCUout[25] ), .B0(\flattenedMCUout[24] ), 
    .A0(\flattenedMCUout[27] ), .F0(\durThresh1[23] ), .F1(\durThresh1[20] ));
  aD2DT_d2d0_SLICE_269 \aD2DT.d2d0.SLICE_269 ( .D1(\flattenedMCUout[33] ), 
    .C1(\flattenedMCUout[35] ), .B1(\flattenedMCUout[34] ), 
    .A1(\flattenedMCUout[32] ), .D0(\flattenedMCUout[35] ), 
    .C0(\flattenedMCUout[33] ), .B0(\flattenedMCUout[32] ), 
    .A0(\flattenedMCUout[34] ), .F0(\durThresh0[23] ), .F1(\durThresh0[19] ));
  aT2FT_t2F1_SLICE_271 \aT2FT.t2F1.SLICE_271 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .D0(\flattenedMCUout[28] ), .C0(\flattenedMCUout[29] ), 
    .B0(\flattenedMCUout[30] ), .A0(\flattenedMCUout[31] ), 
    .F0(\freqThreshold1[1] ), .F1(n2640));
  aT2FT_t2F1_SLICE_272 \aT2FT.t2F1.SLICE_272 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[28] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[30] ), .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[30] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[0] ), 
    .F1(\freqThreshold1[2] ));
  aT2FT_t2F1_SLICE_274 \aT2FT.t2F1.SLICE_274 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[29] ), .B1(\flattenedMCUout[30] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[30] ), .F0(\freqThreshold1[3] ), 
    .F1(\freqThreshold1[5] ));
  aT2FT_t2F1_SLICE_276 \aT2FT.t2F1.SLICE_276 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[28] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[30] ), .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[30] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[10] ), 
    .F1(\freqThreshold1[6] ));
  aT2FT_t2F1_SLICE_278 \aT2FT.t2F1.SLICE_278 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[29] ), .B1(\flattenedMCUout[30] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[30] ), .F0(\freqThreshold1[11] ), 
    .F1(\freqThreshold1[7] ));
  aT2FT_t2F1_SLICE_280 \aT2FT.t2F1.SLICE_280 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[29] ), .B1(\flattenedMCUout[30] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[30] ), .F0(\freqThreshold1[13] ), 
    .F1(\freqThreshold1[8] ));
  aT2FT_t2F1_SLICE_282 \aT2FT.t2F1.SLICE_282 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[29] ), .B1(\flattenedMCUout[30] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[30] ), .F0(\freqThreshold1[12] ), 
    .F1(\freqThreshold1[9] ));
  aT2FT_t2F1_SLICE_284 \aT2FT.t2F1.SLICE_284 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[29] ), .B1(\flattenedMCUout[30] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[30] ), .F0(n2618), .F1(\freqThreshold1[14] ));
  aT2FT_t2F0_SLICE_285 \aT2FT.t2F0.SLICE_285 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[36] ), .B1(\flattenedMCUout[38] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[36] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[38] ), .F0(\freqThreshold0[9] ), 
    .F1(\freqThreshold0[8] ));
  aT2FT_t2F0_SLICE_287 \aT2FT.t2F0.SLICE_287 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[38] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[36] ), .B0(\flattenedMCUout[38] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[10] ), 
    .F1(\freqThreshold0[0] ));
  aT2FT_t2F0_SLICE_289 \aT2FT.t2F0.SLICE_289 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[38] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[36] ), .B0(\flattenedMCUout[38] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[11] ), 
    .F1(\freqThreshold0[7] ));
  aT2FT_t2F0_SLICE_291 \aT2FT.t2F0.SLICE_291 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[36] ), .B1(\flattenedMCUout[38] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[36] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[38] ), .F0(\freqThreshold0[12] ), 
    .F1(\freqThreshold0[6] ));
  aT2FT_t2F0_SLICE_293 \aT2FT.t2F0.SLICE_293 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[36] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[38] ), .D0(\flattenedMCUout[36] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[38] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[13] ), 
    .F1(\freqThreshold0[5] ));
  aT2FT_t2F0_SLICE_295 \aT2FT.t2F0.SLICE_295 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[38] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[36] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[38] ), .F0(\freqThreshold0[14] ), 
    .F1(\freqThreshold0[2] ));
  aT2FT_t2F0_SLICE_297 \aT2FT.t2F0.SLICE_297 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[38] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[36] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[38] ), .F0(\freqThreshold0[3] ), 
    .F1(\freqThreshold0[1] ));
  aT2FT_t2F2_SLICE_300 \aT2FT.t2F2.SLICE_300 ( .D0(\flattenedMCUout[21] ), 
    .C0(\flattenedMCUout[23] ), .B0(\flattenedMCUout[22] ), .F0(n2654));
  tuner_pitch_SLICE_304 \tuner.pitch.SLICE_304 ( .D0(\tuner.pitch.counter[1] ), 
    .C0(\tuner.freqThreshold[12] ), .B0(\tuner.freqThreshold[1] ), 
    .A0(\tuner.pitch.counter[12] ), .F0(\tuner.pitch.n19 ));
  tuner_pitch_SLICE_306 \tuner.pitch.SLICE_306 ( .DI1(\tuner.pitch.pwm_N_350 ), 
    .D1(\tuner.pitch.n29 ), .C1(\tuner.pitch.n30 ), .B1(\tuner.pitch.n3052 ), 
    .A1(pwm_c), .D0(\tuner.pitch.counter[30] ), .C0(\tuner.pitch.counter[21] ), 
    .B0(\tuner.pitch.counter[19] ), .A0(\tuner.pitch.counter[22] ), 
    .CLK(int_osc), .Q1(pwm_c), .F0(\tuner.pitch.n27 ), 
    .F1(\tuner.pitch.pwm_N_350 ));
  tuner_pitch_SLICE_307 \tuner.pitch.SLICE_307 ( .D0(\tuner.pitch.counter[5] ), 
    .C0(\tuner.pitch.counter[6] ), .B0(\tuner.freqThreshold[6] ), 
    .A0(\tuner.freqThreshold[5] ), .F0(\tuner.pitch.n21 ));
  tuner_pitch_SLICE_308 \tuner.pitch.SLICE_308 ( 
    .D0(\tuner.freqThreshold[11] ), .C0(\tuner.freqThreshold[13] ), 
    .B0(\tuner.pitch.counter[11] ), .A0(\tuner.pitch.counter[13] ), 
    .F0(\tuner.pitch.n23 ));
  tuner_pitch_SLICE_309 \tuner.pitch.SLICE_309 ( .D0(\tuner.pitch.n3052 ), 
    .C0(\tuner.pitch.n30 ), .B0(\tuner.en ), .A0(\tuner.pitch.n29 ), 
    .F0(\tuner.pitch.counter_31__N_346 ));
  tuner_pitch_SLICE_310 \tuner.pitch.SLICE_310 ( .D0(\tuner.freqThreshold[4] ), 
    .C0(\tuner.pitch.counter[4] ), .B0(\tuner.freqThreshold[2] ), 
    .A0(\tuner.pitch.counter[2] ), .F0(\tuner.pitch.n18 ));
  tuner_howLong_SLICE_311 \tuner.howLong.SLICE_311 ( .DI1(n2147), 
    .D1(\durThreshold[24] ), .C1(n1968), .B1(n2136), 
    .D0(\tuner.howLong.counter[17] ), .C0(\tuner.durThreshold[18] ), 
    .B0(\tuner.howLong.counter[18] ), .A0(\durThreshold[17] ), .CLK(int_osc), 
    .Q1(\durThreshold[24] ), .F0(\tuner.howLong.n20 ), .F1(n2147));
  SLICE_313 SLICE_313( .DI1(\tuner.n2133 ), .D1(\tuner.rep ), 
    .C1(nextstate_5__N_124), .B1(done), .C0(done), .A0(nreset_c), 
    .LSR(nreset_c), .CLK(int_osc), .Q1(\tuner.nextstate_5__N_125 ), .F0(n2162), 
    .F1(\tuner.n2133 ));
  tuner_pitch_SLICE_315 \tuner.pitch.SLICE_315 ( .D0(\tuner.pitch.counter[3] ), 
    .C0(\tuner.freqThreshold[3] ), .B0(\tuner.pitch.counter[14] ), 
    .A0(\tuner.freqThreshold[14] ), .F0(\tuner.pitch.n22 ));
  tuner_pitch_SLICE_316 \tuner.pitch.SLICE_316 ( 
    .D0(\tuner.pitch.counter[25] ), .C0(\tuner.pitch.counter[28] ), 
    .B0(\tuner.pitch.counter[26] ), .A0(\tuner.pitch.counter[17] ), 
    .F0(\tuner.pitch.n26 ));
  tuner_howLong_SLICE_317 \tuner.howLong.SLICE_317 ( .DI1(\tuner.n4298 ), 
    .D1(\tuner.n4295 ), .C1(\tuner.n2006 ), .B1(\durThresh1[23] ), 
    .A1(\durThresh0[23] ), .D0(\tuner.howLong.counter[23] ), 
    .C0(\durThreshold[7] ), .B0(\tuner.howLong.counter[7] ), 
    .A0(\tuner.durThreshold[23] ), .CE(n2136), .CLK(int_osc), 
    .Q1(\tuner.durThreshold[23] ), .F0(\tuner.howLong.n25 ), 
    .F1(\tuner.n4298 ));
  tuner_howLong_SLICE_318 \tuner.howLong.SLICE_318 ( 
    .D1(\tuner.durThreshold[19] ), .C1(\tuner.howLong.counter[19] ), 
    .B1(\tuner.howLong.counter[21] ), .A1(\durThreshold[21] ), 
    .D0(\tuner.howLong.counter[10] ), .C0(\tuner.durThreshold[19] ), 
    .B0(\tuner.howLong.counter[12] ), .A0(\durThreshold[12] ), 
    .F0(\tuner.howLong.n21 ), .F1(\tuner.howLong.n23 ));
  tuner_howLong_SLICE_320 \tuner.howLong.SLICE_320 ( 
    .DI1(\tuner.howLong.counter_31__N_281$n1 ), .D1(\tuner.howLong.n3049 ), 
    .C1(\tuner.howLong.n25_adj_353 ), .B1(\tuner.howLong.n26 ), 
    .A1(\tuner.howLong.n27 ), .D0(\tuner.howLong.counter[28] ), 
    .C0(\tuner.howLong.counter[3] ), .B0(\tuner.howLong.counter[26] ), 
    .A0(\tuner.howLong.counter[25] ), .CLK(int_osc), .Q1(done), 
    .F0(\tuner.howLong.n25_adj_353 ), 
    .F1(\tuner.howLong.counter_31__N_281$n1 ));
  enabler_SLICE_321 \enabler.SLICE_321 ( .DI1(\tuner.n3406 ), 
    .D1(nextstate_5__N_121), .C1(nextstate_5__N_126), .B1(makingMusic_c), 
    .A1(\tuner.nextstate_5__N_125 ), .D0(lastCE), .C0(makingMusic_c), 
    .B0(ce_c), .CLK(int_osc), .Q1(makingMusic_c), 
    .F0(\enabler.flattenedMCUout_39__N_41 ), .F1(\tuner.n3406 ));
  enabler_SLICE_322 \enabler.SLICE_322 ( .DI1(n5), .D1(nextstate_5__N_124), 
    .C1(\enabler.n2302 ), .B1(nextstate_5__N_126), .A1(\counter[0] ), 
    .D0(nextstate_5__N_121), .C0(stopCountFlag), .B0(\counter[0] ), 
    .LSR(nextstate_5__N_126), .CLK(int_osc), .Q1(\counter[0] ), 
    .F0(\enabler.n2302 ), .F1(n5));
  enabler_SLICE_323 \enabler.SLICE_323 ( .DI1(n3339), .D1(nextstate_5__N_121), 
    .C1(nextstate_5__N_124), .B1(stopCountFlag), .A1(nextstate_5__N_126), 
    .D0(nextstate_5__N_124), .C0(nextstate_5__N_121), .B0(nextstate_5__N_126), 
    .A0(stopCountFlag), .CLK(int_osc), .Q1(stopCountFlag), .F0(n2163), 
    .F1(n3339));
  SLICE_325 SLICE_325( .F0(VCC_net));
  hf_osc hf_osc( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(int_osc));
  spi_newFlattenedMCUout_i0 \spi.newFlattenedMCUout_i0 ( .PADDI(sdi_c), 
    .INCLK(sck_c), .DI0(\newFlattenedMCUout[0] ));
  ce ce_I( .PADDI(ce_c), .ce(ce));
  sdi sdi_I( .PADDI(sdi_c), .sdi(sdi));
  sck sck_I( .PADDI(sck_c), .sck(sck));
  nreset nreset_I( .PADDI(nreset_c), .nreset(nreset));
  makingMusic makingMusic_I( .PADDO(makingMusic_c), .makingMusic(makingMusic));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module tuner_pitch_SLICE_0 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module tuner_pitch_SLICE_1 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_144_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_144__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_144__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_17 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_20 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_21 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_22 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_23 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_31 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_143__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_33 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \tuner/howLong/counter_143_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_143__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \enabler/i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/en_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_35 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 \tuner/n4307_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40002 \tuner/n4301_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_36 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 \tuner/i2_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \tuner/i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20005 \tuner/state_FSM_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20005 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module tuner_SLICE_37 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 \tuner.SLICE_37_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \tuner.SLICE_37_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \tuner/state_FSM_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_40 ( input DI0, D0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40008 \tuner/i166_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/counter__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_41 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \tuner/n4355_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner.i2743_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i14 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xAEA4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x555C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_43 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40011 \tuner/n4379_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \tuner/n4367_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i12 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_45 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 \tuner/n4397_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \tuner/n4391_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i10 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_47 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \tuner/n4373_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \tuner/n4385_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFC22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_49 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \tuner/n4349_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \tuner/n4361_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_51 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40017 \tuner.i2767_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \tuner/n4331_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x5574") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_53 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \tuner/n4313_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \tuner/n4319_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_56 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1476_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1477_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_58 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1474_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 i1475_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_60 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1472_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 i1473_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1470_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1471_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_64 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1468_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 i1469_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_66 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40022 i1466_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1467_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40023 \tuner.i2764_3_lut$r0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 \tuner/n4325_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i18 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/durThreshold_i0_i19 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x10FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xB9A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_79 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_79_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_79_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i35 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i36 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_81 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_81_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_81_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i33 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i34 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_83 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_83_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_83_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_85 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_85_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_85_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_87 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_87_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_87_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_89 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_89_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_89_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_91 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_91_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_91_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_93 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_93_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_93_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_95 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_95_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_95_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_97 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_97_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_97_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_99 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_99_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_99_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_101 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_101_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_101_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_103 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40007 SLICE_103_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i39 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_104 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_104_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_104_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i37 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i38 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_105 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_105_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_105_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_107 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_107_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_107_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_109 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 \spi.SLICE_109_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \spi.SLICE_109_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_110 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40007 \spi.SLICE_110_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_111 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 \spi.SLICE_111_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \spi.SLICE_111_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_113 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 \spi.SLICE_113_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \spi.SLICE_113_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_115 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40007 SLICE_115_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_118 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40007 SLICE_118_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \enabler/twoAgoCE_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_119 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_119_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_119_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_120 ( input DI1, DI0, D1, D0, C0, B0, A0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_120_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 i1457_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \enabler/lastCE_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \enabler/start_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_121 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_121_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_121_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i33 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i34 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_123 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 SLICE_123_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_123_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i31 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i32 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_125 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_125_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 SLICE_125_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i29 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i30 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_127 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_127_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 SLICE_127_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i27 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i28 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_129_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_129_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i25 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i26 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_131 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 SLICE_131_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_131_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i23 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i24 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_133 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 SLICE_133_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_133_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i21 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i22 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_135 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_135_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_135_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i19 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i20 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_137 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_137_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_137_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_139 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_139_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_139_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_141 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_141_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_141_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_143 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 SLICE_143_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_143_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_145 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_145_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_145_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_147 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_147_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_147_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_149 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_149_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_149_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_151 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 SLICE_151_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_151_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 \tuner/n4343_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \tuner/n2008_bdd_4_lut_10 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xF2C2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xDDA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40030 \tuner/n4337_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \tuner/n2008_bdd_4_lut_9 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xF4A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xEA62") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_159 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2954_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \aT2FT/t2F3/i529_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x47DB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_161 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40034 \tuner/i2763_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \tuner/i1327_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x04F4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x00FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \tuner/n2008_bdd_4_lut_4 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 \aT2FT/t2F2/i471_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x15EE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_163 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \tuner/n2008_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \aT2FT/t2F2/i379_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xE6A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x3E57") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \tuner/n2008_bdd_4_lut_18 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \aT2FT/t2F2/i378_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xDB26") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40041 \tuner/n2008_bdd_4_lut_3 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \aT2FT/t2F2/i1388_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xF388") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x1CDC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_169 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40043 \tuner/n2008_bdd_4_lut_17 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \aT2FT/t2F2/i401_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xF588") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xFC7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \tuner/n2008_bdd_4_lut_16 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \aT2FT/t2F2/i363_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x1BD3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \tuner/n2008_bdd_4_lut_15 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \aT2FT/t2F2/i402_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x3BE9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_175 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 \tuner/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \tuner/counter_1__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xB380") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \tuner/n2008_bdd_4_lut_14 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \aT2FT/t2F2/i362_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xE1C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40041 \tuner/n2008_bdd_4_lut_13 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40050 \aT2FT/t2F2/i422_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xCB72") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 \tuner.i2791_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \tuner/i2790_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x10FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x303A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_183 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \tuner/i2789_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \aD2DT/d2d0/i1814_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \tuner/n2008_bdd_4_lut_12 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \aT2FT/t2F2/i346_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xE62B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40056 \tuner.i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \tuner.i2764_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x1F0E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_189 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \tuner/i2762_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \aD2DT/d2d0/i1870_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xE0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \tuner/n2008_bdd_4_lut_11 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \aT2FT/t2F2/i423_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x1BD4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \tuner/n2008_bdd_4_lut_2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 \aD2DT/d2d2/Mux_736_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x342C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40061 \tuner/i2766_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \aT2FT/t2F3/i586_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x550C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFB6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F2_SLICE_196 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40063 \aT2FT/t2F2/i457_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \aT2FT/t2F2/i436_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x1038") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xFF9E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_197 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \tuner/i2765_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \aT2FT/t2F0/i1039_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_199 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40066 \tuner/i2881_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \aT2FT/t2F3/i621_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x07FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_201 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2931_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \aT2FT/t2F3/i607_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x0720") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_203 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \tuner/i2742_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 \tuner/i2935_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x2272") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x0AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_205 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \tuner/n2008_bdd_4_lut_8 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \aT2FT/t2F2/i435_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x321A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_207 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40072 \tuner/i2741_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \aT2FT/t2F0/i1878_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xAAFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_209 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 \tuner/n2008_bdd_4_lut_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \aD2DT/d2d2/i759_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xCBD3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_211 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 \tuner/i2951_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \aT2FT/t2F3/i2770_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xAE46") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_213 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2958_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \enabler/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xF81F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_215 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2919_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \aT2FT/t2F3/i585_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x5434") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_217 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \tuner/n2008_bdd_4_lut_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 \aT2FT/t2F2/i2752_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xDC34") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_219 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40080 \tuner/n2008_bdd_4_lut_5 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 \tuner/i1755_1_lut_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xDA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x0033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_221 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2948_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \enabler/i1_4_lut_adj_14 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFAF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_223 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2910_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \enabler/i1606_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x0E70") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_225 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2921_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \enabler/i1_4_lut_adj_15 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xF800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_227 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2882_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \aT2FT/t2F3/i573_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x27D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_229 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2923_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \aT2FT/t2F3/i496_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xD879") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_231 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2940_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \aT2FT/t2F3/i572_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xB95C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_233 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2946_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \aT2FT/t2F3/i512_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xA98C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_235 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2941_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \aT2FT/t2F3/i552_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x75E9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_237 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2927_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \aT2FT/t2F3/i513_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x359D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_239 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2942_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \aT2FT/t2F3/i551_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xEE7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_241 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/i2924_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \aT2FT/t2F3/i1397_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x26AE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_243 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 \tuner/i2945_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \aT2FT/t2F3/i528_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xBD52") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40094 \tuner/pitch/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \tuner/pitch/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_247 ( input D0, C0, B0, A0, output F0 );

  lut40096 \tuner/pitch/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40097 \tuner/pitch/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \tuner/pitch/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_249 ( input D0, C0, B0, A0, output F0 );

  lut40099 \tuner/pitch/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40100 \tuner/pitch/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 \tuner/pitch/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_251 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40102 \tuner/howLong/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \tuner/howLong/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40104 \tuner/howLong/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 \tuner/howLong/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_254 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40097 \tuner/howLong/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 \tuner/howLong/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_256 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40107 \tuner/howLong/i3050_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \tuner/howLong/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40109 \tuner/howLong/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \tuner/howLong/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_259 ( input D0, C0, B0, A0, output F0 );

  lut40111 \tuner/howLong/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_261 ( input DI1, D1, D0, C0, B0, A0, CE, LSR, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40006 \tuner.SLICE_261_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \tuner/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module aD2DT_d2d2_SLICE_263 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40112 \aD2DT/d2d2/i1785_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \aD2DT/d2d2/i1781_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xAA80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFCEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d1_SLICE_265 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40114 \aD2DT/d2d1/i1894_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 \aD2DT/d2d1/i658_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xABD5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d1_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40116 \aD2DT/d2d1/i1898_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40117 \aD2DT/d2d1/Mux_635_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFCEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x542A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d0_SLICE_269 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40118 \aD2DT/d2d0/i1111_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40119 \aD2DT/d2d0/Mux_1088_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xE3C7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x15A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_271 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40120 \aT2FT/t2F1/i1947_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \aT2FT/t2F1/i321_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xFCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_272 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40063 \aT2FT/t2F1/i307_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \aT2FT/t2F1/i1379_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module aT2FT_t2F1_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40121 \aT2FT/t2F1/i285_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 \aT2FT/t2F1/i2749_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x321A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xB5A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_276 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40123 \aT2FT/t2F1/i273_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40124 \aT2FT/t2F1/i229_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0x1DB4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x35E7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_278 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40125 \aT2FT/t2F1/i272_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40126 \aT2FT/t2F1/i228_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xCB72") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xB4D6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_280 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40127 \aT2FT/t2F1/i252_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40128 \aT2FT/t2F1/i212_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x3BE9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xAB90") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40129 \aT2FT/t2F1/i251_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \aT2FT/t2F1/i213_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xFC7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0x1BD5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_284 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40131 \aT2FT/t2F1/i196_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40132 \aT2FT/t2F1/i286_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0xE26B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xF9FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_285 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40133 \aT2FT/t2F0/i1005_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 \aT2FT/t2F0/i1004_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x3EB9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0xFA7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_287 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40135 \aT2FT/t2F0/i1406_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \aT2FT/t2F0/i982_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x1ABA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_289 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40136 \aT2FT/t2F0/i1025_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 \aT2FT/t2F0/i981_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0xAD74") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xD2B6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_291 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40138 \aT2FT/t2F0/i1026_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40139 \aT2FT/t2F0/i966_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x1BD2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0x1DB5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_293 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40140 \aT2FT/t2F0/i1038_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40141 \aT2FT/t2F0/i965_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0x514C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xC9D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_295 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40142 \aT2FT/t2F0/i1060_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40143 \aT2FT/t2F0/i949_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0x1508") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xE64D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_297 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40144 \aT2FT/t2F0/i1074_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 \aT2FT/t2F0/i2773_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0x15EE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F2_SLICE_300 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40145 \aT2FT/t2F2/i1958_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_304 ( input D0, C0, B0, A0, output F0 );

  lut40048 \tuner/pitch/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_306 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40146 \tuner/pitch/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40147 \tuner/pitch/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/pitch/pwm ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_307 ( input D0, C0, B0, A0, output F0 );

  lut40105 \tuner/pitch/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_308 ( input D0, C0, B0, A0, output F0 );

  lut40099 \tuner/pitch/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_309 ( input D0, C0, B0, A0, output F0 );

  lut40148 \tuner/pitch/i3047_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0x3337") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_310 ( input D0, C0, B0, A0, output F0 );

  lut40149 \tuner/pitch/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_311 ( input DI1, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40022 i1464_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40150 \tuner/howLong/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_313 ( input DI1, D1, C1, B1, C0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40151 \tuner/i1_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 i1479_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \tuner/state_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_315 ( input D0, C0, B0, A0, output F0 );

  lut40153 \tuner/pitch/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_316 ( input D0, C0, B0, A0, output F0 );

  lut40147 \tuner/pitch/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_317 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40011 \tuner/n4295_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40150 \tuner/howLong/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_318 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40154 \tuner/howLong/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40155 \tuner/howLong/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_320 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40156 \tuner.howLong.SLICE_320_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40157 \tuner/howLong/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/howLong/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module enabler_SLICE_321 ( input DI1, D1, C1, B1, A1, D0, C0, B0, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40158 \tuner/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40159 \enabler/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/makingMusic ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0x0504") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module enabler_SLICE_322 ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40160 \enabler/i1622_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40161 \enabler/i1619_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/counter__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0x7466") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module enabler_SLICE_323 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40162 \enabler/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40163 \enabler/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/stopCountFlag_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0x88DC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  LUT4 #("0xCDCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_325 ( output F0 );
  wire   GNDI;

  lut40164 i3415( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module hf_osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hf_osc( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b01";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module spi_newFlattenedMCUout_i0 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \spi/newFlattenedMCUout_i0 ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module ce ( output PADDI, input ce );
  wire   GNDI;

  BB_B_B \ce_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(ce));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (ce => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module sdi ( output PADDI, input sdi );
  wire   GNDI;

  BB_B_B \sdi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sdi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sck ( output PADDI, input sck );
  wire   GNDI;

  BB_B_B \sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module nreset ( output PADDI, input nreset );
  wire   GNDI;

  BB_B_B \nreset_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(nreset));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (nreset => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module makingMusic ( input PADDO, output makingMusic );
  wire   VCCI;

  BB_B_B \makingMusic_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(makingMusic));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => makingMusic) = (0:0:0,0:0:0);
  endspecify

endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule
