
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Wed Dec  7 00:14:40 2022
// Netlist written on Wed Dec  7 00:14:48 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( ce, sdi, sck, nreset, makingMusic, pwm );
  input  ce, sdi, sck, nreset;
  output makingMusic, pwm;
  wire   \tuner.pitch.n133[0] , \tuner.pitch.n4537 , \tuner.pitch.counter[0] , 
         VCC_net, \tuner.pitch.counter_31__N_340 , int_osc, 
         \tuner.pitch.n2687 , \tuner.pitch.n133[31] , \tuner.pitch.n4636 , 
         \tuner.pitch.n2717 , \tuner.pitch.counter[31] , 
         \tuner.pitch.n133[30] , \tuner.pitch.n133[29] , \tuner.pitch.n4633 , 
         \tuner.pitch.counter[30] , \tuner.pitch.n2715 , 
         \tuner.pitch.counter[29] , \tuner.pitch.n133[28] , 
         \tuner.pitch.n133[27] , \tuner.pitch.n4630 , 
         \tuner.pitch.counter[28] , \tuner.pitch.n2713 , 
         \tuner.pitch.counter[27] , \tuner.pitch.n133[26] , 
         \tuner.pitch.n133[25] , \tuner.pitch.n4627 , 
         \tuner.pitch.counter[26] , \tuner.pitch.n2711 , 
         \tuner.pitch.counter[25] , \tuner.pitch.n133[24] , 
         \tuner.pitch.n133[23] , \tuner.pitch.n4624 , 
         \tuner.pitch.counter[24] , \tuner.pitch.n2709 , 
         \tuner.pitch.counter[23] , \tuner.pitch.n133[22] , 
         \tuner.pitch.n133[21] , \tuner.pitch.n4621 , 
         \tuner.pitch.counter[22] , \tuner.pitch.n2707 , 
         \tuner.pitch.counter[21] , \tuner.pitch.n133[20] , 
         \tuner.pitch.n133[19] , \tuner.pitch.n4618 , 
         \tuner.pitch.counter[20] , \tuner.pitch.n2705 , 
         \tuner.pitch.counter[19] , \tuner.pitch.n133[18] , 
         \tuner.pitch.n133[17] , \tuner.pitch.n4615 , 
         \tuner.pitch.counter[18] , \tuner.pitch.n2703 , 
         \tuner.pitch.counter[17] , \tuner.pitch.n133[16] , 
         \tuner.pitch.n133[15] , \tuner.pitch.n4612 , 
         \tuner.pitch.counter[16] , \tuner.pitch.n2701 , 
         \tuner.pitch.counter[15] , \tuner.pitch.n133[14] , 
         \tuner.pitch.n133[13] , \tuner.pitch.n4609 , 
         \tuner.pitch.counter[14] , \tuner.pitch.n2699 , 
         \tuner.pitch.counter[13] , \tuner.pitch.n133[12] , 
         \tuner.pitch.n133[11] , \tuner.pitch.n4606 , 
         \tuner.pitch.counter[12] , \tuner.pitch.n2697 , 
         \tuner.pitch.counter[11] , \tuner.pitch.n133[10] , 
         \tuner.pitch.n133[9] , \tuner.pitch.n4603 , \tuner.pitch.counter[10] , 
         \tuner.pitch.n2695 , \tuner.pitch.counter[9] , \tuner.pitch.n133[8] , 
         \tuner.pitch.n133[7] , \tuner.pitch.n4600 , \tuner.pitch.counter[8] , 
         \tuner.pitch.n2693 , \tuner.pitch.counter[7] , \tuner.pitch.n133[6] , 
         \tuner.pitch.n133[5] , \tuner.pitch.n4597 , \tuner.pitch.counter[6] , 
         \tuner.pitch.n2691 , \tuner.pitch.counter[5] , \tuner.pitch.n133[4] , 
         \tuner.pitch.n133[3] , \tuner.pitch.n4594 , \tuner.pitch.counter[4] , 
         \tuner.pitch.n2689 , \tuner.pitch.counter[3] , \tuner.pitch.n133[2] , 
         \tuner.pitch.n133[1] , \tuner.pitch.n4591 , \tuner.pitch.counter[2] , 
         \tuner.pitch.counter[1] , \tuner.howLong.n133[31] , 
         \tuner.howLong.n4588 , \tuner.howLong.n2750 , 
         \tuner.howLong.counter[31] , \tuner.howLong.counter_31__N_275 , 
         \tuner.howLong.n133[30] , \tuner.howLong.n133[29] , 
         \tuner.howLong.n4585 , \tuner.howLong.counter[30] , 
         \tuner.howLong.n2748 , \tuner.howLong.counter[29] , 
         \tuner.howLong.n133[28] , \tuner.howLong.n133[27] , 
         \tuner.howLong.n4582 , \tuner.howLong.counter[28] , 
         \tuner.howLong.n2746 , \tuner.howLong.counter[27] , 
         \tuner.howLong.n133[26] , \tuner.howLong.n133[25] , 
         \tuner.howLong.n4579 , \tuner.howLong.counter[26] , 
         \tuner.howLong.n2744 , \tuner.howLong.counter[25] , 
         \tuner.howLong.n133[24] , \tuner.howLong.n133[23] , 
         \tuner.howLong.n4576 , \tuner.howLong.counter[24] , 
         \tuner.howLong.n2742 , \tuner.howLong.counter[23] , 
         \tuner.howLong.n133[22] , \tuner.howLong.n133[21] , 
         \tuner.howLong.n4573 , \tuner.howLong.counter[22] , 
         \tuner.howLong.n2740 , \tuner.howLong.counter[21] , 
         \tuner.howLong.n133[20] , \tuner.howLong.n133[19] , 
         \tuner.howLong.n4570 , \tuner.howLong.counter[20] , 
         \tuner.howLong.n2738 , \tuner.howLong.counter[19] , 
         \tuner.howLong.n133[18] , \tuner.howLong.n133[17] , 
         \tuner.howLong.n4567 , \tuner.howLong.counter[18] , 
         \tuner.howLong.n2736 , \tuner.howLong.counter[17] , 
         \tuner.howLong.n133[16] , \tuner.howLong.n133[15] , 
         \tuner.howLong.n4564 , \tuner.howLong.counter[16] , 
         \tuner.howLong.n2734 , \tuner.howLong.counter[15] , 
         \tuner.howLong.n133[14] , \tuner.howLong.n133[13] , 
         \tuner.howLong.n4561 , \tuner.howLong.counter[14] , 
         \tuner.howLong.n2732 , \tuner.howLong.counter[13] , 
         \tuner.howLong.n133[12] , \tuner.howLong.n133[11] , 
         \tuner.howLong.n4558 , \tuner.howLong.counter[12] , 
         \tuner.howLong.n2730 , \tuner.howLong.counter[11] , 
         \tuner.howLong.n133[10] , \tuner.howLong.n133[9] , 
         \tuner.howLong.n4555 , \tuner.howLong.counter[10] , 
         \tuner.howLong.n2728 , \tuner.howLong.counter[9] , 
         \tuner.howLong.n133[8] , \tuner.howLong.n133[7] , 
         \tuner.howLong.n4552 , \tuner.howLong.counter[8] , 
         \tuner.howLong.n2726 , \tuner.howLong.counter[7] , 
         \tuner.howLong.n133[6] , \tuner.howLong.n133[5] , 
         \tuner.howLong.n4549 , \tuner.howLong.counter[6] , 
         \tuner.howLong.n2724 , \tuner.howLong.counter[5] , 
         \tuner.howLong.n133[4] , \tuner.howLong.n133[3] , 
         \tuner.howLong.n4546 , \tuner.howLong.counter[4] , 
         \tuner.howLong.n2722 , \tuner.howLong.counter[3] , 
         \tuner.howLong.n133[2] , \tuner.howLong.n133[1] , 
         \tuner.howLong.n4543 , \tuner.howLong.counter[2] , 
         \tuner.howLong.n2720 , \tuner.howLong.counter[1] , 
         \tuner.howLong.n133[0] , \tuner.howLong.n4540 , 
         \tuner.howLong.counter[0] , 
         \newFlattenedMCUout[1].sig_001.FeedThruLUT , 
         \spi.newFlattenedMCUout[2].sig_000.FeedThruLUT , 
         \newFlattenedMCUout[1] , \spi.newFlattenedMCUout[2] , sck_c, 
         \spi.newFlattenedMCUout[3] , 
         \spi.newFlattenedMCUout[7].sig_034.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_002.FeedThruLUT , 
         \spi.newFlattenedMCUout[7] , \newFlattenedMCUout[0] , 
         \newFlattenedMCUout[8] , \newFlattenedMCUout[38].sig_003.FeedThruLUT , 
         \newFlattenedMCUout[38] , \newFlattenedMCUout[39] , 
         \newFlattenedMCUout[36].sig_005.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_004.FeedThruLUT , 
         \newFlattenedMCUout[36] , \newFlattenedMCUout[37] , 
         \newFlattenedMCUout[34].sig_007.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_006.FeedThruLUT , 
         \newFlattenedMCUout[34] , \newFlattenedMCUout[35] , 
         \newFlattenedMCUout[32].sig_009.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_008.FeedThruLUT , 
         \newFlattenedMCUout[32] , \newFlattenedMCUout[33] , 
         \newFlattenedMCUout[30].sig_011.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_010.FeedThruLUT , 
         \newFlattenedMCUout[30] , \newFlattenedMCUout[31] , 
         \newFlattenedMCUout[28].sig_013.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_012.FeedThruLUT , 
         \newFlattenedMCUout[28] , \newFlattenedMCUout[29] , 
         \newFlattenedMCUout[26].sig_015.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_014.FeedThruLUT , 
         \newFlattenedMCUout[26] , \newFlattenedMCUout[27] , 
         \newFlattenedMCUout[24].sig_017.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_016.FeedThruLUT , 
         \newFlattenedMCUout[24] , \newFlattenedMCUout[25] , 
         \newFlattenedMCUout[22].sig_019.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_018.FeedThruLUT , 
         \newFlattenedMCUout[22] , \newFlattenedMCUout[23] , 
         \newFlattenedMCUout[20].sig_021.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_020.FeedThruLUT , 
         \newFlattenedMCUout[20] , \newFlattenedMCUout[21] , 
         \newFlattenedMCUout[18].sig_023.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_022.FeedThruLUT , 
         \newFlattenedMCUout[18] , \newFlattenedMCUout[19] , 
         \newFlattenedMCUout[16].sig_025.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_024.FeedThruLUT , 
         \newFlattenedMCUout[16] , \newFlattenedMCUout[17] , 
         \newFlattenedMCUout[14].sig_027.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_026.FeedThruLUT , 
         \newFlattenedMCUout[14] , \newFlattenedMCUout[15] , 
         \newFlattenedMCUout[12].sig_029.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_028.FeedThruLUT , 
         \newFlattenedMCUout[12] , \newFlattenedMCUout[13] , 
         \newFlattenedMCUout[10].sig_031.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_030.FeedThruLUT , 
         \newFlattenedMCUout[10] , \newFlattenedMCUout[11] , 
         \newFlattenedMCUout[8].sig_033.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_032.FeedThruLUT , \newFlattenedMCUout[9] , 
         \spi.newFlattenedMCUout[5].sig_036.FeedThruLUT , 
         \spi.newFlattenedMCUout[6].sig_035.FeedThruLUT , 
         \spi.newFlattenedMCUout[5] , \spi.newFlattenedMCUout[6] , 
         \spi.newFlattenedMCUout[3].sig_038.FeedThruLUT , 
         \spi.newFlattenedMCUout[4].sig_037.FeedThruLUT , 
         \spi.newFlattenedMCUout[4] , \tuner.n9[0] , \tuner.counter[0] , 
         \tuner.n676 , \tuner.nextstate_5__N_122 , n2133, \durThreshold[24] , 
         n2126, n4302, \tuner.n4200 , \tuner.n4308 , \tuner.n1995 , 
         \freqThreshold0[1] , \freqThreshold1[1] , \tuner.n4197 , 
         \freqThreshold1[0] , \tuner.n4305 , \freqThreshold0[0] , 
         \tuner.freqThreshold[0] , \tuner.freqThreshold[1] , \tuner.n4248 , 
         \tuner.n3555 , \freqThreshold1[14] , \freqThreshold0[14] , 
         \tuner.n4245 , \tuner.nextstate_5__N_117 , \tuner.n421[1] , 
         \tuner.n3553 , \tuner.n3554 , \tuner.freqThreshold[15] , 
         \tuner.freqThreshold[14] , \tuner.n4272 , \tuner.n4266 , 
         \freqThreshold0[12] , \tuner.n4269 , \freqThreshold1[12] , 
         \freqThreshold0[13] , \freqThreshold1[13] , \tuner.n4263 , 
         \tuner.freqThreshold[13] , \tuner.freqThreshold[12] , \tuner.n4284 , 
         \tuner.n4290 , \freqThreshold0[10] , \freqThreshold1[10] , 
         \tuner.n4281 , \freqThreshold0[11] , \freqThreshold1[11] , 
         \tuner.n4287 , \tuner.freqThreshold[11] , \tuner.freqThreshold[10] , 
         \tuner.n4260 , \tuner.n4278 , \freqThreshold0[8] , 
         \freqThreshold1[8] , \tuner.n4257 , \freqThreshold0[9] , 
         \freqThreshold1[9] , \tuner.n4275 , \tuner.freqThreshold[9] , 
         \tuner.freqThreshold[8] , \tuner.n4242 , \tuner.n4254 , 
         \freqThreshold0[6] , \freqThreshold1[6] , \tuner.n4239 , 
         \freqThreshold0[7] , \freqThreshold1[7] , \tuner.n4251 , 
         \tuner.freqThreshold[7] , \tuner.freqThreshold[6] , \tuner.n3579 , 
         \tuner.n4224 , \tuner.n3713 , \tuner.n3578 , \freqThreshold0[5] , 
         \freqThreshold1[5] , \tuner.n4221 , \tuner.freqThreshold[5] , 
         \tuner.freqThreshold[4] , \tuner.n4206 , \tuner.n4212 , 
         \freqThreshold1[2] , \freqThreshold0[2] , \tuner.n4203 , 
         \freqThreshold0[3] , \freqThreshold1[3] , \tuner.n4209 , 
         \tuner.freqThreshold[3] , \tuner.freqThreshold[2] , \tuner.n529[1] , 
         \tuner.counter[1] , \n1971$n0 , \tuner.n4218 , \tuner.n3572 , 
         \tuner.n3711 , \durThresh1[19] , \durThresh0[19] , \tuner.n4215 , 
         \tuner.durThreshold[19] , \tuner.durThreshold[18] , \tuner.n2122 , 
         \tuner.nextstate_5__N_121.sig_040.FeedThruLUT , 
         \tuner.nextstate_5__N_120 , done, \tuner.rep , 
         \tuner.nextstate_5__N_121 , nreset_c, 
         \tuner.n421[1].sig_042.FeedThruLUT , 
         \tuner.nextstate_5__N_117.sig_041.FeedThruLUT , n2148, 
         \tuner.n421[2] , n2144, n2145, \durThreshold[8] , n1972, 
         \durThreshold[7] , n1973, n2142, n2143, \durThreshold[11] , 
         \durThreshold[9] , n1971, n2140, n2141, \durThreshold[13] , 
         \durThreshold[12] , n2138, n2139, \durThreshold[16] , 
         \durThreshold[15] , n2136, n2137, \durThreshold[20] , 
         \durThreshold[17] , n2019, n2134, n2135, \durThreshold[22] , 
         \durThreshold[21] , \tuner.nextstate_5__N_203 , \tuner.en , 
         \newFlattenedMCUout[38].sig_045.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_044.FeedThruLUT , n2123, ce_c, 
         \flattenedMCUout[39] , \flattenedMCUout[38] , 
         \newFlattenedMCUout[36].sig_047.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_046.FeedThruLUT , \flattenedMCUout[37] , 
         \flattenedMCUout[36] , \newFlattenedMCUout[34].sig_049.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_048.FeedThruLUT , \flattenedMCUout[35] , 
         \flattenedMCUout[34] , \newFlattenedMCUout[32].sig_051.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_050.FeedThruLUT , \flattenedMCUout[33] , 
         \flattenedMCUout[32] , \newFlattenedMCUout[30].sig_053.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_052.FeedThruLUT , \flattenedMCUout[31] , 
         \flattenedMCUout[30] , \newFlattenedMCUout[28].sig_055.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_054.FeedThruLUT , \flattenedMCUout[29] , 
         \flattenedMCUout[28] , \newFlattenedMCUout[26].sig_057.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_056.FeedThruLUT , \flattenedMCUout[27] , 
         \flattenedMCUout[26] , \newFlattenedMCUout[24].sig_059.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_058.FeedThruLUT , \flattenedMCUout[25] , 
         \flattenedMCUout[24] , \newFlattenedMCUout[22].sig_061.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_060.FeedThruLUT , \flattenedMCUout[23] , 
         \flattenedMCUout[22] , \newFlattenedMCUout[20].sig_063.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_062.FeedThruLUT , \flattenedMCUout[21] , 
         \flattenedMCUout[20] , \newFlattenedMCUout[18].sig_065.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_064.FeedThruLUT , \flattenedMCUout[19] , 
         \flattenedMCUout[18] , \newFlattenedMCUout[16].sig_067.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_066.FeedThruLUT , \flattenedMCUout[17] , 
         \flattenedMCUout[16] , \newFlattenedMCUout[14].sig_069.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_068.FeedThruLUT , \flattenedMCUout[15] , 
         \flattenedMCUout[14] , \newFlattenedMCUout[12].sig_071.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_070.FeedThruLUT , \flattenedMCUout[13] , 
         \flattenedMCUout[12] , \newFlattenedMCUout[10].sig_073.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_072.FeedThruLUT , \flattenedMCUout[11] , 
         \flattenedMCUout[10] , \newFlattenedMCUout[8].sig_075.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_074.FeedThruLUT , \flattenedMCUout[9] , 
         \flattenedMCUout[8] , \newFlattenedMCUout[0].sig_077.FeedThruLUT , 
         \newFlattenedMCUout[1].sig_076.FeedThruLUT , \flattenedMCUout[1] , 
         \flattenedMCUout[0] , \tuner.n4299 , \durThresh1[20] , 
         \durThresh0[20] , \tuner.n1997 , \durThresh2[20] , \tuner.n3690 , 
         \tuner.n4233 , \durThresh0[15] , \durThresh1[15] , \tuner.n3656 , 
         \durThresh2[15] , \tuner.n3655 , \tuner.n4227 , \freqThreshold2[3] , 
         \tuner.n3612 , \freqThreshold2[2] , \tuner.n3608 , 
         \freqThreshold2[0] , \tuner.n3692 , \durThresh2[23] , \tuner.n3689 , 
         \tuner.n4293 , \freqThreshold2[11] , \tuner.n3686 , 
         \freqThreshold2[10] , \tuner.n3676 , \freqThreshold2[9] , 
         \tuner.n3675 , \freqThreshold2[1] , \tuner.n3607 , 
         \freqThreshold2[12] , \tuner.n3674 , \freqThreshold3[3] , 
         \tuner.n3673 , \freqThreshold2[13] , \tuner.n2111 , 
         \freqThreshold2[8] , \tuner.n3672 , \tuner.n4 , \freqThreshold2[7] , 
         \tuner.n3671 , n2537, n2531, \tuner.n3668 , n2555, n2525, 
         \durThresh3[19] , \tuner.n3621 , \freqThreshold3[5] , \tuner.n3650 , 
         \freqThreshold2[14] , \tuner.n3670 , \tuner.n3669 , \tuner.n3636 , 
         n2473, \freqThreshold2[6] , \tuner.n3666 , \durThresh3[20] , 
         \freqThreshold3[6] , \durThresh2[19] , \freqThreshold3[14] , 
         \freqThreshold3[7] , \freqThreshold3[8] , \freqThreshold3[13] , 
         \freqThreshold3[12] , \freqThreshold3[1] , \freqThreshold2[5] , 
         \freqThreshold3[9] , \freqThreshold3[10] , \freqThreshold3[11] , 
         \durThresh3[23] , \freqThreshold3[0] , \freqThreshold3[2] , 
         \tuner.pitch.n23 , \tuner.pitch.n24 , \tuner.pitch.n21 , 
         \tuner.pitch.n22 , \tuner.pitch.n30 , \tuner.pitch.n28 , 
         \tuner.pitch.n27 , \tuner.pitch.n25 , \tuner.pitch.n26 , 
         \tuner.pitch.n2977 , \tuner.pitch.n20 , \tuner.pitch.n19 , 
         \tuner.pitch.n17 , \tuner.pitch.n18 , \tuner.pitch.n29 , 
         \tuner.howLong.n25 , \tuner.howLong.n18 , \tuner.howLong.n30 , 
         \tuner.howLong.n22 , \tuner.howLong.n20 , \tuner.howLong.n19 , 
         \tuner.howLong.n21 , \tuner.howLong.n31 , \tuner.howLong.n24 , 
         \tuner.howLong.n25_adj_346 , \tuner.howLong.n27 , 
         \tuner.howLong.n2974 , \tuner.howLong.n26 , \tuner.howLong.n23 , 
         \tuner.howLong.n24_adj_345 , \tuner.howLong.counter_31__N_275$n1 , 
         \tuner.n421[2].sig_043.FeedThruLUT , \durThresh1[23] , 
         \durThresh0[23] , \tuner.pitch.pwm_N_344 , pwm_c, \tuner.n3324 , 
         \tuner.n2972 , \tuner.nextstate_5__N_117.sig_039.FeedThruLUT , 
         makingMusic_c, \tuner.n2132 , \tuner.stopCountFlag , \tuner.n4296 , 
         \tuner.durThreshold[23] , sdi_c;

  tuner_pitch_SLICE_0 \tuner.pitch.SLICE_0 ( .DI1(\tuner.pitch.n133[0] ), 
    .D1(\tuner.pitch.n4537 ), .C1(\tuner.pitch.counter[0] ), .B1(VCC_net), 
    .LSR(\tuner.pitch.counter_31__N_340 ), .CLK(int_osc), 
    .CIN1(\tuner.pitch.n4537 ), .Q1(\tuner.pitch.counter[0] ), 
    .F1(\tuner.pitch.n133[0] ), .COUT1(\tuner.pitch.n2687 ), 
    .COUT0(\tuner.pitch.n4537 ));
  tuner_pitch_SLICE_1 \tuner.pitch.SLICE_1 ( .DI0(\tuner.pitch.n133[31] ), 
    .D1(\tuner.pitch.n4636 ), .D0(\tuner.pitch.n2717 ), 
    .C0(\tuner.pitch.counter[31] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2717 ), .CIN1(\tuner.pitch.n4636 ), 
    .Q0(\tuner.pitch.counter[31] ), .F0(\tuner.pitch.n133[31] ), 
    .COUT0(\tuner.pitch.n4636 ));
  tuner_pitch_SLICE_2 \tuner.pitch.SLICE_2 ( .DI1(\tuner.pitch.n133[30] ), 
    .DI0(\tuner.pitch.n133[29] ), .D1(\tuner.pitch.n4633 ), 
    .C1(\tuner.pitch.counter[30] ), .D0(\tuner.pitch.n2715 ), 
    .C0(\tuner.pitch.counter[29] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2715 ), .CIN1(\tuner.pitch.n4633 ), 
    .Q0(\tuner.pitch.counter[29] ), .Q1(\tuner.pitch.counter[30] ), 
    .F0(\tuner.pitch.n133[29] ), .F1(\tuner.pitch.n133[30] ), 
    .COUT1(\tuner.pitch.n2717 ), .COUT0(\tuner.pitch.n4633 ));
  tuner_pitch_SLICE_3 \tuner.pitch.SLICE_3 ( .DI1(\tuner.pitch.n133[28] ), 
    .DI0(\tuner.pitch.n133[27] ), .D1(\tuner.pitch.n4630 ), 
    .C1(\tuner.pitch.counter[28] ), .D0(\tuner.pitch.n2713 ), 
    .C0(\tuner.pitch.counter[27] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2713 ), .CIN1(\tuner.pitch.n4630 ), 
    .Q0(\tuner.pitch.counter[27] ), .Q1(\tuner.pitch.counter[28] ), 
    .F0(\tuner.pitch.n133[27] ), .F1(\tuner.pitch.n133[28] ), 
    .COUT1(\tuner.pitch.n2715 ), .COUT0(\tuner.pitch.n4630 ));
  tuner_pitch_SLICE_4 \tuner.pitch.SLICE_4 ( .DI1(\tuner.pitch.n133[26] ), 
    .DI0(\tuner.pitch.n133[25] ), .D1(\tuner.pitch.n4627 ), 
    .C1(\tuner.pitch.counter[26] ), .D0(\tuner.pitch.n2711 ), 
    .C0(\tuner.pitch.counter[25] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2711 ), .CIN1(\tuner.pitch.n4627 ), 
    .Q0(\tuner.pitch.counter[25] ), .Q1(\tuner.pitch.counter[26] ), 
    .F0(\tuner.pitch.n133[25] ), .F1(\tuner.pitch.n133[26] ), 
    .COUT1(\tuner.pitch.n2713 ), .COUT0(\tuner.pitch.n4627 ));
  tuner_pitch_SLICE_5 \tuner.pitch.SLICE_5 ( .DI1(\tuner.pitch.n133[24] ), 
    .DI0(\tuner.pitch.n133[23] ), .D1(\tuner.pitch.n4624 ), 
    .C1(\tuner.pitch.counter[24] ), .D0(\tuner.pitch.n2709 ), 
    .C0(\tuner.pitch.counter[23] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2709 ), .CIN1(\tuner.pitch.n4624 ), 
    .Q0(\tuner.pitch.counter[23] ), .Q1(\tuner.pitch.counter[24] ), 
    .F0(\tuner.pitch.n133[23] ), .F1(\tuner.pitch.n133[24] ), 
    .COUT1(\tuner.pitch.n2711 ), .COUT0(\tuner.pitch.n4624 ));
  tuner_pitch_SLICE_6 \tuner.pitch.SLICE_6 ( .DI1(\tuner.pitch.n133[22] ), 
    .DI0(\tuner.pitch.n133[21] ), .D1(\tuner.pitch.n4621 ), 
    .C1(\tuner.pitch.counter[22] ), .D0(\tuner.pitch.n2707 ), 
    .C0(\tuner.pitch.counter[21] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2707 ), .CIN1(\tuner.pitch.n4621 ), 
    .Q0(\tuner.pitch.counter[21] ), .Q1(\tuner.pitch.counter[22] ), 
    .F0(\tuner.pitch.n133[21] ), .F1(\tuner.pitch.n133[22] ), 
    .COUT1(\tuner.pitch.n2709 ), .COUT0(\tuner.pitch.n4621 ));
  tuner_pitch_SLICE_7 \tuner.pitch.SLICE_7 ( .DI1(\tuner.pitch.n133[20] ), 
    .DI0(\tuner.pitch.n133[19] ), .D1(\tuner.pitch.n4618 ), 
    .C1(\tuner.pitch.counter[20] ), .D0(\tuner.pitch.n2705 ), 
    .C0(\tuner.pitch.counter[19] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2705 ), .CIN1(\tuner.pitch.n4618 ), 
    .Q0(\tuner.pitch.counter[19] ), .Q1(\tuner.pitch.counter[20] ), 
    .F0(\tuner.pitch.n133[19] ), .F1(\tuner.pitch.n133[20] ), 
    .COUT1(\tuner.pitch.n2707 ), .COUT0(\tuner.pitch.n4618 ));
  tuner_pitch_SLICE_8 \tuner.pitch.SLICE_8 ( .DI1(\tuner.pitch.n133[18] ), 
    .DI0(\tuner.pitch.n133[17] ), .D1(\tuner.pitch.n4615 ), 
    .C1(\tuner.pitch.counter[18] ), .D0(\tuner.pitch.n2703 ), 
    .C0(\tuner.pitch.counter[17] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2703 ), .CIN1(\tuner.pitch.n4615 ), 
    .Q0(\tuner.pitch.counter[17] ), .Q1(\tuner.pitch.counter[18] ), 
    .F0(\tuner.pitch.n133[17] ), .F1(\tuner.pitch.n133[18] ), 
    .COUT1(\tuner.pitch.n2705 ), .COUT0(\tuner.pitch.n4615 ));
  tuner_pitch_SLICE_9 \tuner.pitch.SLICE_9 ( .DI1(\tuner.pitch.n133[16] ), 
    .DI0(\tuner.pitch.n133[15] ), .D1(\tuner.pitch.n4612 ), 
    .C1(\tuner.pitch.counter[16] ), .D0(\tuner.pitch.n2701 ), 
    .C0(\tuner.pitch.counter[15] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2701 ), .CIN1(\tuner.pitch.n4612 ), 
    .Q0(\tuner.pitch.counter[15] ), .Q1(\tuner.pitch.counter[16] ), 
    .F0(\tuner.pitch.n133[15] ), .F1(\tuner.pitch.n133[16] ), 
    .COUT1(\tuner.pitch.n2703 ), .COUT0(\tuner.pitch.n4612 ));
  tuner_pitch_SLICE_10 \tuner.pitch.SLICE_10 ( .DI1(\tuner.pitch.n133[14] ), 
    .DI0(\tuner.pitch.n133[13] ), .D1(\tuner.pitch.n4609 ), 
    .C1(\tuner.pitch.counter[14] ), .D0(\tuner.pitch.n2699 ), 
    .C0(\tuner.pitch.counter[13] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2699 ), .CIN1(\tuner.pitch.n4609 ), 
    .Q0(\tuner.pitch.counter[13] ), .Q1(\tuner.pitch.counter[14] ), 
    .F0(\tuner.pitch.n133[13] ), .F1(\tuner.pitch.n133[14] ), 
    .COUT1(\tuner.pitch.n2701 ), .COUT0(\tuner.pitch.n4609 ));
  tuner_pitch_SLICE_11 \tuner.pitch.SLICE_11 ( .DI1(\tuner.pitch.n133[12] ), 
    .DI0(\tuner.pitch.n133[11] ), .D1(\tuner.pitch.n4606 ), 
    .C1(\tuner.pitch.counter[12] ), .D0(\tuner.pitch.n2697 ), 
    .C0(\tuner.pitch.counter[11] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2697 ), .CIN1(\tuner.pitch.n4606 ), 
    .Q0(\tuner.pitch.counter[11] ), .Q1(\tuner.pitch.counter[12] ), 
    .F0(\tuner.pitch.n133[11] ), .F1(\tuner.pitch.n133[12] ), 
    .COUT1(\tuner.pitch.n2699 ), .COUT0(\tuner.pitch.n4606 ));
  tuner_pitch_SLICE_12 \tuner.pitch.SLICE_12 ( .DI1(\tuner.pitch.n133[10] ), 
    .DI0(\tuner.pitch.n133[9] ), .D1(\tuner.pitch.n4603 ), 
    .C1(\tuner.pitch.counter[10] ), .D0(\tuner.pitch.n2695 ), 
    .C0(\tuner.pitch.counter[9] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2695 ), .CIN1(\tuner.pitch.n4603 ), 
    .Q0(\tuner.pitch.counter[9] ), .Q1(\tuner.pitch.counter[10] ), 
    .F0(\tuner.pitch.n133[9] ), .F1(\tuner.pitch.n133[10] ), 
    .COUT1(\tuner.pitch.n2697 ), .COUT0(\tuner.pitch.n4603 ));
  tuner_pitch_SLICE_13 \tuner.pitch.SLICE_13 ( .DI1(\tuner.pitch.n133[8] ), 
    .DI0(\tuner.pitch.n133[7] ), .D1(\tuner.pitch.n4600 ), 
    .C1(\tuner.pitch.counter[8] ), .D0(\tuner.pitch.n2693 ), 
    .C0(\tuner.pitch.counter[7] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2693 ), .CIN1(\tuner.pitch.n4600 ), 
    .Q0(\tuner.pitch.counter[7] ), .Q1(\tuner.pitch.counter[8] ), 
    .F0(\tuner.pitch.n133[7] ), .F1(\tuner.pitch.n133[8] ), 
    .COUT1(\tuner.pitch.n2695 ), .COUT0(\tuner.pitch.n4600 ));
  tuner_pitch_SLICE_14 \tuner.pitch.SLICE_14 ( .DI1(\tuner.pitch.n133[6] ), 
    .DI0(\tuner.pitch.n133[5] ), .D1(\tuner.pitch.n4597 ), 
    .C1(\tuner.pitch.counter[6] ), .D0(\tuner.pitch.n2691 ), 
    .C0(\tuner.pitch.counter[5] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2691 ), .CIN1(\tuner.pitch.n4597 ), 
    .Q0(\tuner.pitch.counter[5] ), .Q1(\tuner.pitch.counter[6] ), 
    .F0(\tuner.pitch.n133[5] ), .F1(\tuner.pitch.n133[6] ), 
    .COUT1(\tuner.pitch.n2693 ), .COUT0(\tuner.pitch.n4597 ));
  tuner_pitch_SLICE_15 \tuner.pitch.SLICE_15 ( .DI1(\tuner.pitch.n133[4] ), 
    .DI0(\tuner.pitch.n133[3] ), .D1(\tuner.pitch.n4594 ), 
    .C1(\tuner.pitch.counter[4] ), .D0(\tuner.pitch.n2689 ), 
    .C0(\tuner.pitch.counter[3] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2689 ), .CIN1(\tuner.pitch.n4594 ), 
    .Q0(\tuner.pitch.counter[3] ), .Q1(\tuner.pitch.counter[4] ), 
    .F0(\tuner.pitch.n133[3] ), .F1(\tuner.pitch.n133[4] ), 
    .COUT1(\tuner.pitch.n2691 ), .COUT0(\tuner.pitch.n4594 ));
  tuner_pitch_SLICE_16 \tuner.pitch.SLICE_16 ( .DI1(\tuner.pitch.n133[2] ), 
    .DI0(\tuner.pitch.n133[1] ), .D1(\tuner.pitch.n4591 ), 
    .C1(\tuner.pitch.counter[2] ), .D0(\tuner.pitch.n2687 ), 
    .C0(\tuner.pitch.counter[1] ), .LSR(\tuner.pitch.counter_31__N_340 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2687 ), .CIN1(\tuner.pitch.n4591 ), 
    .Q0(\tuner.pitch.counter[1] ), .Q1(\tuner.pitch.counter[2] ), 
    .F0(\tuner.pitch.n133[1] ), .F1(\tuner.pitch.n133[2] ), 
    .COUT1(\tuner.pitch.n2689 ), .COUT0(\tuner.pitch.n4591 ));
  tuner_howLong_SLICE_17 \tuner.howLong.SLICE_17 ( 
    .DI0(\tuner.howLong.n133[31] ), .D1(\tuner.howLong.n4588 ), 
    .D0(\tuner.howLong.n2750 ), .C0(\tuner.howLong.counter[31] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2750 ), .CIN1(\tuner.howLong.n4588 ), 
    .Q0(\tuner.howLong.counter[31] ), .F0(\tuner.howLong.n133[31] ), 
    .COUT0(\tuner.howLong.n4588 ));
  tuner_howLong_SLICE_18 \tuner.howLong.SLICE_18 ( 
    .DI1(\tuner.howLong.n133[30] ), .DI0(\tuner.howLong.n133[29] ), 
    .D1(\tuner.howLong.n4585 ), .C1(\tuner.howLong.counter[30] ), 
    .D0(\tuner.howLong.n2748 ), .C0(\tuner.howLong.counter[29] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2748 ), .CIN1(\tuner.howLong.n4585 ), 
    .Q0(\tuner.howLong.counter[29] ), .Q1(\tuner.howLong.counter[30] ), 
    .F0(\tuner.howLong.n133[29] ), .F1(\tuner.howLong.n133[30] ), 
    .COUT1(\tuner.howLong.n2750 ), .COUT0(\tuner.howLong.n4585 ));
  tuner_howLong_SLICE_19 \tuner.howLong.SLICE_19 ( 
    .DI1(\tuner.howLong.n133[28] ), .DI0(\tuner.howLong.n133[27] ), 
    .D1(\tuner.howLong.n4582 ), .C1(\tuner.howLong.counter[28] ), 
    .D0(\tuner.howLong.n2746 ), .C0(\tuner.howLong.counter[27] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2746 ), .CIN1(\tuner.howLong.n4582 ), 
    .Q0(\tuner.howLong.counter[27] ), .Q1(\tuner.howLong.counter[28] ), 
    .F0(\tuner.howLong.n133[27] ), .F1(\tuner.howLong.n133[28] ), 
    .COUT1(\tuner.howLong.n2748 ), .COUT0(\tuner.howLong.n4582 ));
  tuner_howLong_SLICE_20 \tuner.howLong.SLICE_20 ( 
    .DI1(\tuner.howLong.n133[26] ), .DI0(\tuner.howLong.n133[25] ), 
    .D1(\tuner.howLong.n4579 ), .C1(\tuner.howLong.counter[26] ), 
    .D0(\tuner.howLong.n2744 ), .C0(\tuner.howLong.counter[25] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2744 ), .CIN1(\tuner.howLong.n4579 ), 
    .Q0(\tuner.howLong.counter[25] ), .Q1(\tuner.howLong.counter[26] ), 
    .F0(\tuner.howLong.n133[25] ), .F1(\tuner.howLong.n133[26] ), 
    .COUT1(\tuner.howLong.n2746 ), .COUT0(\tuner.howLong.n4579 ));
  tuner_howLong_SLICE_21 \tuner.howLong.SLICE_21 ( 
    .DI1(\tuner.howLong.n133[24] ), .DI0(\tuner.howLong.n133[23] ), 
    .D1(\tuner.howLong.n4576 ), .C1(\tuner.howLong.counter[24] ), 
    .D0(\tuner.howLong.n2742 ), .C0(\tuner.howLong.counter[23] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2742 ), .CIN1(\tuner.howLong.n4576 ), 
    .Q0(\tuner.howLong.counter[23] ), .Q1(\tuner.howLong.counter[24] ), 
    .F0(\tuner.howLong.n133[23] ), .F1(\tuner.howLong.n133[24] ), 
    .COUT1(\tuner.howLong.n2744 ), .COUT0(\tuner.howLong.n4576 ));
  tuner_howLong_SLICE_22 \tuner.howLong.SLICE_22 ( 
    .DI1(\tuner.howLong.n133[22] ), .DI0(\tuner.howLong.n133[21] ), 
    .D1(\tuner.howLong.n4573 ), .C1(\tuner.howLong.counter[22] ), 
    .D0(\tuner.howLong.n2740 ), .C0(\tuner.howLong.counter[21] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2740 ), .CIN1(\tuner.howLong.n4573 ), 
    .Q0(\tuner.howLong.counter[21] ), .Q1(\tuner.howLong.counter[22] ), 
    .F0(\tuner.howLong.n133[21] ), .F1(\tuner.howLong.n133[22] ), 
    .COUT1(\tuner.howLong.n2742 ), .COUT0(\tuner.howLong.n4573 ));
  tuner_howLong_SLICE_23 \tuner.howLong.SLICE_23 ( 
    .DI1(\tuner.howLong.n133[20] ), .DI0(\tuner.howLong.n133[19] ), 
    .D1(\tuner.howLong.n4570 ), .C1(\tuner.howLong.counter[20] ), 
    .D0(\tuner.howLong.n2738 ), .C0(\tuner.howLong.counter[19] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2738 ), .CIN1(\tuner.howLong.n4570 ), 
    .Q0(\tuner.howLong.counter[19] ), .Q1(\tuner.howLong.counter[20] ), 
    .F0(\tuner.howLong.n133[19] ), .F1(\tuner.howLong.n133[20] ), 
    .COUT1(\tuner.howLong.n2740 ), .COUT0(\tuner.howLong.n4570 ));
  tuner_howLong_SLICE_24 \tuner.howLong.SLICE_24 ( 
    .DI1(\tuner.howLong.n133[18] ), .DI0(\tuner.howLong.n133[17] ), 
    .D1(\tuner.howLong.n4567 ), .C1(\tuner.howLong.counter[18] ), 
    .D0(\tuner.howLong.n2736 ), .C0(\tuner.howLong.counter[17] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2736 ), .CIN1(\tuner.howLong.n4567 ), 
    .Q0(\tuner.howLong.counter[17] ), .Q1(\tuner.howLong.counter[18] ), 
    .F0(\tuner.howLong.n133[17] ), .F1(\tuner.howLong.n133[18] ), 
    .COUT1(\tuner.howLong.n2738 ), .COUT0(\tuner.howLong.n4567 ));
  tuner_howLong_SLICE_25 \tuner.howLong.SLICE_25 ( 
    .DI1(\tuner.howLong.n133[16] ), .DI0(\tuner.howLong.n133[15] ), 
    .D1(\tuner.howLong.n4564 ), .C1(\tuner.howLong.counter[16] ), 
    .D0(\tuner.howLong.n2734 ), .C0(\tuner.howLong.counter[15] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2734 ), .CIN1(\tuner.howLong.n4564 ), 
    .Q0(\tuner.howLong.counter[15] ), .Q1(\tuner.howLong.counter[16] ), 
    .F0(\tuner.howLong.n133[15] ), .F1(\tuner.howLong.n133[16] ), 
    .COUT1(\tuner.howLong.n2736 ), .COUT0(\tuner.howLong.n4564 ));
  tuner_howLong_SLICE_26 \tuner.howLong.SLICE_26 ( 
    .DI1(\tuner.howLong.n133[14] ), .DI0(\tuner.howLong.n133[13] ), 
    .D1(\tuner.howLong.n4561 ), .C1(\tuner.howLong.counter[14] ), 
    .D0(\tuner.howLong.n2732 ), .C0(\tuner.howLong.counter[13] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2732 ), .CIN1(\tuner.howLong.n4561 ), 
    .Q0(\tuner.howLong.counter[13] ), .Q1(\tuner.howLong.counter[14] ), 
    .F0(\tuner.howLong.n133[13] ), .F1(\tuner.howLong.n133[14] ), 
    .COUT1(\tuner.howLong.n2734 ), .COUT0(\tuner.howLong.n4561 ));
  tuner_howLong_SLICE_27 \tuner.howLong.SLICE_27 ( 
    .DI1(\tuner.howLong.n133[12] ), .DI0(\tuner.howLong.n133[11] ), 
    .D1(\tuner.howLong.n4558 ), .C1(\tuner.howLong.counter[12] ), 
    .D0(\tuner.howLong.n2730 ), .C0(\tuner.howLong.counter[11] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2730 ), .CIN1(\tuner.howLong.n4558 ), 
    .Q0(\tuner.howLong.counter[11] ), .Q1(\tuner.howLong.counter[12] ), 
    .F0(\tuner.howLong.n133[11] ), .F1(\tuner.howLong.n133[12] ), 
    .COUT1(\tuner.howLong.n2732 ), .COUT0(\tuner.howLong.n4558 ));
  tuner_howLong_SLICE_28 \tuner.howLong.SLICE_28 ( 
    .DI1(\tuner.howLong.n133[10] ), .DI0(\tuner.howLong.n133[9] ), 
    .D1(\tuner.howLong.n4555 ), .C1(\tuner.howLong.counter[10] ), 
    .D0(\tuner.howLong.n2728 ), .C0(\tuner.howLong.counter[9] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2728 ), .CIN1(\tuner.howLong.n4555 ), 
    .Q0(\tuner.howLong.counter[9] ), .Q1(\tuner.howLong.counter[10] ), 
    .F0(\tuner.howLong.n133[9] ), .F1(\tuner.howLong.n133[10] ), 
    .COUT1(\tuner.howLong.n2730 ), .COUT0(\tuner.howLong.n4555 ));
  tuner_howLong_SLICE_29 \tuner.howLong.SLICE_29 ( 
    .DI1(\tuner.howLong.n133[8] ), .DI0(\tuner.howLong.n133[7] ), 
    .D1(\tuner.howLong.n4552 ), .C1(\tuner.howLong.counter[8] ), 
    .D0(\tuner.howLong.n2726 ), .C0(\tuner.howLong.counter[7] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2726 ), .CIN1(\tuner.howLong.n4552 ), 
    .Q0(\tuner.howLong.counter[7] ), .Q1(\tuner.howLong.counter[8] ), 
    .F0(\tuner.howLong.n133[7] ), .F1(\tuner.howLong.n133[8] ), 
    .COUT1(\tuner.howLong.n2728 ), .COUT0(\tuner.howLong.n4552 ));
  tuner_howLong_SLICE_30 \tuner.howLong.SLICE_30 ( 
    .DI1(\tuner.howLong.n133[6] ), .DI0(\tuner.howLong.n133[5] ), 
    .D1(\tuner.howLong.n4549 ), .C1(\tuner.howLong.counter[6] ), 
    .D0(\tuner.howLong.n2724 ), .C0(\tuner.howLong.counter[5] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2724 ), .CIN1(\tuner.howLong.n4549 ), 
    .Q0(\tuner.howLong.counter[5] ), .Q1(\tuner.howLong.counter[6] ), 
    .F0(\tuner.howLong.n133[5] ), .F1(\tuner.howLong.n133[6] ), 
    .COUT1(\tuner.howLong.n2726 ), .COUT0(\tuner.howLong.n4549 ));
  tuner_howLong_SLICE_31 \tuner.howLong.SLICE_31 ( 
    .DI1(\tuner.howLong.n133[4] ), .DI0(\tuner.howLong.n133[3] ), 
    .D1(\tuner.howLong.n4546 ), .C1(\tuner.howLong.counter[4] ), 
    .D0(\tuner.howLong.n2722 ), .C0(\tuner.howLong.counter[3] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2722 ), .CIN1(\tuner.howLong.n4546 ), 
    .Q0(\tuner.howLong.counter[3] ), .Q1(\tuner.howLong.counter[4] ), 
    .F0(\tuner.howLong.n133[3] ), .F1(\tuner.howLong.n133[4] ), 
    .COUT1(\tuner.howLong.n2724 ), .COUT0(\tuner.howLong.n4546 ));
  tuner_howLong_SLICE_32 \tuner.howLong.SLICE_32 ( 
    .DI1(\tuner.howLong.n133[2] ), .DI0(\tuner.howLong.n133[1] ), 
    .D1(\tuner.howLong.n4543 ), .C1(\tuner.howLong.counter[2] ), 
    .D0(\tuner.howLong.n2720 ), .C0(\tuner.howLong.counter[1] ), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2720 ), .CIN1(\tuner.howLong.n4543 ), 
    .Q0(\tuner.howLong.counter[1] ), .Q1(\tuner.howLong.counter[2] ), 
    .F0(\tuner.howLong.n133[1] ), .F1(\tuner.howLong.n133[2] ), 
    .COUT1(\tuner.howLong.n2722 ), .COUT0(\tuner.howLong.n4543 ));
  tuner_howLong_SLICE_33 \tuner.howLong.SLICE_33 ( 
    .DI1(\tuner.howLong.n133[0] ), .D1(\tuner.howLong.n4540 ), 
    .C1(\tuner.howLong.counter[0] ), .B1(VCC_net), 
    .LSR(\tuner.howLong.counter_31__N_275 ), .CLK(int_osc), 
    .CIN1(\tuner.howLong.n4540 ), .Q1(\tuner.howLong.counter[0] ), 
    .F1(\tuner.howLong.n133[0] ), .COUT1(\tuner.howLong.n2720 ), 
    .COUT0(\tuner.howLong.n4540 ));
  spi_SLICE_34 \spi.SLICE_34 ( 
    .DI1(\newFlattenedMCUout[1].sig_001.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[2].sig_000.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[1] ), .D0(\spi.newFlattenedMCUout[2] ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[3] ), 
    .Q1(\spi.newFlattenedMCUout[2] ), 
    .F0(\spi.newFlattenedMCUout[2].sig_000.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_001.FeedThruLUT ));
  SLICE_36 SLICE_36( .DI1(\spi.newFlattenedMCUout[7].sig_034.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_002.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[7] ), .D0(\newFlattenedMCUout[0] ), 
    .CLK(sck_c), .Q0(\newFlattenedMCUout[1] ), .Q1(\newFlattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[0].sig_002.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[7].sig_034.FeedThruLUT ));
  SLICE_37 SLICE_37( .DI0(\newFlattenedMCUout[38].sig_003.FeedThruLUT ), 
    .D0(\newFlattenedMCUout[38] ), .CLK(sck_c), .Q0(\newFlattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[38].sig_003.FeedThruLUT ));
  SLICE_38 SLICE_38( .DI1(\newFlattenedMCUout[36].sig_005.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_004.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[38] ), .Q1(\newFlattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[37].sig_004.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_005.FeedThruLUT ));
  SLICE_40 SLICE_40( .DI1(\newFlattenedMCUout[34].sig_007.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_006.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[36] ), .Q1(\newFlattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[35].sig_006.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_007.FeedThruLUT ));
  SLICE_42 SLICE_42( .DI1(\newFlattenedMCUout[32].sig_009.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_008.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[34] ), .Q1(\newFlattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[33].sig_008.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_009.FeedThruLUT ));
  SLICE_44 SLICE_44( .DI1(\newFlattenedMCUout[30].sig_011.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_010.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[32] ), .Q1(\newFlattenedMCUout[31] ), 
    .F0(\newFlattenedMCUout[31].sig_010.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_011.FeedThruLUT ));
  SLICE_46 SLICE_46( .DI1(\newFlattenedMCUout[28].sig_013.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_012.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[30] ), .Q1(\newFlattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[29].sig_012.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_013.FeedThruLUT ));
  SLICE_48 SLICE_48( .DI1(\newFlattenedMCUout[26].sig_015.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_014.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[28] ), .Q1(\newFlattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[27].sig_014.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_015.FeedThruLUT ));
  SLICE_50 SLICE_50( .DI1(\newFlattenedMCUout[24].sig_017.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_016.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[26] ), .Q1(\newFlattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[25].sig_016.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_017.FeedThruLUT ));
  SLICE_52 SLICE_52( .DI1(\newFlattenedMCUout[22].sig_019.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_018.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[24] ), .Q1(\newFlattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[23].sig_018.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_019.FeedThruLUT ));
  SLICE_54 SLICE_54( .DI1(\newFlattenedMCUout[20].sig_021.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_020.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[22] ), .Q1(\newFlattenedMCUout[21] ), 
    .F0(\newFlattenedMCUout[21].sig_020.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_021.FeedThruLUT ));
  SLICE_56 SLICE_56( .DI1(\newFlattenedMCUout[18].sig_023.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_022.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[20] ), .Q1(\newFlattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[19].sig_022.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_023.FeedThruLUT ));
  SLICE_58 SLICE_58( .DI1(\newFlattenedMCUout[16].sig_025.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_024.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[18] ), .Q1(\newFlattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[17].sig_024.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_025.FeedThruLUT ));
  SLICE_60 SLICE_60( .DI1(\newFlattenedMCUout[14].sig_027.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_026.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[16] ), .Q1(\newFlattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[15].sig_026.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_027.FeedThruLUT ));
  SLICE_62 SLICE_62( .DI1(\newFlattenedMCUout[12].sig_029.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_028.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[14] ), .Q1(\newFlattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[13].sig_028.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_029.FeedThruLUT ));
  SLICE_64 SLICE_64( .DI1(\newFlattenedMCUout[10].sig_031.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_030.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[12] ), .Q1(\newFlattenedMCUout[11] ), 
    .F0(\newFlattenedMCUout[11].sig_030.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_031.FeedThruLUT ));
  SLICE_66 SLICE_66( .DI1(\newFlattenedMCUout[8].sig_033.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_032.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[10] ), .Q1(\newFlattenedMCUout[9] ), 
    .F0(\newFlattenedMCUout[9].sig_032.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_033.FeedThruLUT ));
  spi_SLICE_69 \spi.SLICE_69 ( 
    .DI1(\spi.newFlattenedMCUout[5].sig_036.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[6].sig_035.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[5] ), .D0(\spi.newFlattenedMCUout[6] ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[7] ), 
    .Q1(\spi.newFlattenedMCUout[6] ), 
    .F0(\spi.newFlattenedMCUout[6].sig_035.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[5].sig_036.FeedThruLUT ));
  spi_SLICE_71 \spi.SLICE_71 ( 
    .DI1(\spi.newFlattenedMCUout[3].sig_038.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[4].sig_037.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[3] ), .D0(\spi.newFlattenedMCUout[4] ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[5] ), 
    .Q1(\spi.newFlattenedMCUout[4] ), 
    .F0(\spi.newFlattenedMCUout[4].sig_037.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[3].sig_038.FeedThruLUT ));
  tuner_SLICE_74 \tuner.SLICE_74 ( .DI0(\tuner.n9[0] ), 
    .D0(\tuner.counter[0] ), .C0(\tuner.n676 ), 
    .LSR(\tuner.nextstate_5__N_122 ), .CLK(int_osc), .Q0(\tuner.counter[0] ), 
    .F0(\tuner.n9[0] ));
  SLICE_75 SLICE_75( .DI0(n2133), .D0(\durThreshold[24] ), .C0(n2126), 
    .B0(n4302), .CLK(int_osc), .Q0(\durThreshold[24] ), .F0(n2133));
  tuner_SLICE_77 \tuner.SLICE_77 ( .DI1(\tuner.n4200 ), .DI0(\tuner.n4308 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold0[1] ), .B1(\freqThreshold1[1] ), 
    .A1(\tuner.n4197 ), .D0(\freqThreshold1[0] ), .C0(\tuner.n1995 ), 
    .B0(\tuner.n4305 ), .A0(\freqThreshold0[0] ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[0] ), .Q1(\tuner.freqThreshold[1] ), 
    .F0(\tuner.n4308 ), .F1(\tuner.n4200 ));
  tuner_SLICE_78 \tuner.SLICE_78 ( .DI1(\tuner.n4248 ), .DI0(\tuner.n3555 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold1[14] ), .B1(\freqThreshold0[14] ), 
    .A1(\tuner.n4245 ), .D0(\tuner.nextstate_5__N_117 ), .C0(\tuner.n421[1] ), 
    .B0(\tuner.n3553 ), .A0(\tuner.n3554 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[15] ), .Q1(\tuner.freqThreshold[14] ), 
    .F0(\tuner.n3555 ), .F1(\tuner.n4248 ));
  tuner_SLICE_80 \tuner.SLICE_80 ( .DI1(\tuner.n4272 ), .DI0(\tuner.n4266 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold0[12] ), .B1(\tuner.n4269 ), 
    .A1(\freqThreshold1[12] ), .D0(\freqThreshold0[13] ), .C0(\tuner.n1995 ), 
    .B0(\freqThreshold1[13] ), .A0(\tuner.n4263 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[13] ), .Q1(\tuner.freqThreshold[12] ), 
    .F0(\tuner.n4266 ), .F1(\tuner.n4272 ));
  tuner_SLICE_82 \tuner.SLICE_82 ( .DI1(\tuner.n4284 ), .DI0(\tuner.n4290 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold0[10] ), .B1(\freqThreshold1[10] ), 
    .A1(\tuner.n4281 ), .D0(\freqThreshold0[11] ), .C0(\tuner.n1995 ), 
    .B0(\freqThreshold1[11] ), .A0(\tuner.n4287 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[11] ), .Q1(\tuner.freqThreshold[10] ), 
    .F0(\tuner.n4290 ), .F1(\tuner.n4284 ));
  tuner_SLICE_84 \tuner.SLICE_84 ( .DI1(\tuner.n4260 ), .DI0(\tuner.n4278 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold0[8] ), .B1(\freqThreshold1[8] ), 
    .A1(\tuner.n4257 ), .D0(\freqThreshold0[9] ), .C0(\tuner.n1995 ), 
    .B0(\freqThreshold1[9] ), .A0(\tuner.n4275 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[9] ), .Q1(\tuner.freqThreshold[8] ), 
    .F0(\tuner.n4278 ), .F1(\tuner.n4260 ));
  tuner_SLICE_86 \tuner.SLICE_86 ( .DI1(\tuner.n4242 ), .DI0(\tuner.n4254 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold0[6] ), .B1(\freqThreshold1[6] ), 
    .A1(\tuner.n4239 ), .D0(\freqThreshold0[7] ), .C0(\tuner.n1995 ), 
    .B0(\freqThreshold1[7] ), .A0(\tuner.n4251 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[7] ), .Q1(\tuner.freqThreshold[6] ), 
    .F0(\tuner.n4254 ), .F1(\tuner.n4242 ));
  tuner_SLICE_88 \tuner.SLICE_88 ( .DI1(\tuner.n3579 ), .DI0(\tuner.n4224 ), 
    .D1(\tuner.nextstate_5__N_117 ), .C1(\tuner.n421[1] ), .B1(\tuner.n3713 ), 
    .A1(\tuner.n3578 ), .D0(\freqThreshold0[5] ), .C0(\tuner.n1995 ), 
    .B0(\freqThreshold1[5] ), .A0(\tuner.n4221 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[5] ), .Q1(\tuner.freqThreshold[4] ), 
    .F0(\tuner.n4224 ), .F1(\tuner.n3579 ));
  tuner_SLICE_90 \tuner.SLICE_90 ( .DI1(\tuner.n4206 ), .DI0(\tuner.n4212 ), 
    .D1(\tuner.n1995 ), .C1(\freqThreshold1[2] ), .B1(\freqThreshold0[2] ), 
    .A1(\tuner.n4203 ), .D0(\freqThreshold0[3] ), .C0(\tuner.n1995 ), 
    .B0(\freqThreshold1[3] ), .A0(\tuner.n4209 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[3] ), .Q1(\tuner.freqThreshold[2] ), 
    .F0(\tuner.n4212 ), .F1(\tuner.n4206 ));
  tuner_SLICE_93 \tuner.SLICE_93 ( .DI0(\tuner.n529[1] ), 
    .D0(\tuner.counter[0] ), .C0(\tuner.counter[1] ), .CE(\tuner.n676 ), 
    .LSR(\tuner.nextstate_5__N_122 ), .CLK(int_osc), .Q0(\tuner.counter[1] ), 
    .F0(\tuner.n529[1] ));
  tuner_SLICE_95 \tuner.SLICE_95 ( .DI1(\n1971$n0 ), .DI0(\tuner.n4218 ), 
    .D1(\tuner.nextstate_5__N_117 ), .C1(\tuner.n421[1] ), .B1(\tuner.n3572 ), 
    .A1(\tuner.n3711 ), .D0(\durThresh1[19] ), .C0(\durThresh0[19] ), 
    .B0(\tuner.n4215 ), .A0(\tuner.n1995 ), .CE(n2126), .CLK(int_osc), 
    .Q0(\tuner.durThreshold[19] ), .Q1(\tuner.durThreshold[18] ), 
    .F0(\tuner.n4218 ), .F1(\n1971$n0 ));
  tuner_SLICE_98 \tuner.SLICE_98 ( .DI1(\tuner.n2122 ), 
    .DI0(\tuner.nextstate_5__N_121.sig_040.FeedThruLUT ), 
    .D1(\tuner.nextstate_5__N_120 ), .C1(done), .B1(\tuner.rep ), 
    .D0(\tuner.nextstate_5__N_121 ), .LSR(nreset_c), .CLK(int_osc), 
    .Q0(\tuner.nextstate_5__N_122 ), .Q1(\tuner.nextstate_5__N_121 ), 
    .F0(\tuner.nextstate_5__N_121.sig_040.FeedThruLUT ), .F1(\tuner.n2122 ));
  tuner_SLICE_99 \tuner.SLICE_99 ( .DI1(\tuner.n421[1].sig_042.FeedThruLUT ), 
    .DI0(\tuner.nextstate_5__N_117.sig_041.FeedThruLUT ), .D1(\tuner.n421[1] ), 
    .D0(\tuner.nextstate_5__N_117 ), .CE(n2148), .LSR(nreset_c), .CLK(int_osc), 
    .Q0(\tuner.n421[1] ), .Q1(\tuner.n421[2] ), 
    .F0(\tuner.nextstate_5__N_117.sig_041.FeedThruLUT ), 
    .F1(\tuner.n421[1].sig_042.FeedThruLUT ));
  SLICE_103 SLICE_103( .DI1(n2144), .DI0(n2145), .D1(\durThreshold[8] ), 
    .C1(n2126), .B1(n1972), .D0(\durThreshold[7] ), .C0(n1973), .B0(n2126), 
    .CLK(int_osc), .Q0(\durThreshold[7] ), .Q1(\durThreshold[8] ), .F0(n2145), 
    .F1(n2144));
  SLICE_105 SLICE_105( .DI1(n2142), .DI0(n2143), .D1(\durThreshold[11] ), 
    .C1(n1972), .B1(n2126), .D0(\durThreshold[9] ), .C0(n2126), .B0(n1971), 
    .CLK(int_osc), .Q0(\durThreshold[9] ), .Q1(\durThreshold[11] ), .F0(n2143), 
    .F1(n2142));
  SLICE_107 SLICE_107( .DI1(n2140), .DI0(n2141), .D1(\durThreshold[13] ), 
    .C1(n4302), .B1(n2126), .D0(\durThreshold[12] ), .C0(n2126), .A0(n1971), 
    .CLK(int_osc), .Q0(\durThreshold[12] ), .Q1(\durThreshold[13] ), 
    .F0(n2141), .F1(n2140));
  SLICE_109 SLICE_109( .DI1(n2138), .DI0(n2139), .D1(\durThreshold[16] ), 
    .C1(n1972), .B1(n2126), .D0(\durThreshold[15] ), .C0(n2126), .B0(n1973), 
    .CLK(int_osc), .Q0(\durThreshold[15] ), .Q1(\durThreshold[16] ), 
    .F0(n2139), .F1(n2138));
  SLICE_111 SLICE_111( .DI1(n2136), .DI0(n2137), .D1(\durThreshold[20] ), 
    .C1(n1972), .B1(n2126), .D0(\durThreshold[17] ), .C0(n2019), .A0(n2126), 
    .CLK(int_osc), .Q0(\durThreshold[17] ), .Q1(\durThreshold[20] ), 
    .F0(n2137), .F1(n2136));
  SLICE_113 SLICE_113( .DI1(n2134), .DI0(n2135), .D1(\durThreshold[22] ), 
    .C1(n2019), .A1(n2126), .D0(\durThreshold[21] ), .C0(n1971), .B0(n2126), 
    .CLK(int_osc), .Q0(\durThreshold[21] ), .Q1(\durThreshold[22] ), 
    .F0(n2135), .F1(n2134));
  tuner_SLICE_117 \tuner.SLICE_117 ( .DI0(\tuner.nextstate_5__N_203 ), 
    .D0(\tuner.nextstate_5__N_122 ), .CLK(int_osc), .Q0(\tuner.en ), 
    .F0(\tuner.nextstate_5__N_203 ));
  SLICE_118 SLICE_118( .DI1(\newFlattenedMCUout[38].sig_045.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_044.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[38] ), .D0(\newFlattenedMCUout[39] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[39] ), .Q1(\flattenedMCUout[38] ), 
    .F0(\newFlattenedMCUout[39].sig_044.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_045.FeedThruLUT ));
  SLICE_120 SLICE_120( .DI1(\newFlattenedMCUout[36].sig_047.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_046.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[37] ), .Q1(\flattenedMCUout[36] ), 
    .F0(\newFlattenedMCUout[37].sig_046.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_047.FeedThruLUT ));
  SLICE_122 SLICE_122( .DI1(\newFlattenedMCUout[34].sig_049.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_048.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[35] ), .Q1(\flattenedMCUout[34] ), 
    .F0(\newFlattenedMCUout[35].sig_048.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_049.FeedThruLUT ));
  SLICE_124 SLICE_124( .DI1(\newFlattenedMCUout[32].sig_051.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_050.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .C0(\newFlattenedMCUout[33] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[33] ), .Q1(\flattenedMCUout[32] ), 
    .F0(\newFlattenedMCUout[33].sig_050.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_051.FeedThruLUT ));
  SLICE_126 SLICE_126( .DI1(\newFlattenedMCUout[30].sig_053.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_052.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[31] ), .Q1(\flattenedMCUout[30] ), 
    .F0(\newFlattenedMCUout[31].sig_052.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_053.FeedThruLUT ));
  SLICE_128 SLICE_128( .DI1(\newFlattenedMCUout[28].sig_055.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_054.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .C0(\newFlattenedMCUout[29] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[29] ), .Q1(\flattenedMCUout[28] ), 
    .F0(\newFlattenedMCUout[29].sig_054.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_055.FeedThruLUT ));
  SLICE_130 SLICE_130( .DI1(\newFlattenedMCUout[26].sig_057.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_056.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[27] ), .Q1(\flattenedMCUout[26] ), 
    .F0(\newFlattenedMCUout[27].sig_056.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_057.FeedThruLUT ));
  SLICE_132 SLICE_132( .DI1(\newFlattenedMCUout[24].sig_059.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_058.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .B0(\newFlattenedMCUout[25] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[25] ), .Q1(\flattenedMCUout[24] ), 
    .F0(\newFlattenedMCUout[25].sig_058.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_059.FeedThruLUT ));
  SLICE_134 SLICE_134( .DI1(\newFlattenedMCUout[22].sig_061.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_060.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[23] ), .Q1(\flattenedMCUout[22] ), 
    .F0(\newFlattenedMCUout[23].sig_060.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_061.FeedThruLUT ));
  SLICE_136 SLICE_136( .DI1(\newFlattenedMCUout[20].sig_063.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_062.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[21] ), .Q1(\flattenedMCUout[20] ), 
    .F0(\newFlattenedMCUout[21].sig_062.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_063.FeedThruLUT ));
  SLICE_138 SLICE_138( .DI1(\newFlattenedMCUout[18].sig_065.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_064.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[19] ), .Q1(\flattenedMCUout[18] ), 
    .F0(\newFlattenedMCUout[19].sig_064.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_065.FeedThruLUT ));
  SLICE_140 SLICE_140( .DI1(\newFlattenedMCUout[16].sig_067.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_066.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[17] ), .Q1(\flattenedMCUout[16] ), 
    .F0(\newFlattenedMCUout[17].sig_066.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_067.FeedThruLUT ));
  SLICE_142 SLICE_142( .DI1(\newFlattenedMCUout[14].sig_069.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_068.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[15] ), .Q1(\flattenedMCUout[14] ), 
    .F0(\newFlattenedMCUout[15].sig_068.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_069.FeedThruLUT ));
  SLICE_144 SLICE_144( .DI1(\newFlattenedMCUout[12].sig_071.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_070.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[13] ), .Q1(\flattenedMCUout[12] ), 
    .F0(\newFlattenedMCUout[13].sig_070.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_071.FeedThruLUT ));
  SLICE_146 SLICE_146( .DI1(\newFlattenedMCUout[10].sig_073.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_072.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[11] ), .Q1(\flattenedMCUout[10] ), 
    .F0(\newFlattenedMCUout[11].sig_072.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_073.FeedThruLUT ));
  SLICE_148 SLICE_148( .DI1(\newFlattenedMCUout[8].sig_075.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_074.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[9] ), .Q1(\flattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[9].sig_074.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_075.FeedThruLUT ));
  SLICE_150 SLICE_150( .DI1(\newFlattenedMCUout[0].sig_077.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[1].sig_076.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[0] ), .D0(\newFlattenedMCUout[1] ), .CE(n2123), 
    .CLK(ce_c), .Q0(\flattenedMCUout[1] ), .Q1(\flattenedMCUout[0] ), 
    .F0(\newFlattenedMCUout[1].sig_076.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[0].sig_077.FeedThruLUT ));
  tuner_SLICE_152 \tuner.SLICE_152 ( .D1(\tuner.n1995 ), .C1(\tuner.n4299 ), 
    .B1(\durThresh1[20] ), .A1(\durThresh0[20] ), .D0(\tuner.n1997 ), 
    .C0(\tuner.n1995 ), .B0(\durThresh2[20] ), .A0(\tuner.n3690 ), 
    .F0(\tuner.n4299 ), .F1(n4302));
  tuner_SLICE_154 \tuner.SLICE_154 ( .D1(\tuner.n1995 ), .C1(\tuner.n4233 ), 
    .B1(\durThresh0[15] ), .A1(\durThresh1[15] ), .D0(\tuner.n1997 ), 
    .C0(\tuner.n1995 ), .B0(\tuner.n3656 ), .A0(\durThresh2[15] ), 
    .F0(\tuner.n4233 ), .F1(n1973));
  tuner_SLICE_156 \tuner.SLICE_156 ( .D1(\tuner.n1995 ), .C1(\tuner.n1997 ), 
    .B1(\tuner.n3655 ), .A1(\durThresh2[20] ), .D0(\tuner.nextstate_5__N_117 ), 
    .C0(\tuner.n421[2] ), .B0(\tuner.n421[1] ), .F0(\tuner.n1997 ), 
    .F1(\tuner.n4227 ));
  tuner_SLICE_157 \tuner.SLICE_157 ( .D1(\tuner.n1995 ), .C1(\durThresh0[20] ), 
    .B1(\tuner.n4227 ), .A1(\durThresh1[20] ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[34] ), 
    .A0(\flattenedMCUout[32] ), .F0(\durThresh0[20] ), .F1(n1972));
  tuner_SLICE_159 \tuner.SLICE_159 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[3] ), .B1(\tuner.n1995 ), .A1(\tuner.n3612 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[23] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[3] ), .F1(\tuner.n4209 ));
  tuner_SLICE_160 \tuner.SLICE_160 ( .D1(\tuner.n1995 ), 
    .C1(\freqThreshold2[2] ), .B1(\tuner.n1997 ), .A1(\tuner.n3608 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[2] ), .F1(\tuner.n4203 ));
  tuner_SLICE_162 \tuner.SLICE_162 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[0] ), .B1(\tuner.n3692 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[0] ), .F1(\tuner.n4305 ));
  tuner_SLICE_164 \tuner.SLICE_164 ( .D1(\tuner.n1997 ), .C1(\durThresh2[23] ), 
    .B1(\tuner.n3689 ), .A1(\tuner.n1995 ), .D0(\flattenedMCUout[17] ), 
    .C0(\flattenedMCUout[18] ), .B0(\flattenedMCUout[19] ), 
    .A0(\flattenedMCUout[16] ), .F0(\durThresh2[23] ), .F1(\tuner.n4293 ));
  tuner_SLICE_166 \tuner.SLICE_166 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[11] ), .B1(\tuner.n3686 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[11] ), .F1(\tuner.n4287 ));
  tuner_SLICE_168 \tuner.SLICE_168 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[10] ), .B1(\tuner.n3676 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[22] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[10] ), .F1(\tuner.n4281 ));
  tuner_SLICE_170 \tuner.SLICE_170 ( .D1(\tuner.n1995 ), 
    .C1(\freqThreshold2[9] ), .B1(\tuner.n3675 ), .A1(\tuner.n1997 ), 
    .D0(\flattenedMCUout[21] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[22] ), 
    .F0(\freqThreshold2[9] ), .F1(\tuner.n4275 ));
  tuner_SLICE_172 \tuner.SLICE_172 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[1] ), .B1(\tuner.n3607 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[1] ), .F1(\tuner.n4197 ));
  tuner_SLICE_174 \tuner.SLICE_174 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[12] ), .B1(\tuner.n3674 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[12] ), .F1(\tuner.n4269 ));
  tuner_SLICE_176 \tuner.SLICE_176 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[3] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[14] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[15] ), .F0(\freqThreshold3[3] ), .F1(\tuner.n3612 ));
  tuner_SLICE_178 \tuner.SLICE_178 ( .D1(\tuner.n3673 ), 
    .C1(\freqThreshold2[13] ), .B1(\tuner.n1997 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[23] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[13] ), .F1(\tuner.n4263 ));
  tuner_SLICE_180 \tuner.SLICE_180 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\tuner.rep ), .A1(done), .D0(\tuner.counter[0] ), 
    .C0(\tuner.counter[1] ), .B0(\flattenedMCUout[1] ), 
    .A0(\flattenedMCUout[0] ), .F0(\tuner.rep ), .F1(\tuner.n2111 ));
  tuner_SLICE_182 \tuner.SLICE_182 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[8] ), .B1(\tuner.n3672 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[8] ), .F1(\tuner.n4257 ));
  tuner_SLICE_184 \tuner.SLICE_184 ( .D1(\tuner.n421[1] ), .C1(\tuner.n3572 ), 
    .B1(\tuner.n3711 ), .A1(\tuner.nextstate_5__N_117 ), 
    .D0(\tuner.nextstate_5__N_120 ), .C0(\tuner.n1997 ), .B0(\durThresh2[15] ), 
    .A0(\tuner.n4 ), .F0(\tuner.n3572 ), .F1(n1971));
  tuner_SLICE_186 \tuner.SLICE_186 ( .D1(\tuner.n1997 ), .C1(\durThresh0[15] ), 
    .B1(\durThresh1[15] ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[34] ), 
    .A0(\flattenedMCUout[32] ), .F0(\durThresh0[15] ), .F1(\tuner.n3711 ));
  tuner_SLICE_188 \tuner.SLICE_188 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[7] ), .B1(\tuner.n3671 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[7] ), .F1(\tuner.n4251 ));
  tuner_SLICE_190 \tuner.SLICE_190 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(n2537), .B1(n2531), .A1(\tuner.n1997 ), .D0(\flattenedMCUout[13] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[12] ), .F0(n2537), .F1(\tuner.n3578 ));
  aT2FT_t2F2_SLICE_191 \aT2FT.t2F2.SLICE_191 ( .D1(\flattenedMCUout[22] ), 
    .C1(\flattenedMCUout[23] ), .A1(\flattenedMCUout[21] ), 
    .D0(\flattenedMCUout[21] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[22] ), .F0(n2531), 
    .F1(\tuner.n3668 ));
  tuner_SLICE_192 \tuner.SLICE_192 ( .D1(\tuner.n1997 ), .C1(n2555), 
    .B1(n2525), .D0(\flattenedMCUout[38] ), .C0(\flattenedMCUout[37] ), 
    .B0(\flattenedMCUout[39] ), .A0(\flattenedMCUout[36] ), .F0(n2555), 
    .F1(\tuner.n3713 ));
  tuner_SLICE_194 \tuner.SLICE_194 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\durThresh3[19] ), .D0(\flattenedMCUout[10] ), 
    .C0(\flattenedMCUout[9] ), .B0(\flattenedMCUout[11] ), 
    .A0(\flattenedMCUout[8] ), .F0(\durThresh3[19] ), .F1(\tuner.n3621 ));
  tuner_SLICE_196 \tuner.SLICE_196 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[5] ), .D0(\flattenedMCUout[15] ), 
    .C0(\flattenedMCUout[12] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[5] ), .F1(\tuner.n3650 ));
  tuner_SLICE_198 \tuner.SLICE_198 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[14] ), .B1(\tuner.n3670 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[14] ), .F1(\tuner.n4245 ));
  tuner_SLICE_201 \tuner.SLICE_201 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\tuner.n3669 ), .B1(\tuner.n1997 ), .A1(\tuner.n3668 ), 
    .D0(\flattenedMCUout[14] ), .C0(\flattenedMCUout[15] ), 
    .B0(\flattenedMCUout[13] ), .F0(\tuner.n3669 ), .F1(\tuner.n3554 ));
  tuner_SLICE_202 \tuner.SLICE_202 ( .D1(\flattenedMCUout[30] ), 
    .C1(\flattenedMCUout[28] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[29] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[30] ), .A0(\flattenedMCUout[31] ), .F0(\tuner.n3636 ), 
    .F1(\freqThreshold1[1] ));
  tuner_SLICE_203 \tuner.SLICE_203 ( .D1(\tuner.n1997 ), .C1(n2473), 
    .B1(\flattenedMCUout[39] ), .A1(\tuner.n3636 ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .F0(n2473), .F1(\tuner.n3553 ));
  tuner_SLICE_204 \tuner.SLICE_204 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[6] ), .B1(\tuner.n3666 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[6] ), .F1(\tuner.n4239 ));
  tuner_SLICE_206 \tuner.SLICE_206 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\durThresh3[20] ), .D0(\flattenedMCUout[9] ), 
    .C0(\flattenedMCUout[10] ), .B0(\flattenedMCUout[8] ), 
    .A0(\flattenedMCUout[11] ), .F0(\durThresh3[20] ), .F1(\tuner.n3655 ));
  tuner_SLICE_208 \tuner.SLICE_208 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\tuner.n4 ), .D0(\flattenedMCUout[9] ), .C0(\flattenedMCUout[10] ), 
    .B0(\flattenedMCUout[11] ), .A0(\flattenedMCUout[8] ), .F0(\tuner.n4 ), 
    .F1(\tuner.n3656 ));
  tuner_SLICE_210 \tuner.SLICE_210 ( .C1(\freqThreshold3[6] ), 
    .B1(\tuner.nextstate_5__N_120 ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[6] ), .F1(\tuner.n3666 ));
  tuner_SLICE_212 \tuner.SLICE_212 ( .D1(\durThresh2[19] ), .C1(\tuner.n1995 ), 
    .B1(\tuner.n3621 ), .A1(\tuner.n1997 ), .D0(\tuner.nextstate_5__N_117 ), 
    .C0(\tuner.n421[1] ), .F0(\tuner.n1995 ), .F1(\tuner.n4215 ));
  tuner_SLICE_214 \tuner.SLICE_214 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[14] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[14] ), .F1(\tuner.n3670 ));
  tuner_SLICE_216 \tuner.SLICE_216 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[7] ), .D0(\flattenedMCUout[13] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[12] ), .F0(\freqThreshold3[7] ), .F1(\tuner.n3671 ));
  tuner_SLICE_218 \tuner.SLICE_218 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[8] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[8] ), .F1(\tuner.n3672 ));
  tuner_SLICE_220 \tuner.SLICE_220 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[13] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[13] ), .F1(\tuner.n3673 ));
  tuner_SLICE_222 \tuner.SLICE_222 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[12] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[12] ), .B0(\flattenedMCUout[15] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[12] ), .F1(\tuner.n3674 ));
  tuner_SLICE_224 \tuner.SLICE_224 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[1] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[14] ), .B0(\flattenedMCUout[15] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[1] ), .F1(\tuner.n3607 ));
  tuner_SLICE_226 \tuner.SLICE_226 ( .D1(\tuner.n1997 ), 
    .C1(\freqThreshold2[5] ), .B1(\tuner.n3650 ), .A1(\tuner.n1995 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[22] ), 
    .B0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[5] ), .F1(\tuner.n4221 ));
  tuner_SLICE_228 \tuner.SLICE_228 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[9] ), .D0(\flattenedMCUout[13] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[12] ), .F0(\freqThreshold3[9] ), .F1(\tuner.n3675 ));
  tuner_SLICE_230 \tuner.SLICE_230 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[10] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[14] ), .B0(\flattenedMCUout[15] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[10] ), .F1(\tuner.n3676 ));
  tuner_SLICE_232 \tuner.SLICE_232 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[11] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[12] ), .B0(\flattenedMCUout[15] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[11] ), .F1(\tuner.n3686 ));
  tuner_SLICE_234 \tuner.SLICE_234 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\durThresh3[23] ), .D0(\flattenedMCUout[9] ), 
    .C0(\flattenedMCUout[11] ), .B0(\flattenedMCUout[10] ), 
    .A0(\flattenedMCUout[8] ), .F0(\durThresh3[23] ), .F1(\tuner.n3689 ));
  tuner_SLICE_236 \tuner.SLICE_236 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[0] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[14] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[15] ), .F0(\freqThreshold3[0] ), .F1(\tuner.n3692 ));
  tuner_SLICE_238 \tuner.SLICE_238 ( .D1(\tuner.nextstate_5__N_120 ), 
    .C1(\freqThreshold3[2] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[14] ), .B0(\flattenedMCUout[15] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[2] ), .F1(\tuner.n3608 ));
  tuner_pitch_SLICE_240 \tuner.pitch.SLICE_240 ( .D1(\tuner.pitch.n23 ), 
    .C1(\tuner.pitch.n24 ), .B1(\tuner.pitch.n21 ), .A1(\tuner.pitch.n22 ), 
    .D0(\tuner.pitch.counter[7] ), .C0(\tuner.pitch.counter[15] ), 
    .B0(\tuner.freqThreshold[15] ), .A0(\tuner.freqThreshold[7] ), 
    .F0(\tuner.pitch.n24 ), .F1(\tuner.pitch.n30 ));
  tuner_pitch_SLICE_242 \tuner.pitch.SLICE_242 ( 
    .D0(\tuner.pitch.counter[31] ), .C0(\tuner.pitch.counter[23] ), 
    .B0(\tuner.pitch.counter[29] ), .A0(\tuner.pitch.counter[27] ), 
    .F0(\tuner.pitch.n28 ));
  tuner_pitch_SLICE_243 \tuner.pitch.SLICE_243 ( .D1(\tuner.pitch.n27 ), 
    .C1(\tuner.pitch.n25 ), .B1(\tuner.pitch.n26 ), .A1(\tuner.pitch.n28 ), 
    .D0(\tuner.pitch.counter[16] ), .C0(\tuner.pitch.counter[24] ), 
    .B0(\tuner.pitch.counter[20] ), .A0(\tuner.pitch.counter[18] ), 
    .F0(\tuner.pitch.n25 ), .F1(\tuner.pitch.n2977 ));
  tuner_pitch_SLICE_244 \tuner.pitch.SLICE_244 ( 
    .D0(\tuner.freqThreshold[10] ), .C0(\tuner.pitch.counter[9] ), 
    .B0(\tuner.pitch.counter[10] ), .A0(\tuner.freqThreshold[9] ), 
    .F0(\tuner.pitch.n20 ));
  tuner_pitch_SLICE_245 \tuner.pitch.SLICE_245 ( .D1(\tuner.pitch.n19 ), 
    .C1(\tuner.pitch.n17 ), .B1(\tuner.pitch.n18 ), .A1(\tuner.pitch.n20 ), 
    .D0(\tuner.pitch.counter[0] ), .C0(\tuner.freqThreshold[8] ), 
    .B0(\tuner.pitch.counter[8] ), .A0(\tuner.freqThreshold[0] ), 
    .F0(\tuner.pitch.n17 ), .F1(\tuner.pitch.n29 ));
  tuner_howLong_SLICE_246 \tuner.howLong.SLICE_246 ( .D1(\tuner.howLong.n25 ), 
    .C1(\tuner.howLong.n18 ), .B1(\tuner.howLong.counter[15] ), 
    .A1(\durThreshold[15] ), .D0(\durThreshold[8] ), 
    .C0(\tuner.howLong.counter[8] ), .B0(\tuner.howLong.counter[16] ), 
    .A0(\durThreshold[16] ), .F0(\tuner.howLong.n18 ), 
    .F1(\tuner.howLong.n30 ));
  tuner_howLong_SLICE_248 \tuner.howLong.SLICE_248 ( 
    .D1(\tuner.durThreshold[18] ), .C1(\tuner.howLong.counter[17] ), 
    .B1(\tuner.howLong.counter[18] ), .A1(\durThreshold[17] ), 
    .D0(\tuner.howLong.counter[9] ), .C0(\durThreshold[22] ), 
    .B0(\tuner.howLong.counter[22] ), .A0(\durThreshold[9] ), 
    .F0(\tuner.howLong.n22 ), .F1(\tuner.howLong.n20 ));
  tuner_howLong_SLICE_249 \tuner.howLong.SLICE_249 ( .D1(\tuner.howLong.n20 ), 
    .C1(\tuner.howLong.n19 ), .B1(\tuner.howLong.n22 ), 
    .A1(\tuner.howLong.n21 ), .D0(\durThreshold[20] ), .C0(\durThreshold[24] ), 
    .B0(\tuner.howLong.counter[20] ), .A0(\tuner.howLong.counter[24] ), 
    .F0(\tuner.howLong.n19 ), .F1(\tuner.howLong.n31 ));
  tuner_howLong_SLICE_250 \tuner.howLong.SLICE_250 ( 
    .D1(\tuner.howLong.counter[3] ), .C1(\tuner.howLong.counter[25] ), 
    .B1(\tuner.howLong.counter[26] ), .A1(\tuner.howLong.counter[28] ), 
    .D0(\durThreshold[11] ), .C0(\tuner.howLong.counter[13] ), 
    .B0(\tuner.howLong.counter[11] ), .A0(\durThreshold[13] ), 
    .F0(\tuner.howLong.n24 ), .F1(\tuner.howLong.n25_adj_346 ));
  tuner_howLong_SLICE_251 \tuner.howLong.SLICE_251 ( .D1(\tuner.howLong.n27 ), 
    .C1(\tuner.howLong.n2974 ), .B1(\tuner.howLong.n25_adj_346 ), 
    .A1(\tuner.howLong.n26 ), .D0(\tuner.howLong.n31 ), 
    .C0(\tuner.howLong.n30 ), .B0(\tuner.howLong.n23 ), 
    .A0(\tuner.howLong.n24 ), .F0(\tuner.howLong.n2974 ), 
    .F1(\tuner.howLong.counter_31__N_275 ));
  tuner_howLong_SLICE_252 \tuner.howLong.SLICE_252 ( 
    .D1(\tuner.howLong.counter[0] ), .C1(\tuner.howLong.n24_adj_345 ), 
    .B1(\tuner.howLong.counter[4] ), .A1(\tuner.howLong.counter[31] ), 
    .D0(\tuner.howLong.counter[1] ), .C0(\tuner.howLong.counter[5] ), 
    .B0(\tuner.howLong.counter[2] ), .A0(\tuner.howLong.counter[6] ), 
    .F0(\tuner.howLong.n24_adj_345 ), .F1(\tuner.howLong.n27 ));
  tuner_howLong_SLICE_254 \tuner.howLong.SLICE_254 ( 
    .DI1(\tuner.howLong.counter_31__N_275$n1 ), .D1(\tuner.howLong.n2974 ), 
    .C1(\tuner.howLong.n26 ), .B1(\tuner.howLong.n25_adj_346 ), 
    .A1(\tuner.howLong.n27 ), .D0(\tuner.howLong.counter[14] ), 
    .C0(\tuner.howLong.counter[27] ), .B0(\tuner.howLong.counter[29] ), 
    .A0(\tuner.howLong.counter[30] ), .CLK(int_osc), .Q1(done), 
    .F0(\tuner.howLong.n26 ), .F1(\tuner.howLong.counter_31__N_275$n1 ));
  tuner_SLICE_256 \tuner.SLICE_256 ( .DI1(\tuner.n421[2].sig_043.FeedThruLUT ), 
    .D1(\tuner.n421[2] ), .D0(\tuner.nextstate_5__N_120 ), 
    .C0(\tuner.n421[2] ), .B0(\tuner.nextstate_5__N_117 ), 
    .A0(\tuner.n421[1] ), .CE(n2148), .LSR(nreset_c), .CLK(int_osc), 
    .Q1(\tuner.nextstate_5__N_120 ), .F0(n2126), 
    .F1(\tuner.n421[2].sig_043.FeedThruLUT ));
  tuner_SLICE_257 \tuner.SLICE_257 ( .D1(\durThresh3[20] ), 
    .C1(\tuner.nextstate_5__N_120 ), .D0(\tuner.nextstate_5__N_120 ), 
    .C0(\tuner.n421[2] ), .B0(\tuner.nextstate_5__N_117 ), 
    .A0(\tuner.n421[1] ), .F0(n2019), .F1(\tuner.n3690 ));
  aT2FT_t2F1_SLICE_259 \aT2FT.t2F1.SLICE_259 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[29] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[29] ), .F0(\freqThreshold1[0] ), 
    .F1(\freqThreshold1[2] ));
  aT2FT_t2F1_SLICE_261 \aT2FT.t2F1.SLICE_261 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[3] ), 
    .F1(\freqThreshold1[5] ));
  aT2FT_t2F1_SLICE_263 \aT2FT.t2F1.SLICE_263 ( .D1(\flattenedMCUout[30] ), 
    .C1(\flattenedMCUout[28] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[29] ), .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[30] ), .B0(\flattenedMCUout[29] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[11] ), 
    .F1(\freqThreshold1[6] ));
  aT2FT_t2F1_SLICE_265 \aT2FT.t2F1.SLICE_265 ( .D1(\flattenedMCUout[30] ), 
    .C1(\flattenedMCUout[28] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[29] ), .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[30] ), .B0(\flattenedMCUout[29] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[13] ), 
    .F1(\freqThreshold1[7] ));
  aT2FT_t2F1_SLICE_267 \aT2FT.t2F1.SLICE_267 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[12] ), 
    .F1(\freqThreshold1[8] ));
  aT2FT_t2F1_SLICE_269 \aT2FT.t2F1.SLICE_269 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(n2525), .F1(\freqThreshold1[9] ));
  aT2FT_t2F1_SLICE_271 \aT2FT.t2F1.SLICE_271 ( .D1(\flattenedMCUout[28] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[29] ), 
    .A1(\flattenedMCUout[31] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[28] ), .B0(\flattenedMCUout[31] ), 
    .A0(\flattenedMCUout[29] ), .F0(\freqThreshold1[14] ), 
    .F1(\freqThreshold1[10] ));
  aT2FT_t2F0_SLICE_272 \aT2FT.t2F0.SLICE_272 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[36] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[13] ), 
    .F1(\freqThreshold0[12] ));
  aT2FT_t2F0_SLICE_274 \aT2FT.t2F0.SLICE_274 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[14] ), 
    .F1(\freqThreshold0[11] ));
  aT2FT_t2F0_SLICE_276 \aT2FT.t2F0.SLICE_276 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[3] ), 
    .F1(\freqThreshold0[10] ));
  aT2FT_t2F0_SLICE_278 \aT2FT.t2F0.SLICE_278 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[36] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[1] ), 
    .F1(\freqThreshold0[0] ));
  aT2FT_t2F0_SLICE_280 \aT2FT.t2F0.SLICE_280 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[37] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[2] ), 
    .F1(\freqThreshold0[9] ));
  aT2FT_t2F0_SLICE_282 \aT2FT.t2F0.SLICE_282 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[37] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[5] ), 
    .F1(\freqThreshold0[8] ));
  aT2FT_t2F0_SLICE_284 \aT2FT.t2F0.SLICE_284 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[6] ), 
    .F1(\freqThreshold0[7] ));
  aD2DT_d2d2_SLICE_286 \aD2DT.d2d2.SLICE_286 ( .D0(\flattenedMCUout[17] ), 
    .C0(\flattenedMCUout[18] ), .B0(\flattenedMCUout[19] ), 
    .A0(\flattenedMCUout[16] ), .F0(\durThresh2[19] ));
  aD2DT_d2d2_SLICE_287 \aD2DT.d2d2.SLICE_287 ( .D1(\flattenedMCUout[18] ), 
    .C1(\flattenedMCUout[17] ), .B1(\flattenedMCUout[16] ), 
    .A1(\flattenedMCUout[19] ), .D0(\flattenedMCUout[17] ), 
    .C0(\flattenedMCUout[18] ), .B0(\flattenedMCUout[19] ), 
    .A0(\flattenedMCUout[16] ), .F0(\durThresh2[20] ), .F1(\durThresh2[15] ));
  aD2DT_d2d1_SLICE_288 \aD2DT.d2d1.SLICE_288 ( .D1(\flattenedMCUout[25] ), 
    .C1(\flattenedMCUout[26] ), .B1(\flattenedMCUout[27] ), 
    .A1(\flattenedMCUout[24] ), .D0(\flattenedMCUout[26] ), 
    .C0(\flattenedMCUout[25] ), .B0(\flattenedMCUout[24] ), 
    .A0(\flattenedMCUout[27] ), .F0(\durThresh1[19] ), .F1(\durThresh1[20] ));
  aD2DT_d2d1_SLICE_290 \aD2DT.d2d1.SLICE_290 ( .D1(\flattenedMCUout[25] ), 
    .C1(\flattenedMCUout[26] ), .B1(\flattenedMCUout[27] ), 
    .A1(\flattenedMCUout[24] ), .D0(\flattenedMCUout[26] ), 
    .C0(\flattenedMCUout[25] ), .B0(\flattenedMCUout[24] ), 
    .A0(\flattenedMCUout[27] ), .F0(\durThresh1[23] ), .F1(\durThresh1[15] ));
  aD2DT_d2d0_SLICE_292 \aD2DT.d2d0.SLICE_292 ( .D1(\flattenedMCUout[35] ), 
    .C1(\flattenedMCUout[33] ), .B1(\flattenedMCUout[32] ), 
    .A1(\flattenedMCUout[34] ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[34] ), 
    .A0(\flattenedMCUout[32] ), .F0(\durThresh0[23] ), .F1(\durThresh0[19] ));
  tuner_pitch_SLICE_297 \tuner.pitch.SLICE_297 ( .D0(\tuner.pitch.counter[1] ), 
    .C0(\tuner.freqThreshold[1] ), .B0(\tuner.freqThreshold[12] ), 
    .A0(\tuner.pitch.counter[12] ), .F0(\tuner.pitch.n19 ));
  tuner_pitch_SLICE_299 \tuner.pitch.SLICE_299 ( 
    .D0(\tuner.pitch.counter[30] ), .C0(\tuner.pitch.counter[21] ), 
    .B0(\tuner.pitch.counter[19] ), .A0(\tuner.pitch.counter[22] ), 
    .F0(\tuner.pitch.n27 ));
  tuner_pitch_SLICE_300 \tuner.pitch.SLICE_300 ( .DI1(\tuner.pitch.pwm_N_344 ), 
    .D1(\tuner.pitch.n29 ), .C1(\tuner.pitch.n30 ), .B1(\tuner.pitch.n2977 ), 
    .A1(pwm_c), .D0(\tuner.pitch.counter[6] ), .C0(\tuner.pitch.counter[5] ), 
    .B0(\tuner.freqThreshold[5] ), .A0(\tuner.freqThreshold[6] ), 
    .CLK(int_osc), .Q1(pwm_c), .F0(\tuner.pitch.n21 ), 
    .F1(\tuner.pitch.pwm_N_344 ));
  tuner_pitch_SLICE_301 \tuner.pitch.SLICE_301 ( 
    .D0(\tuner.pitch.counter[11] ), .C0(\tuner.freqThreshold[11] ), 
    .B0(\tuner.pitch.counter[13] ), .A0(\tuner.freqThreshold[13] ), 
    .F0(\tuner.pitch.n23 ));
  tuner_pitch_SLICE_302 \tuner.pitch.SLICE_302 ( .D0(\tuner.pitch.n29 ), 
    .C0(\tuner.pitch.n30 ), .B0(\tuner.en ), .A0(\tuner.pitch.n2977 ), 
    .F0(\tuner.pitch.counter_31__N_340 ));
  tuner_pitch_SLICE_303 \tuner.pitch.SLICE_303 ( .D0(\tuner.pitch.counter[2] ), 
    .C0(\tuner.pitch.counter[4] ), .B0(\tuner.freqThreshold[2] ), 
    .A0(\tuner.freqThreshold[4] ), .F0(\tuner.pitch.n18 ));
  SLICE_306 SLICE_306( .D0(nreset_c), .C0(done), .F0(n2148));
  tuner_SLICE_307 \tuner.SLICE_307 ( .DI1(\tuner.n3324 ), 
    .D1(\tuner.nextstate_5__N_117 ), .C1(done), 
    .B1(\tuner.nextstate_5__N_122 ), .A1(\tuner.n2111 ), 
    .D0(\tuner.nextstate_5__N_121 ), .C0(\tuner.nextstate_5__N_117 ), 
    .A0(\tuner.nextstate_5__N_122 ), .LSR(nreset_c), .CLK(int_osc), 
    .Q1(\tuner.nextstate_5__N_117 ), .F0(\tuner.n2972 ), .F1(\tuner.n3324 ));
  tuner_SLICE_308 \tuner.SLICE_308 ( 
    .DI1(\tuner.nextstate_5__N_117.sig_039.FeedThruLUT ), 
    .D1(\tuner.nextstate_5__N_117 ), .D0(makingMusic_c), .CE(\tuner.n2972 ), 
    .CLK(int_osc), .Q1(makingMusic_c), .F0(n2123), 
    .F1(\tuner.nextstate_5__N_117.sig_039.FeedThruLUT ));
  tuner_SLICE_309 \tuner.SLICE_309 ( .DI1(\tuner.n2132 ), 
    .D1(\tuner.nextstate_5__N_120 ), .C1(\tuner.nextstate_5__N_117 ), 
    .B1(\tuner.stopCountFlag ), .A1(\tuner.nextstate_5__N_122 ), 
    .D0(\tuner.nextstate_5__N_117 ), .C0(\tuner.nextstate_5__N_120 ), 
    .B0(\tuner.nextstate_5__N_122 ), .A0(\tuner.stopCountFlag ), .CLK(int_osc), 
    .Q1(\tuner.stopCountFlag ), .F0(\tuner.n676 ), .F1(\tuner.n2132 ));
  tuner_pitch_SLICE_311 \tuner.pitch.SLICE_311 ( .D0(\tuner.pitch.counter[3] ), 
    .C0(\tuner.freqThreshold[3] ), .B0(\tuner.pitch.counter[14] ), 
    .A0(\tuner.freqThreshold[14] ), .F0(\tuner.pitch.n22 ));
  tuner_pitch_SLICE_312 \tuner.pitch.SLICE_312 ( 
    .D0(\tuner.pitch.counter[25] ), .C0(\tuner.pitch.counter[28] ), 
    .B0(\tuner.pitch.counter[26] ), .A0(\tuner.pitch.counter[17] ), 
    .F0(\tuner.pitch.n26 ));
  tuner_howLong_SLICE_313 \tuner.howLong.SLICE_313 ( .DI1(\tuner.n4296 ), 
    .D1(\tuner.n1995 ), .C1(\durThresh0[23] ), .B1(\durThresh1[23] ), 
    .A1(\tuner.n4293 ), .D0(\tuner.howLong.counter[7] ), 
    .C0(\durThreshold[7] ), .B0(\tuner.howLong.counter[23] ), 
    .A0(\tuner.durThreshold[23] ), .CE(n2126), .CLK(int_osc), 
    .Q1(\tuner.durThreshold[23] ), .F0(\tuner.howLong.n25 ), 
    .F1(\tuner.n4296 ));
  tuner_howLong_SLICE_314 \tuner.howLong.SLICE_314 ( 
    .D1(\tuner.durThreshold[19] ), .C1(\durThreshold[21] ), 
    .B1(\tuner.howLong.counter[19] ), .A1(\tuner.howLong.counter[21] ), 
    .D0(\tuner.howLong.counter[12] ), .C0(\tuner.durThreshold[19] ), 
    .B0(\tuner.howLong.counter[10] ), .A0(\durThreshold[12] ), 
    .F0(\tuner.howLong.n21 ), .F1(\tuner.howLong.n23 ));
  SLICE_322 SLICE_322( .F0(VCC_net));
  spi_newFlattenedMCUout_i0 \spi.newFlattenedMCUout_i0 ( .PADDI(sdi_c), 
    .INCLK(sck_c), .DI0(\newFlattenedMCUout[0] ));
  hf_osc hf_osc( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(int_osc));
  ce ce_I( .PADDI(ce_c), .ce(ce));
  sdi sdi_I( .PADDI(sdi_c), .sdi(sdi));
  sck sck_I( .PADDI(sck_c), .sck(sck));
  nreset nreset_I( .PADDI(nreset_c), .nreset(nreset));
  makingMusic makingMusic_I( .PADDO(makingMusic_c), .makingMusic(makingMusic));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module tuner_pitch_SLICE_0 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module tuner_pitch_SLICE_1 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_136_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_136__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_136__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_17 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_20 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_21 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_22 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_23 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_31 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_135__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_33 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \tuner/howLong/counter_135_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_135__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module spi_SLICE_34 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_34_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_34_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_36 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_36_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_36_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_37 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 SLICE_37_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i39 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_38 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_38_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_38_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i37 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i38 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_40 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_40_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_40_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i35 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i36 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_42 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_42_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_42_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i33 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i34 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_44 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_44_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_44_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_46 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_46_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_46_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_48 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_48_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_48_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_50 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_50_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_50_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_52_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_52_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_54 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_54_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_54_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_56 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_56_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_56_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_58_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_58_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_60 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_60_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_60_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_62_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_62_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_64 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_64_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_64_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_66 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_66_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_66_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_69 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_69_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_69_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_71 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_71_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_71_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module tuner_SLICE_74 ( input DI0, D0, C0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40003 \tuner/i1342_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/counter__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_75 ( input DI0, D0, C0, B0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40004 i1451_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/durThreshold_i0_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x3F30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_77 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \tuner/n4197_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \tuner/n4305_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xAAD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xCEC2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_78 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 \tuner/n4245_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 \tuner.i2655_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i14 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xAAE4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x3335") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \tuner/n4269_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner/n4263_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i12 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xCCB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xADA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \tuner/n4281_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner/n4287_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i10 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \tuner/n4257_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner/n4275_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_86 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \tuner/n4239_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner/n4251_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40011 \tuner.i2679_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner/n4221_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x333A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40007 \tuner/n4203_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \tuner/n4209_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_93 ( input DI0, D0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40012 \tuner/i156_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/counter__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_95 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40013 \tuner.i2673_3_lut$r0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 \tuner/n4215_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i18 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/durThreshold_i0_i19 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x555C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xDC98") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_98 ( input DI1, DI0, D1, C1, B1, D0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \tuner/i1_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \tuner.SLICE_98_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20016 \tuner/state_FSM_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20016 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module tuner_SLICE_99 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \tuner.SLICE_99_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \tuner.SLICE_99_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \tuner/state_FSM_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_103 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40017 i1462_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 i1463_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1460_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1461_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 i1458_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 i1459_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x3F0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1456_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1457_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_111 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i1454_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 i1455_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40024 i1452_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 i1453_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_117 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40025 \tuner/nextstate_5__N_122_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/en_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_118 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_118_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_118_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i33 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i34 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_120 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_120_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_120_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i31 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i32 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_122 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_122_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_122_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i29 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i30 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_124 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_124_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 SLICE_124_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i27 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i28 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_126_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_126_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i25 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i26 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_128 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_128_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 SLICE_128_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i23 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i24 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_130 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_130_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_130_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i21 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i22 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_132 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_132_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 SLICE_132_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i19 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i20 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_134 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_134_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_134_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_136 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_136_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_136_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_138 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_138_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_138_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_140 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_140_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_140_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_142 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_142_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_142_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_144 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_144_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_144_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_146 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_146_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_146_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_148 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_148_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_148_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_150 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_150_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_150_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 \enabler/flattenedMCUout__0__i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 \tuner/n4299_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \tuner/n1997_bdd_4_lut_19 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xCFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40030 \tuner/n4233_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \tuner/n1997_bdd_4_lut_8 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xAFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40032 \tuner/n1997_bdd_4_lut_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \tuner/i1317_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xACF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x00FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40009 \tuner/n4227_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \aD2DT/d2d0/i1687_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40035 \tuner/n1997_bdd_4_lut_4 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \aT2FT/t2F2/i2664_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xF388") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xCE26") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40037 \tuner/n1997_bdd_4_lut_3 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 \aT2FT/t2F2/i447_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xE2CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x1340") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \aT2FT/t2F2/i1376_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xF588") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x52F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_18 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 \aD2DT/d2d2/Mux_726_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x342C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_17 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \aT2FT/t2F2/i368_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xE71C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_16 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \aT2FT/t2F2/i369_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x1BBD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40044 \tuner/n1997_bdd_4_lut_15 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \aT2FT/t2F2/i391_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xE4AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xF7AE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_172 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \aT2FT/t2F2/i461_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x15FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_14 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \aT2FT/t2F2/i353_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x27C7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_176 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2796_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \aT2FT/t2F3/i2682_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xF41C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40050 \tuner/n1997_bdd_4_lut_13 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \aT2FT/t2F2/i352_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xC98A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_180 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \tuner/i1_2_lut_3_lut_adj_11 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \tuner/counter_1__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_12 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \aT2FT/t2F2/i392_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x2FE9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40055 \tuner.i2673_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \tuner/i2672_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x3372") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x3530") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_186 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \tuner/i2671_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \aD2DT/d2d0/i1691_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xE0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_11 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \aT2FT/t2F2/i412_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xE34E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_190 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40060 \tuner/i2678_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \aT2FT/t2F3/i576_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x2722") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xEBFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F2_SLICE_191 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \tuner/i2822_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \aT2FT/t2F2/i426_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xF9FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_192 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \tuner/i2677_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \aT2FT/t2F0/i1029_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xEFBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_194 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2794_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \aD2DT/d2d3/i850_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xCDB3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_196 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2860_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \aT2FT/t2F3/i575_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x3522") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_198 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_10 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \aT2FT/t2F2/i336_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xAC6D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_201 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40068 \tuner/i2654_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \tuner/i2826_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xB8BB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_202 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \aT2FT/t2F1/i311_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \tuner/i2847_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x1F3C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_203 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40072 \tuner/i2653_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \aT2FT/t2F0/i1791_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xAAFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_9 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \aT2FT/t2F2/i413_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x538E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_206 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2815_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \aD2DT/d2d3/i1659_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_208 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2832_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \tuner/i1_4_lut_adj_10 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_210 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40077 \tuner/i2841_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \aT2FT/t2F3/i563_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x47B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_212 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40079 \tuner/n1997_bdd_4_lut_5 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \tuner/i1610_1_lut_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xEA4A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_214 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2795_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \aT2FT/t2F3/i486_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x9AF1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_216 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2849_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \aT2FT/t2F3/i562_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x9DB2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_218 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2857_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \aT2FT/t2F3/i542_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x73E9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_220 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2856_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \aT2FT/t2F3/i502_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_SLICE_222 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2851_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \aT2FT/t2F3/i503_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x4A77") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_224 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2871_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \aT2FT/t2F3/i611_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x13FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 \tuner/n1997_bdd_4_lut_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 \aT2FT/t2F2/i425_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x0E26") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_228 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2852_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \aT2FT/t2F3/i541_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xBFDC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_230 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2855_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \aT2FT/t2F3/i519_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x1BBD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_232 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2838_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \aT2FT/t2F3/i518_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xE17C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_234 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2840_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \aD2DT/d2d3/Mux_827_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x1C38") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_236 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2870_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \aT2FT/t2F3/i1385_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x34F4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_238 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \tuner/i2863_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40038 \aT2FT/t2F3/i597_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_240 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40092 \tuner/pitch/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \tuner/pitch/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_242 ( input D0, C0, B0, A0, output F0 );

  lut40093 \tuner/pitch/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_243 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40094 \tuner/pitch/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \tuner/pitch/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_244 ( input D0, C0, B0, A0, output F0 );

  lut40096 \tuner/pitch/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40094 \tuner/pitch/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \tuner/pitch/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_246 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40098 \tuner/howLong/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \tuner/howLong/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40100 \tuner/howLong/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \tuner/howLong/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_249 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40101 \tuner/howLong/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40102 \tuner/howLong/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40103 \tuner/howLong/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 \tuner/howLong/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_251 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40105 \tuner/howLong/i2962_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \tuner/howLong/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_252 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40106 \tuner/howLong/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 \tuner/howLong/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_254 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40108 \tuner.howLong.SLICE_254_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40109 \tuner/howLong/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/howLong/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_256 ( input DI1, D1, D0, C0, B0, A0, CE, LSR, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \tuner.SLICE_256_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \tuner/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_257 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40111 \tuner/i2827_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40112 \tuner.i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40113 \aT2FT/t2F1/i297_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40114 \aT2FT/t2F1/i1367_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0x1520") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x5F22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_261 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40115 \aT2FT/t2F1/i275_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 \aT2FT/t2F1/i2661_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0x0B4C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xCD70") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_263 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40117 \aT2FT/t2F1/i263_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40118 \aT2FT/t2F1/i218_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x583E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xE71A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_265 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40119 \aT2FT/t2F1/i262_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 \aT2FT/t2F1/i202_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xE25E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xE1C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40121 \aT2FT/t2F1/i242_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 \aT2FT/t2F1/i203_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x5ECB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0x385F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_269 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40123 \aT2FT/t2F1/i241_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40124 \aT2FT/t2F1/i276_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xBFF4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xEFDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_271 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40125 \aT2FT/t2F1/i219_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40126 \aT2FT/t2F1/i186_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x1DDB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xA6CD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_272 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40127 \aT2FT/t2F0/i956_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40128 \aT2FT/t2F0/i955_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0x583F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xF184") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40129 \aT2FT/t2F0/i971_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \aT2FT/t2F0/i939_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xC69E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xB4CD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_276 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40131 \aT2FT/t2F0/i972_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40132 \aT2FT/t2F0/i2685_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x3E57") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xAB70") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_278 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40133 \aT2FT/t2F0/i1394_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 \aT2FT/t2F0/i1064_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0x5F30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0x3676") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_280 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40135 \aT2FT/t2F0/i994_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40136 \aT2FT/t2F0/i1050_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0xFC7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x0622") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40137 \aT2FT/t2F0/i995_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40138 \aT2FT/t2F0/i1028_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0x2FE9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x04BC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_284 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40139 \aT2FT/t2F0/i1015_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40140 \aT2FT/t2F0/i1016_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xD83E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0x47A6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d2_SLICE_286 ( input D0, C0, B0, A0, output F0 );

  lut40141 \aD2DT/d2d2/i749_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xCBD3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d2_SLICE_287 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40142 \aD2DT/d2d2/i1649_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40143 \aD2DT/d2d2/i1645_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0xAA80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0xFCEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d1_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40144 \aD2DT/d2d1/i1630_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40145 \aD2DT/d2d1/i648_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0xFCEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0xABD5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d1_SLICE_290 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40146 \aD2DT/d2d1/i1634_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40147 \aD2DT/d2d1/Mux_625_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x542A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d0_SLICE_292 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40148 \aD2DT/d2d0/i1101_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 \aD2DT/d2d0/Mux_1078_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0xEA57") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_297 ( input D0, C0, B0, A0, output F0 );

  lut40149 \tuner/pitch/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_299 ( input D0, C0, B0, A0, output F0 );

  lut40150 \tuner/pitch/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_300 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40151 \tuner/pitch/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40053 \tuner/pitch/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/pitch/pwm ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_301 ( input D0, C0, B0, A0, output F0 );

  lut40152 \tuner/pitch/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_302 ( input D0, C0, B0, A0, output F0 );

  lut40153 \tuner/pitch/i2959_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x3337") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_303 ( input D0, C0, B0, A0, output F0 );

  lut40154 \tuner/pitch/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_306 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40155 i1466_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_307 ( input DI1, D1, C1, B1, A1, D0, C0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40156 \tuner/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40157 \tuner/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/state_FSM_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0xEFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_308 ( input DI1, D1, D0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut4 \tuner.SLICE_308_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 \tuner/i1441_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \tuner/makingMusic ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_309 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40158 \tuner/i1450_4_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40159 \tuner/i139_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/stopCountFlag_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0x8D8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0xCCDC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_311 ( input D0, C0, B0, A0, output F0 );

  lut40160 \tuner/pitch/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_312 ( input D0, C0, B0, A0, output F0 );

  lut40150 \tuner/pitch/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_313 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40005 \tuner/n4293_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40160 \tuner/howLong/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_314 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40161 \tuner/howLong/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \tuner/howLong/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_322 ( output F0 );
  wire   GNDI;

  lut40162 i3333( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module spi_newFlattenedMCUout_i0 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \spi/newFlattenedMCUout_i0 ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module hf_osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hf_osc( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b01";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module ce ( output PADDI, input ce );
  wire   GNDI;

  BB_B_B \ce_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(ce));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (ce => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module sdi ( output PADDI, input sdi );
  wire   GNDI;

  BB_B_B \sdi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sdi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sck ( output PADDI, input sck );
  wire   GNDI;

  BB_B_B \sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module nreset ( output PADDI, input nreset );
  wire   GNDI;

  BB_B_B \nreset_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(nreset));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (nreset => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module makingMusic ( input PADDO, output makingMusic );
  wire   VCCI;

  BB_B_B \makingMusic_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(makingMusic));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => makingMusic) = (0:0:0,0:0:0);
  endspecify

endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule
