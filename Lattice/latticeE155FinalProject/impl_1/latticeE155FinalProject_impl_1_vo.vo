
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Mon Nov 28 20:40:38 2022
// Netlist written on Mon Nov 28 20:40:50 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( sdi, sck, clk, pwm );
  input  sdi, sck, clk;
  output pwm;
  wire   \makeMusic.pitch.n133[31] , \makeMusic.pitch.n3424 , 
         \makeMusic.pitch.n1542 , \makeMusic.pitch.counter[31] , 
         \makeMusic.pitch.n1447 , int_osc_c, \makeMusic.pitch.n133[30] , 
         \makeMusic.pitch.n133[29] , \makeMusic.pitch.n3421 , 
         \makeMusic.pitch.counter[30] , \makeMusic.pitch.n1540 , 
         \makeMusic.pitch.counter[29] , \makeMusic.pitch.n133[28] , 
         \makeMusic.pitch.n133[27] , \makeMusic.pitch.n3418 , 
         \makeMusic.pitch.counter[28] , \makeMusic.pitch.n1538 , 
         \makeMusic.pitch.counter[27] , \makeMusic.pitch.n133[26] , 
         \makeMusic.pitch.n133[25] , \makeMusic.pitch.n3415 , 
         \makeMusic.pitch.counter[26] , \makeMusic.pitch.n1536 , 
         \makeMusic.pitch.counter[25] , \makeMusic.pitch.n133[24] , 
         \makeMusic.pitch.n133[23] , \makeMusic.pitch.n3412 , 
         \makeMusic.pitch.counter[24] , \makeMusic.pitch.n1534 , 
         \makeMusic.pitch.counter[23] , \makeMusic.pitch.n133[22] , 
         \makeMusic.pitch.n133[21] , \makeMusic.pitch.n3409 , 
         \makeMusic.pitch.counter[22] , \makeMusic.pitch.n1532 , 
         \makeMusic.pitch.counter[21] , \makeMusic.pitch.n133[20] , 
         \makeMusic.pitch.n133[19] , \makeMusic.pitch.n3406 , 
         \makeMusic.pitch.counter[20] , \makeMusic.pitch.n1530 , 
         \makeMusic.pitch.counter[19] , \makeMusic.pitch.n133[18] , 
         \makeMusic.pitch.n133[17] , \makeMusic.pitch.n3403 , 
         \makeMusic.pitch.counter[18] , \makeMusic.pitch.n1528 , 
         \makeMusic.pitch.counter[17] , \makeMusic.pitch.n133[16] , 
         \makeMusic.pitch.n133[15] , \makeMusic.pitch.n3400 , 
         \makeMusic.pitch.counter[16] , \makeMusic.pitch.n1526 , 
         \makeMusic.pitch.counter[15] , \makeMusic.pitch.n133[14] , 
         \makeMusic.pitch.n133[13] , \makeMusic.pitch.n3397 , 
         \makeMusic.pitch.counter[14] , \makeMusic.pitch.n1524 , 
         \makeMusic.pitch.counter[13] , \makeMusic.pitch.n133[12] , 
         \makeMusic.pitch.n133[11] , \makeMusic.pitch.n3394 , 
         \makeMusic.pitch.counter[12] , \makeMusic.pitch.n1522 , 
         \makeMusic.pitch.counter[11] , \makeMusic.pitch.n133[10] , 
         \makeMusic.pitch.n133[9] , \makeMusic.pitch.n3391 , 
         \makeMusic.pitch.counter[10] , \makeMusic.pitch.n1520 , 
         \makeMusic.pitch.counter[9] , \makeMusic.pitch.n133[8] , 
         \makeMusic.pitch.n133[7] , \makeMusic.pitch.n3388 , 
         \makeMusic.pitch.counter[8] , \makeMusic.pitch.n1518 , 
         \makeMusic.pitch.counter[7] , \makeMusic.pitch.n133[6] , 
         \makeMusic.pitch.n133[5] , \makeMusic.pitch.n3385 , 
         \makeMusic.pitch.counter[6] , \makeMusic.pitch.n1516 , 
         \makeMusic.pitch.counter[5] , \makeMusic.pitch.n133[4] , 
         \makeMusic.pitch.n133[3] , \makeMusic.pitch.n3382 , 
         \makeMusic.pitch.counter[4] , \makeMusic.pitch.n1514 , 
         \makeMusic.pitch.counter[3] , \makeMusic.pitch.n133[2] , 
         \makeMusic.pitch.n133[1] , \makeMusic.pitch.n3379 , 
         \makeMusic.pitch.counter[2] , \makeMusic.pitch.n1512 , 
         \makeMusic.pitch.counter[1] , \makeMusic.pitch.n133[0] , 
         \makeMusic.pitch.n3376 , \makeMusic.pitch.counter[0] , VCC_net, 
         \makeMusic.pitch.n3301 , \makeMusic.pitch.threshold_31__N_246[26] , 
         \makeMusic.pitch.threshold[12] , \makeMusic.pitch.n1600 , 
         \makeMusic.pitch.n3304 , \makeMusic.pitch.threshold[13] , 
         \makeMusic.pitch.threshold[14] , \makeMusic.pitch.n1602 , 
         \makeMusic.pitch.n3307 , \makeMusic.pitch.threshold[15] , 
         \makeMusic.pitch.threshold[16] , \makeMusic.pitch.n1604 , 
         \makeMusic.pitch.n3310 , \makeMusic.pitch.threshold[17] , 
         \makeMusic.pitch.threshold[18] , \makeMusic.pitch.n1606 , 
         \makeMusic.pitch.n3313 , \makeMusic.pitch.threshold[19] , 
         \makeMusic.pitch.threshold[20] , \makeMusic.pitch.n1608 , 
         \makeMusic.pitch.n3316 , \makeMusic.pitch.threshold[23] , 
         \makeMusic.pitch.threshold[24] , \makeMusic.pitch.n1610 , 
         \makeMusic.pitch.n3319 , \makeMusic.pitch.threshold[27] , 
         \makeMusic.pitch.threshold[28] , \makeMusic.pitch.n1612 , 
         \makeMusic.pitch.n3322 , \makeMusic.pitch.threshold[30] , 
         \makeMusic.pitch.threshold[31] , \makeMusic.howLong.n133[8] , 
         \makeMusic.howLong.n133[7] , \makeMusic.howLong.n3337 , 
         \makeMusic.howLong.counter[8] , \makeMusic.howLong.n1551 , 
         \makeMusic.howLong.counter[7] , done, \makeMusic.howLong.n1553 , 
         \makeMusic.howLong.n133[6] , \makeMusic.howLong.n133[5] , 
         \makeMusic.howLong.n3334 , \makeMusic.howLong.counter[6] , 
         \makeMusic.howLong.n1549 , \makeMusic.howLong.counter[5] , 
         \makeMusic.howLong.n133[4] , \makeMusic.howLong.n133[3] , 
         \makeMusic.howLong.n3331 , \makeMusic.howLong.counter[4] , 
         \makeMusic.howLong.n1547 , \makeMusic.howLong.counter[3] , 
         \makeMusic.howLong.n133[2] , \makeMusic.howLong.n133[1] , 
         \makeMusic.howLong.n3328 , \makeMusic.howLong.counter[2] , 
         \makeMusic.howLong.n1545 , \makeMusic.howLong.counter[1] , 
         \makeMusic.howLong.n133[0] , \makeMusic.howLong.n3325 , 
         \makeMusic.howLong.counter[0] , \makeMusic.howLong.n3298 , 
         \makeMusic.howLong.n1509 , \makeMusic.howLong.n449[11] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[31] , 
         \makeMusic.howLong.n3292 , \makeMusic.howLong.n449[10] , 
         \makeMusic.howLong.n1507 , \makeMusic.howLong.n449[9] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[29] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[30] , 
         \makeMusic.howLong.n3286 , \makeMusic.howLong.n449[8] , 
         \makeMusic.howLong.n1505 , \makeMusic.howLong.n474[16] , 
         \makeMusic.howLong.n449[7] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[27] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[28] , 
         \makeMusic.howLong.n3265 , \makeMusic.howLong.n474[9] , 
         \makeMusic.howLong.n449[0] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[20] , 
         \makeMusic.howLong.n1499 , \makeMusic.howLong.n3280 , 
         \makeMusic.howLong.n474[15] , \makeMusic.howLong.n449[6] , 
         \makeMusic.howLong.n1503 , \makeMusic.howLong.n474[14] , 
         \makeMusic.howLong.n449[5] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[25] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[26] , 
         \makeMusic.howLong.n3268 , \makeMusic.howLong.n474[11] , 
         \makeMusic.howLong.n449[2] , \makeMusic.howLong.n474[10] , 
         \makeMusic.howLong.n449[1] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[21] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[22] , 
         \makeMusic.howLong.n1501 , \makeMusic.howLong.n133[10] , 
         \makeMusic.howLong.n133[9] , \makeMusic.howLong.n3340 , 
         \makeMusic.howLong.counter[10] , \makeMusic.howLong.counter[9] , 
         \makeMusic.howLong.n1555 , \makeMusic.howLong.n3274 , 
         \makeMusic.howLong.n474[13] , \makeMusic.howLong.n449[4] , 
         \makeMusic.howLong.n474[12] , \makeMusic.howLong.n449[3] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[23] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[24] , 
         \makeMusic.howLong.n133[12] , \makeMusic.howLong.n133[11] , 
         \makeMusic.howLong.n3343 , \makeMusic.howLong.counter[12] , 
         \makeMusic.howLong.counter[11] , \makeMusic.howLong.n1557 , 
         \makeMusic.howLong.n133[14] , \makeMusic.howLong.n133[13] , 
         \makeMusic.howLong.n3346 , \makeMusic.howLong.counter[14] , 
         \makeMusic.howLong.counter[13] , \makeMusic.howLong.n1559 , 
         \makeMusic.howLong.n133[16] , \makeMusic.howLong.n133[15] , 
         \makeMusic.howLong.n3349 , \makeMusic.howLong.counter[16] , 
         \makeMusic.howLong.counter[15] , \makeMusic.howLong.n1561 , 
         \makeMusic.howLong.n133[18] , \makeMusic.howLong.n133[17] , 
         \makeMusic.howLong.n3352 , \makeMusic.howLong.counter[18] , 
         \makeMusic.howLong.counter[17] , \makeMusic.howLong.n1563 , 
         \makeMusic.howLong.n133[20] , \makeMusic.howLong.n133[19] , 
         \makeMusic.howLong.n3355 , \makeMusic.howLong.counter[20] , 
         \makeMusic.howLong.counter[19] , \makeMusic.howLong.n1565 , 
         \makeMusic.howLong.n133[22] , \makeMusic.howLong.n133[21] , 
         \makeMusic.howLong.n3358 , \makeMusic.howLong.counter[22] , 
         \makeMusic.howLong.counter[21] , \makeMusic.howLong.n1567 , 
         \makeMusic.howLong.n133[24] , \makeMusic.howLong.n133[23] , 
         \makeMusic.howLong.n3361 , \makeMusic.howLong.counter[24] , 
         \makeMusic.howLong.counter[23] , \makeMusic.howLong.n1569 , 
         \makeMusic.howLong.n133[26] , \makeMusic.howLong.n133[25] , 
         \makeMusic.howLong.n3364 , \makeMusic.howLong.counter[26] , 
         \makeMusic.howLong.counter[25] , \makeMusic.howLong.n1571 , 
         \makeMusic.howLong.n133[28] , \makeMusic.howLong.n133[27] , 
         \makeMusic.howLong.n3367 , \makeMusic.howLong.counter[28] , 
         \makeMusic.howLong.counter[27] , \makeMusic.howLong.n1573 , 
         \makeMusic.howLong.n133[30] , \makeMusic.howLong.n133[29] , 
         \makeMusic.howLong.n3370 , \makeMusic.howLong.counter[30] , 
         \makeMusic.howLong.counter[29] , \makeMusic.howLong.n1575 , 
         \makeMusic.howLong.n133[31] , \makeMusic.howLong.n3373 , 
         \makeMusic.howLong.counter[31] , \makeMusic.howLong.n3247 , 
         \makeMusic.howLong.THRESHOLD_31__N_145[11] , 
         \makeMusic.howLong.THRESHOLD[11] , \makeMusic.howLong.n1578 , 
         \makeMusic.howLong.n3250 , 
         \makeMusic.howLong.THRESHOLD_31__N_145[13] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[12] , 
         \makeMusic.howLong.THRESHOLD[12] , \makeMusic.howLong.THRESHOLD[13] , 
         \makeMusic.howLong.n1580 , \makeMusic.howLong.n3253 , 
         \makeMusic.howLong.THRESHOLD_31__N_145[15] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[14] , 
         \makeMusic.howLong.THRESHOLD[14] , \makeMusic.howLong.THRESHOLD[15] , 
         \makeMusic.howLong.n1582 , \makeMusic.howLong.n3256 , 
         \makeMusic.howLong.THRESHOLD_31__N_145[17] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[16] , 
         \makeMusic.howLong.THRESHOLD[16] , \makeMusic.howLong.THRESHOLD[17] , 
         \makeMusic.howLong.n1584 , \makeMusic.howLong.n3259 , 
         \makeMusic.howLong.THRESHOLD_31__N_145[19] , 
         \makeMusic.howLong.THRESHOLD_31__N_145[18] , 
         \makeMusic.howLong.THRESHOLD[18] , \makeMusic.howLong.THRESHOLD[19] , 
         \makeMusic.howLong.n1586 , \makeMusic.howLong.n3262 , 
         \makeMusic.howLong.THRESHOLD[20] , \makeMusic.howLong.THRESHOLD[21] , 
         \makeMusic.howLong.n1588 , \makeMusic.howLong.n3271 , 
         \makeMusic.howLong.THRESHOLD[22] , \makeMusic.howLong.THRESHOLD[23] , 
         \makeMusic.howLong.n1590 , \makeMusic.howLong.n3277 , 
         \makeMusic.howLong.THRESHOLD[24] , \makeMusic.howLong.THRESHOLD[25] , 
         \makeMusic.howLong.n1592 , \makeMusic.howLong.n3283 , 
         \makeMusic.howLong.THRESHOLD[26] , \makeMusic.howLong.THRESHOLD[27] , 
         \makeMusic.howLong.n1594 , \makeMusic.howLong.n3289 , 
         \makeMusic.howLong.THRESHOLD[28] , \makeMusic.howLong.THRESHOLD[29] , 
         \makeMusic.howLong.n1596 , \makeMusic.howLong.n3295 , 
         \makeMusic.howLong.THRESHOLD[30] , \makeMusic.howLong.THRESHOLD[31] , 
         \newFlattenedMCUout[23].sig_096.FeedThruLUT , 
         \newFlattenedMCUout[22].sig_000.FeedThruLUT , 
         \newFlattenedMCUout[23] , \newFlattenedMCUout[22] , 
         flattenedMCUout_47__N_49, \flattenedMCUout[22] , 
         \flattenedMCUout[23] , \newFlattenedMCUout[20].sig_003.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_001.FeedThruLUT , 
         \newFlattenedMCUout[20] , \newFlattenedMCUout[21] , 
         \flattenedMCUout[21] , \flattenedMCUout[20] , 
         \newFlattenedMCUout[40].sig_015.FeedThruLUT , 
         \newFlattenedMCUout[41].sig_002.FeedThruLUT , 
         \newFlattenedMCUout[40] , \newFlattenedMCUout[41] , 
         \flattenedMCUout[41] , \flattenedMCUout[40] , 
         \newFlattenedMCUout[18].sig_005.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_004.FeedThruLUT , 
         \newFlattenedMCUout[18] , \newFlattenedMCUout[19] , 
         \flattenedMCUout[19] , \flattenedMCUout[18] , 
         \newFlattenedMCUout[16].sig_007.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_006.FeedThruLUT , 
         \newFlattenedMCUout[16] , \newFlattenedMCUout[17] , 
         \flattenedMCUout[17] , \flattenedMCUout[16] , 
         \newFlattenedMCUout[14].sig_009.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_008.FeedThruLUT , 
         \newFlattenedMCUout[14] , \newFlattenedMCUout[15] , 
         \flattenedMCUout[15] , \flattenedMCUout[14] , 
         \newFlattenedMCUout[12].sig_011.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_010.FeedThruLUT , 
         \newFlattenedMCUout[12] , \newFlattenedMCUout[13] , 
         \flattenedMCUout[13] , \flattenedMCUout[12] , 
         \newFlattenedMCUout[10].sig_013.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_012.FeedThruLUT , 
         \newFlattenedMCUout[10] , \newFlattenedMCUout[11] , 
         \flattenedMCUout[11] , \flattenedMCUout[10] , 
         \newFlattenedMCUout[8].sig_026.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_014.FeedThruLUT , \newFlattenedMCUout[8] , 
         \newFlattenedMCUout[9] , \flattenedMCUout[9] , \flattenedMCUout[8] , 
         \newFlattenedMCUout[27].sig_034.FeedThruLUT , 
         \newFlattenedMCUout[26].sig_016.FeedThruLUT , 
         \newFlattenedMCUout[27] , \newFlattenedMCUout[26] , 
         \flattenedMCUout[26] , \flattenedMCUout[27] , 
         \newFlattenedMCUout[25].sig_046.FeedThruLUT , 
         \newFlattenedMCUout[24].sig_017.FeedThruLUT , 
         \newFlattenedMCUout[25] , \newFlattenedMCUout[24] , 
         \flattenedMCUout[24] , \flattenedMCUout[25] , 
         \newFlattenedMCUout[1].sig_019.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_018.FeedThruLUT , \newFlattenedMCUout[1] , 
         \newFlattenedMCUout[0] , \flattenedMCUout[0] , \flattenedMCUout[1] , 
         \newFlattenedMCUout[3].sig_021.FeedThruLUT , 
         \newFlattenedMCUout[2].sig_020.FeedThruLUT , \newFlattenedMCUout[3] , 
         \newFlattenedMCUout[2] , \flattenedMCUout[2] , \flattenedMCUout[3] , 
         \newFlattenedMCUout[5].sig_023.FeedThruLUT , 
         \newFlattenedMCUout[4].sig_022.FeedThruLUT , \newFlattenedMCUout[5] , 
         \newFlattenedMCUout[4] , \flattenedMCUout[4] , \flattenedMCUout[5] , 
         \newFlattenedMCUout[7].sig_025.FeedThruLUT , 
         \newFlattenedMCUout[6].sig_024.FeedThruLUT , \newFlattenedMCUout[7] , 
         \newFlattenedMCUout[6] , \flattenedMCUout[6] , \flattenedMCUout[7] , 
         \newFlattenedMCUout[33].sig_035.FeedThruLUT , 
         \newFlattenedMCUout[32].sig_027.FeedThruLUT , 
         \newFlattenedMCUout[33] , \newFlattenedMCUout[32] , 
         \flattenedMCUout[32] , \flattenedMCUout[33] , 
         \makeMusic.dur_7__N_52[1] , \makeMusic.dur_7__N_52[0] , 
         \makeMusic.freq_9__N_96 , \makeMusic.dur_7__N_97[1] , 
         \makeMusic.dur_7__N_97[0] , \makeMusic.n1431 , \makeMusic.dur[0] , 
         \makeMusic.dur[1] , \makeMusic.n13[1] , \makeMusic.n13[0] , 
         \makeMusic.counter[0] , \makeMusic.n311[3] , \makeMusic.counter[1] , 
         \makeMusic.n1469 , \makeMusic.n311[2] , \makeMusic.dur_7__N_52[6] , 
         \makeMusic.dur_7__N_52[7] , \makeMusic.dur_7__N_97[6] , 
         \flattenedMCUout[38] , \makeMusic.dur_7__N_97[7] , 
         \flattenedMCUout[39] , \makeMusic.dur[7] , \makeMusic.dur[6] , 
         \makeMusic.dur_7__N_52[4] , \makeMusic.dur_7__N_52[5] , 
         \flattenedMCUout[36] , \makeMusic.dur_7__N_97[4] , 
         \flattenedMCUout[37] , \makeMusic.dur_7__N_97[5] , \makeMusic.dur[5] , 
         \makeMusic.dur[4] , \makeMusic.dur_7__N_52[2] , 
         \makeMusic.dur_7__N_52[3] , \flattenedMCUout[34] , 
         \makeMusic.dur_7__N_97[2] , \makeMusic.dur_7__N_97[3] , 
         \flattenedMCUout[35] , \makeMusic.dur[3] , \makeMusic.dur[2] , 
         \makeMusic.n1455 , \makeMusic.n1456 , \makeMusic.freq[2] , 
         \makeMusic.n397[2] , \makeMusic.n397[1] , \makeMusic.freq[1] , 
         \makeMusic.n1453 , \makeMusic.n1454 , \makeMusic.freq[4] , 
         \makeMusic.n397[4] , \makeMusic.freq[3] , \makeMusic.n397[3] , 
         \makeMusic.n1451 , \makeMusic.n1452 , \makeMusic.freq[6] , 
         \makeMusic.n397[6] , \makeMusic.freq[5] , \makeMusic.n397[5] , 
         \makeMusic.n1449 , \makeMusic.n1450 , \makeMusic.n397[8] , 
         \makeMusic.freq[8] , \makeMusic.freq[7] , \makeMusic.n397[7] , 
         \makeMusic.freq_9__N_96.sig_029.FeedThruLUT , 
         \makeMusic.n311[2].sig_028.FeedThruLUT , n1458, start, 
         \newFlattenedMCUout[30].sig_031.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_030.FeedThruLUT , 
         \newFlattenedMCUout[30] , \newFlattenedMCUout[31] , 
         \flattenedMCUout[31] , \flattenedMCUout[30] , 
         \newFlattenedMCUout[28].sig_033.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_032.FeedThruLUT , 
         \newFlattenedMCUout[28] , \newFlattenedMCUout[29] , 
         \flattenedMCUout[29] , \flattenedMCUout[28] , 
         \newFlattenedMCUout[35].sig_037.FeedThruLUT , 
         \newFlattenedMCUout[34].sig_036.FeedThruLUT , 
         \newFlattenedMCUout[35] , \newFlattenedMCUout[34] , 
         \newFlattenedMCUout[37].sig_039.FeedThruLUT , 
         \newFlattenedMCUout[36].sig_038.FeedThruLUT , 
         \newFlattenedMCUout[37] , \newFlattenedMCUout[36] , 
         \newFlattenedMCUout[39].sig_048.FeedThruLUT , 
         \newFlattenedMCUout[38].sig_040.FeedThruLUT , 
         \newFlattenedMCUout[39] , \newFlattenedMCUout[38] , 
         \newFlattenedMCUout[42].sig_047.FeedThruLUT , 
         \newFlattenedMCUout[43].sig_041.FeedThruLUT , 
         \newFlattenedMCUout[42] , \newFlattenedMCUout[43] , 
         \flattenedMCUout[43] , \flattenedMCUout[42] , 
         \newFlattenedMCUout[45].sig_043.FeedThruLUT , 
         \newFlattenedMCUout[44].sig_042.FeedThruLUT , 
         \newFlattenedMCUout[45] , \newFlattenedMCUout[44] , 
         \flattenedMCUout[44] , \flattenedMCUout[45] , 
         \newFlattenedMCUout[47].sig_045.FeedThruLUT , 
         \newFlattenedMCUout[46].sig_044.FeedThruLUT , 
         \newFlattenedMCUout[47] , \newFlattenedMCUout[46] , 
         \flattenedMCUout[46] , \flattenedMCUout[47] , 
         \newFlattenedMCUout[44].sig_051.FeedThruLUT , 
         \newFlattenedMCUout[45].sig_050.FeedThruLUT , sck_c, 
         \newFlattenedMCUout[42].sig_053.FeedThruLUT , 
         \newFlattenedMCUout[43].sig_052.FeedThruLUT , 
         \newFlattenedMCUout[40].sig_055.FeedThruLUT , 
         \newFlattenedMCUout[41].sig_054.FeedThruLUT , 
         \newFlattenedMCUout[38].sig_057.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_056.FeedThruLUT , 
         \newFlattenedMCUout[36].sig_059.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_058.FeedThruLUT , 
         \newFlattenedMCUout[34].sig_061.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_060.FeedThruLUT , 
         \newFlattenedMCUout[32].sig_063.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_062.FeedThruLUT , 
         \newFlattenedMCUout[30].sig_065.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_064.FeedThruLUT , 
         \newFlattenedMCUout[28].sig_067.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_066.FeedThruLUT , 
         \newFlattenedMCUout[26].sig_069.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_068.FeedThruLUT , 
         \newFlattenedMCUout[24].sig_071.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_070.FeedThruLUT , 
         \newFlattenedMCUout[22].sig_073.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_072.FeedThruLUT , 
         \newFlattenedMCUout[20].sig_075.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_074.FeedThruLUT , 
         \newFlattenedMCUout[18].sig_077.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_076.FeedThruLUT , 
         \newFlattenedMCUout[16].sig_079.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_078.FeedThruLUT , 
         \newFlattenedMCUout[14].sig_081.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_080.FeedThruLUT , 
         \newFlattenedMCUout[12].sig_083.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_082.FeedThruLUT , 
         \newFlattenedMCUout[10].sig_085.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_084.FeedThruLUT , 
         \newFlattenedMCUout[8].sig_087.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_086.FeedThruLUT , 
         \newFlattenedMCUout[6].sig_089.FeedThruLUT , 
         \newFlattenedMCUout[7].sig_088.FeedThruLUT , 
         \newFlattenedMCUout[4].sig_091.FeedThruLUT , 
         \newFlattenedMCUout[5].sig_090.FeedThruLUT , 
         \newFlattenedMCUout[2].sig_093.FeedThruLUT , 
         \newFlattenedMCUout[3].sig_092.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_095.FeedThruLUT , 
         \newFlattenedMCUout[1].sig_094.FeedThruLUT , n64, n62, n61, n63, n88, 
         n56, n68, n54, n53, n55, n86, n72, n70, n69, n71, n90, n60, n57, n59, 
         n58, n87, n52, n50, n49, n51, n85, n65, n66, n67, n89, 
         \makeMusic.n1389 , \makeMusic.n1390 , \makeMusic.n1411 , 
         \makeMusic.n1412 , \makeMusic.n1409 , \makeMusic.n1410 , 
         \makeMusic.n1407 , \makeMusic.n1408 , \makeMusic.n1405 , 
         \makeMusic.n1406 , \makeMusic.n1403 , \makeMusic.n1404 , 
         \makeMusic.n1401 , \makeMusic.n1402 , \makeMusic.n1399 , 
         \makeMusic.n1400 , \makeMusic.pitch.n41 , \makeMusic.pitch.n43 , 
         \makeMusic.pitch.n2274 , \makeMusic.pitch.n42 , \makeMusic.pitch.n59 , 
         \makeMusic.pitch.n49 , \makeMusic.pitch.n36 , \makeMusic.pitch.n35 , 
         \makeMusic.pitch.n58 , \makeMusic.pitch.n61 , \makeMusic.pitch.n40 , 
         \makeMusic.pitch.n34 , \makeMusic.pitch.n38 , \makeMusic.pitch.n37 , 
         \makeMusic.pitch.n39 , \makeMusic.pitch.n14 , \makeMusic.pitch.n15 , 
         \makeMusic.n1448 , \makeMusic.n397[9] , \makeMusic.freq[9] , 
         \makeMusic.howLong.n40 , \makeMusic.howLong.n39 , 
         \makeMusic.howLong.n38 , \makeMusic.howLong.n37 , 
         \makeMusic.howLong.n58 , \makeMusic.howLong.n44 , 
         \makeMusic.howLong.n43 , \makeMusic.howLong.n41 , 
         \makeMusic.howLong.n42 , \makeMusic.howLong.n59 , 
         \makeMusic.howLong.n34 , \makeMusic.howLong.n49 , 
         \makeMusic.howLong.n36 , \makeMusic.howLong.n35 , 
         \makeMusic.howLong.n61 , n94, \makeMusic.howLong.clkStrobe_N_213 , 
         \makeMusic.howLong.n2282 , \makeMusic.howLong.n2262 , 
         \makeMusic.pitch.n2278 , \makeMusic.pitch.clkStrobe_N_314 , 
         \makeMusic.pitch.n2276 , pwm_c, \makeMusic.rep , \makeMusic.n1392 , 
         \makeMusic.en_N_111 , \makeMusic.n1423 , 
         \newFlattenedMCUout[46].sig_049.FeedThruLUT , \makeMusic.n2037 , 
         \makeMusic.n4 , \makeMusic.en_N_110 , \makeMusic.en , 
         \flattenedMCUout_47__N_49$n0 , sdi_c;

  makeMusic_pitch_SLICE_0 \makeMusic.pitch.SLICE_0 ( 
    .DI0(\makeMusic.pitch.n133[31] ), .D1(\makeMusic.pitch.n3424 ), 
    .D0(\makeMusic.pitch.n1542 ), .C0(\makeMusic.pitch.counter[31] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1542 ), .CIN1(\makeMusic.pitch.n3424 ), 
    .Q0(\makeMusic.pitch.counter[31] ), .F0(\makeMusic.pitch.n133[31] ), 
    .COUT0(\makeMusic.pitch.n3424 ));
  makeMusic_pitch_SLICE_1 \makeMusic.pitch.SLICE_1 ( 
    .DI1(\makeMusic.pitch.n133[30] ), .DI0(\makeMusic.pitch.n133[29] ), 
    .D1(\makeMusic.pitch.n3421 ), .C1(\makeMusic.pitch.counter[30] ), 
    .D0(\makeMusic.pitch.n1540 ), .C0(\makeMusic.pitch.counter[29] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1540 ), .CIN1(\makeMusic.pitch.n3421 ), 
    .Q0(\makeMusic.pitch.counter[29] ), .Q1(\makeMusic.pitch.counter[30] ), 
    .F0(\makeMusic.pitch.n133[29] ), .F1(\makeMusic.pitch.n133[30] ), 
    .COUT1(\makeMusic.pitch.n1542 ), .COUT0(\makeMusic.pitch.n3421 ));
  makeMusic_pitch_SLICE_2 \makeMusic.pitch.SLICE_2 ( 
    .DI1(\makeMusic.pitch.n133[28] ), .DI0(\makeMusic.pitch.n133[27] ), 
    .D1(\makeMusic.pitch.n3418 ), .C1(\makeMusic.pitch.counter[28] ), 
    .D0(\makeMusic.pitch.n1538 ), .C0(\makeMusic.pitch.counter[27] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1538 ), .CIN1(\makeMusic.pitch.n3418 ), 
    .Q0(\makeMusic.pitch.counter[27] ), .Q1(\makeMusic.pitch.counter[28] ), 
    .F0(\makeMusic.pitch.n133[27] ), .F1(\makeMusic.pitch.n133[28] ), 
    .COUT1(\makeMusic.pitch.n1540 ), .COUT0(\makeMusic.pitch.n3418 ));
  makeMusic_pitch_SLICE_3 \makeMusic.pitch.SLICE_3 ( 
    .DI1(\makeMusic.pitch.n133[26] ), .DI0(\makeMusic.pitch.n133[25] ), 
    .D1(\makeMusic.pitch.n3415 ), .C1(\makeMusic.pitch.counter[26] ), 
    .D0(\makeMusic.pitch.n1536 ), .C0(\makeMusic.pitch.counter[25] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1536 ), .CIN1(\makeMusic.pitch.n3415 ), 
    .Q0(\makeMusic.pitch.counter[25] ), .Q1(\makeMusic.pitch.counter[26] ), 
    .F0(\makeMusic.pitch.n133[25] ), .F1(\makeMusic.pitch.n133[26] ), 
    .COUT1(\makeMusic.pitch.n1538 ), .COUT0(\makeMusic.pitch.n3415 ));
  makeMusic_pitch_SLICE_4 \makeMusic.pitch.SLICE_4 ( 
    .DI1(\makeMusic.pitch.n133[24] ), .DI0(\makeMusic.pitch.n133[23] ), 
    .D1(\makeMusic.pitch.n3412 ), .C1(\makeMusic.pitch.counter[24] ), 
    .D0(\makeMusic.pitch.n1534 ), .C0(\makeMusic.pitch.counter[23] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1534 ), .CIN1(\makeMusic.pitch.n3412 ), 
    .Q0(\makeMusic.pitch.counter[23] ), .Q1(\makeMusic.pitch.counter[24] ), 
    .F0(\makeMusic.pitch.n133[23] ), .F1(\makeMusic.pitch.n133[24] ), 
    .COUT1(\makeMusic.pitch.n1536 ), .COUT0(\makeMusic.pitch.n3412 ));
  makeMusic_pitch_SLICE_5 \makeMusic.pitch.SLICE_5 ( 
    .DI1(\makeMusic.pitch.n133[22] ), .DI0(\makeMusic.pitch.n133[21] ), 
    .D1(\makeMusic.pitch.n3409 ), .C1(\makeMusic.pitch.counter[22] ), 
    .D0(\makeMusic.pitch.n1532 ), .C0(\makeMusic.pitch.counter[21] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1532 ), .CIN1(\makeMusic.pitch.n3409 ), 
    .Q0(\makeMusic.pitch.counter[21] ), .Q1(\makeMusic.pitch.counter[22] ), 
    .F0(\makeMusic.pitch.n133[21] ), .F1(\makeMusic.pitch.n133[22] ), 
    .COUT1(\makeMusic.pitch.n1534 ), .COUT0(\makeMusic.pitch.n3409 ));
  makeMusic_pitch_SLICE_6 \makeMusic.pitch.SLICE_6 ( 
    .DI1(\makeMusic.pitch.n133[20] ), .DI0(\makeMusic.pitch.n133[19] ), 
    .D1(\makeMusic.pitch.n3406 ), .C1(\makeMusic.pitch.counter[20] ), 
    .D0(\makeMusic.pitch.n1530 ), .C0(\makeMusic.pitch.counter[19] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1530 ), .CIN1(\makeMusic.pitch.n3406 ), 
    .Q0(\makeMusic.pitch.counter[19] ), .Q1(\makeMusic.pitch.counter[20] ), 
    .F0(\makeMusic.pitch.n133[19] ), .F1(\makeMusic.pitch.n133[20] ), 
    .COUT1(\makeMusic.pitch.n1532 ), .COUT0(\makeMusic.pitch.n3406 ));
  makeMusic_pitch_SLICE_7 \makeMusic.pitch.SLICE_7 ( 
    .DI1(\makeMusic.pitch.n133[18] ), .DI0(\makeMusic.pitch.n133[17] ), 
    .D1(\makeMusic.pitch.n3403 ), .C1(\makeMusic.pitch.counter[18] ), 
    .D0(\makeMusic.pitch.n1528 ), .C0(\makeMusic.pitch.counter[17] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1528 ), .CIN1(\makeMusic.pitch.n3403 ), 
    .Q0(\makeMusic.pitch.counter[17] ), .Q1(\makeMusic.pitch.counter[18] ), 
    .F0(\makeMusic.pitch.n133[17] ), .F1(\makeMusic.pitch.n133[18] ), 
    .COUT1(\makeMusic.pitch.n1530 ), .COUT0(\makeMusic.pitch.n3403 ));
  makeMusic_pitch_SLICE_8 \makeMusic.pitch.SLICE_8 ( 
    .DI1(\makeMusic.pitch.n133[16] ), .DI0(\makeMusic.pitch.n133[15] ), 
    .D1(\makeMusic.pitch.n3400 ), .C1(\makeMusic.pitch.counter[16] ), 
    .D0(\makeMusic.pitch.n1526 ), .C0(\makeMusic.pitch.counter[15] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1526 ), .CIN1(\makeMusic.pitch.n3400 ), 
    .Q0(\makeMusic.pitch.counter[15] ), .Q1(\makeMusic.pitch.counter[16] ), 
    .F0(\makeMusic.pitch.n133[15] ), .F1(\makeMusic.pitch.n133[16] ), 
    .COUT1(\makeMusic.pitch.n1528 ), .COUT0(\makeMusic.pitch.n3400 ));
  makeMusic_pitch_SLICE_9 \makeMusic.pitch.SLICE_9 ( 
    .DI1(\makeMusic.pitch.n133[14] ), .DI0(\makeMusic.pitch.n133[13] ), 
    .D1(\makeMusic.pitch.n3397 ), .C1(\makeMusic.pitch.counter[14] ), 
    .D0(\makeMusic.pitch.n1524 ), .C0(\makeMusic.pitch.counter[13] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1524 ), .CIN1(\makeMusic.pitch.n3397 ), 
    .Q0(\makeMusic.pitch.counter[13] ), .Q1(\makeMusic.pitch.counter[14] ), 
    .F0(\makeMusic.pitch.n133[13] ), .F1(\makeMusic.pitch.n133[14] ), 
    .COUT1(\makeMusic.pitch.n1526 ), .COUT0(\makeMusic.pitch.n3397 ));
  makeMusic_pitch_SLICE_10 \makeMusic.pitch.SLICE_10 ( 
    .DI1(\makeMusic.pitch.n133[12] ), .DI0(\makeMusic.pitch.n133[11] ), 
    .D1(\makeMusic.pitch.n3394 ), .C1(\makeMusic.pitch.counter[12] ), 
    .D0(\makeMusic.pitch.n1522 ), .C0(\makeMusic.pitch.counter[11] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1522 ), .CIN1(\makeMusic.pitch.n3394 ), 
    .Q0(\makeMusic.pitch.counter[11] ), .Q1(\makeMusic.pitch.counter[12] ), 
    .F0(\makeMusic.pitch.n133[11] ), .F1(\makeMusic.pitch.n133[12] ), 
    .COUT1(\makeMusic.pitch.n1524 ), .COUT0(\makeMusic.pitch.n3394 ));
  makeMusic_pitch_SLICE_11 \makeMusic.pitch.SLICE_11 ( 
    .DI1(\makeMusic.pitch.n133[10] ), .DI0(\makeMusic.pitch.n133[9] ), 
    .D1(\makeMusic.pitch.n3391 ), .C1(\makeMusic.pitch.counter[10] ), 
    .D0(\makeMusic.pitch.n1520 ), .C0(\makeMusic.pitch.counter[9] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1520 ), .CIN1(\makeMusic.pitch.n3391 ), 
    .Q0(\makeMusic.pitch.counter[9] ), .Q1(\makeMusic.pitch.counter[10] ), 
    .F0(\makeMusic.pitch.n133[9] ), .F1(\makeMusic.pitch.n133[10] ), 
    .COUT1(\makeMusic.pitch.n1522 ), .COUT0(\makeMusic.pitch.n3391 ));
  makeMusic_pitch_SLICE_12 \makeMusic.pitch.SLICE_12 ( 
    .DI1(\makeMusic.pitch.n133[8] ), .DI0(\makeMusic.pitch.n133[7] ), 
    .D1(\makeMusic.pitch.n3388 ), .C1(\makeMusic.pitch.counter[8] ), 
    .D0(\makeMusic.pitch.n1518 ), .C0(\makeMusic.pitch.counter[7] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1518 ), .CIN1(\makeMusic.pitch.n3388 ), 
    .Q0(\makeMusic.pitch.counter[7] ), .Q1(\makeMusic.pitch.counter[8] ), 
    .F0(\makeMusic.pitch.n133[7] ), .F1(\makeMusic.pitch.n133[8] ), 
    .COUT1(\makeMusic.pitch.n1520 ), .COUT0(\makeMusic.pitch.n3388 ));
  makeMusic_pitch_SLICE_13 \makeMusic.pitch.SLICE_13 ( 
    .DI1(\makeMusic.pitch.n133[6] ), .DI0(\makeMusic.pitch.n133[5] ), 
    .D1(\makeMusic.pitch.n3385 ), .C1(\makeMusic.pitch.counter[6] ), 
    .D0(\makeMusic.pitch.n1516 ), .C0(\makeMusic.pitch.counter[5] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1516 ), .CIN1(\makeMusic.pitch.n3385 ), 
    .Q0(\makeMusic.pitch.counter[5] ), .Q1(\makeMusic.pitch.counter[6] ), 
    .F0(\makeMusic.pitch.n133[5] ), .F1(\makeMusic.pitch.n133[6] ), 
    .COUT1(\makeMusic.pitch.n1518 ), .COUT0(\makeMusic.pitch.n3385 ));
  makeMusic_pitch_SLICE_14 \makeMusic.pitch.SLICE_14 ( 
    .DI1(\makeMusic.pitch.n133[4] ), .DI0(\makeMusic.pitch.n133[3] ), 
    .D1(\makeMusic.pitch.n3382 ), .C1(\makeMusic.pitch.counter[4] ), 
    .D0(\makeMusic.pitch.n1514 ), .C0(\makeMusic.pitch.counter[3] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1514 ), .CIN1(\makeMusic.pitch.n3382 ), 
    .Q0(\makeMusic.pitch.counter[3] ), .Q1(\makeMusic.pitch.counter[4] ), 
    .F0(\makeMusic.pitch.n133[3] ), .F1(\makeMusic.pitch.n133[4] ), 
    .COUT1(\makeMusic.pitch.n1516 ), .COUT0(\makeMusic.pitch.n3382 ));
  makeMusic_pitch_SLICE_15 \makeMusic.pitch.SLICE_15 ( 
    .DI1(\makeMusic.pitch.n133[2] ), .DI0(\makeMusic.pitch.n133[1] ), 
    .D1(\makeMusic.pitch.n3379 ), .C1(\makeMusic.pitch.counter[2] ), 
    .D0(\makeMusic.pitch.n1512 ), .C0(\makeMusic.pitch.counter[1] ), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN0(\makeMusic.pitch.n1512 ), .CIN1(\makeMusic.pitch.n3379 ), 
    .Q0(\makeMusic.pitch.counter[1] ), .Q1(\makeMusic.pitch.counter[2] ), 
    .F0(\makeMusic.pitch.n133[1] ), .F1(\makeMusic.pitch.n133[2] ), 
    .COUT1(\makeMusic.pitch.n1514 ), .COUT0(\makeMusic.pitch.n3379 ));
  makeMusic_pitch_SLICE_16 \makeMusic.pitch.SLICE_16 ( 
    .DI1(\makeMusic.pitch.n133[0] ), .D1(\makeMusic.pitch.n3376 ), 
    .C1(\makeMusic.pitch.counter[0] ), .B1(VCC_net), 
    .LSR(\makeMusic.pitch.n1447 ), .CLK(int_osc_c), 
    .CIN1(\makeMusic.pitch.n3376 ), .Q1(\makeMusic.pitch.counter[0] ), 
    .F1(\makeMusic.pitch.n133[0] ), .COUT1(\makeMusic.pitch.n1512 ), 
    .COUT0(\makeMusic.pitch.n3376 ));
  makeMusic_pitch_SLICE_17 \makeMusic.pitch.SLICE_17 ( 
    .D1(\makeMusic.pitch.n3301 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .CIN1(\makeMusic.pitch.n3301 ), .F1(\makeMusic.pitch.threshold[12] ), 
    .COUT1(\makeMusic.pitch.n1600 ), .COUT0(\makeMusic.pitch.n3301 ));
  makeMusic_pitch_SLICE_18 \makeMusic.pitch.SLICE_18 ( 
    .D1(\makeMusic.pitch.n3304 ), .C1(VCC_net), .D0(\makeMusic.pitch.n1600 ), 
    .C0(VCC_net), .CIN0(\makeMusic.pitch.n1600 ), 
    .CIN1(\makeMusic.pitch.n3304 ), .F0(\makeMusic.pitch.threshold[13] ), 
    .F1(\makeMusic.pitch.threshold[14] ), .COUT1(\makeMusic.pitch.n1602 ), 
    .COUT0(\makeMusic.pitch.n3304 ));
  makeMusic_pitch_SLICE_19 \makeMusic.pitch.SLICE_19 ( 
    .D1(\makeMusic.pitch.n3307 ), .C1(VCC_net), .D0(\makeMusic.pitch.n1602 ), 
    .C0(VCC_net), .B0(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .CIN0(\makeMusic.pitch.n1602 ), .CIN1(\makeMusic.pitch.n3307 ), 
    .F0(\makeMusic.pitch.threshold[15] ), .F1(\makeMusic.pitch.threshold[16] ), 
    .COUT1(\makeMusic.pitch.n1604 ), .COUT0(\makeMusic.pitch.n3307 ));
  makeMusic_pitch_SLICE_20 \makeMusic.pitch.SLICE_20 ( 
    .D1(\makeMusic.pitch.n3310 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .D0(\makeMusic.pitch.n1604 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .CIN0(\makeMusic.pitch.n1604 ), .CIN1(\makeMusic.pitch.n3310 ), 
    .F0(\makeMusic.pitch.threshold[17] ), .F1(\makeMusic.pitch.threshold[18] ), 
    .COUT1(\makeMusic.pitch.n1606 ), .COUT0(\makeMusic.pitch.n3310 ));
  makeMusic_pitch_SLICE_21 \makeMusic.pitch.SLICE_21 ( 
    .D1(\makeMusic.pitch.n3313 ), .C1(VCC_net), .D0(\makeMusic.pitch.n1606 ), 
    .C0(VCC_net), .CIN0(\makeMusic.pitch.n1606 ), 
    .CIN1(\makeMusic.pitch.n3313 ), .F0(\makeMusic.pitch.threshold[19] ), 
    .F1(\makeMusic.pitch.threshold[20] ), .COUT1(\makeMusic.pitch.n1608 ), 
    .COUT0(\makeMusic.pitch.n3313 ));
  makeMusic_pitch_SLICE_22 \makeMusic.pitch.SLICE_22 ( 
    .D1(\makeMusic.pitch.n3316 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .D0(\makeMusic.pitch.n1608 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .CIN0(\makeMusic.pitch.n1608 ), .CIN1(\makeMusic.pitch.n3316 ), 
    .F0(\makeMusic.pitch.threshold[23] ), .F1(\makeMusic.pitch.threshold[24] ), 
    .COUT1(\makeMusic.pitch.n1610 ), .COUT0(\makeMusic.pitch.n3316 ));
  makeMusic_pitch_SLICE_23 \makeMusic.pitch.SLICE_23 ( 
    .D1(\makeMusic.pitch.n3319 ), .C1(VCC_net), .D0(\makeMusic.pitch.n1610 ), 
    .C0(VCC_net), .CIN0(\makeMusic.pitch.n1610 ), 
    .CIN1(\makeMusic.pitch.n3319 ), .F0(\makeMusic.pitch.threshold[27] ), 
    .F1(\makeMusic.pitch.threshold[28] ), .COUT1(\makeMusic.pitch.n1612 ), 
    .COUT0(\makeMusic.pitch.n3319 ));
  makeMusic_pitch_SLICE_24 \makeMusic.pitch.SLICE_24 ( 
    .D1(\makeMusic.pitch.n3322 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .D0(\makeMusic.pitch.n1612 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_246[26] ), 
    .CIN0(\makeMusic.pitch.n1612 ), .CIN1(\makeMusic.pitch.n3322 ), 
    .F0(\makeMusic.pitch.threshold[30] ), .F1(\makeMusic.pitch.threshold[31] ), 
    .COUT0(\makeMusic.pitch.n3322 ));
  makeMusic_howLong_SLICE_25 \makeMusic.howLong.SLICE_25 ( 
    .DI1(\makeMusic.howLong.n133[8] ), .DI0(\makeMusic.howLong.n133[7] ), 
    .D1(\makeMusic.howLong.n3337 ), .C1(\makeMusic.howLong.counter[8] ), 
    .D0(\makeMusic.howLong.n1551 ), .C0(\makeMusic.howLong.counter[7] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1551 ), 
    .CIN1(\makeMusic.howLong.n3337 ), .Q0(\makeMusic.howLong.counter[7] ), 
    .Q1(\makeMusic.howLong.counter[8] ), .F0(\makeMusic.howLong.n133[7] ), 
    .F1(\makeMusic.howLong.n133[8] ), .COUT1(\makeMusic.howLong.n1553 ), 
    .COUT0(\makeMusic.howLong.n3337 ));
  makeMusic_howLong_SLICE_26 \makeMusic.howLong.SLICE_26 ( 
    .DI1(\makeMusic.howLong.n133[6] ), .DI0(\makeMusic.howLong.n133[5] ), 
    .D1(\makeMusic.howLong.n3334 ), .C1(\makeMusic.howLong.counter[6] ), 
    .D0(\makeMusic.howLong.n1549 ), .C0(\makeMusic.howLong.counter[5] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1549 ), 
    .CIN1(\makeMusic.howLong.n3334 ), .Q0(\makeMusic.howLong.counter[5] ), 
    .Q1(\makeMusic.howLong.counter[6] ), .F0(\makeMusic.howLong.n133[5] ), 
    .F1(\makeMusic.howLong.n133[6] ), .COUT1(\makeMusic.howLong.n1551 ), 
    .COUT0(\makeMusic.howLong.n3334 ));
  makeMusic_howLong_SLICE_27 \makeMusic.howLong.SLICE_27 ( 
    .DI1(\makeMusic.howLong.n133[4] ), .DI0(\makeMusic.howLong.n133[3] ), 
    .D1(\makeMusic.howLong.n3331 ), .C1(\makeMusic.howLong.counter[4] ), 
    .D0(\makeMusic.howLong.n1547 ), .C0(\makeMusic.howLong.counter[3] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1547 ), 
    .CIN1(\makeMusic.howLong.n3331 ), .Q0(\makeMusic.howLong.counter[3] ), 
    .Q1(\makeMusic.howLong.counter[4] ), .F0(\makeMusic.howLong.n133[3] ), 
    .F1(\makeMusic.howLong.n133[4] ), .COUT1(\makeMusic.howLong.n1549 ), 
    .COUT0(\makeMusic.howLong.n3331 ));
  makeMusic_howLong_SLICE_28 \makeMusic.howLong.SLICE_28 ( 
    .DI1(\makeMusic.howLong.n133[2] ), .DI0(\makeMusic.howLong.n133[1] ), 
    .D1(\makeMusic.howLong.n3328 ), .C1(\makeMusic.howLong.counter[2] ), 
    .D0(\makeMusic.howLong.n1545 ), .C0(\makeMusic.howLong.counter[1] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1545 ), 
    .CIN1(\makeMusic.howLong.n3328 ), .Q0(\makeMusic.howLong.counter[1] ), 
    .Q1(\makeMusic.howLong.counter[2] ), .F0(\makeMusic.howLong.n133[1] ), 
    .F1(\makeMusic.howLong.n133[2] ), .COUT1(\makeMusic.howLong.n1547 ), 
    .COUT0(\makeMusic.howLong.n3328 ));
  makeMusic_howLong_SLICE_29 \makeMusic.howLong.SLICE_29 ( 
    .DI1(\makeMusic.howLong.n133[0] ), .D1(\makeMusic.howLong.n3325 ), 
    .C1(\makeMusic.howLong.counter[0] ), .B1(VCC_net), .LSR(done), 
    .CLK(int_osc_c), .CIN1(\makeMusic.howLong.n3325 ), 
    .Q1(\makeMusic.howLong.counter[0] ), .F1(\makeMusic.howLong.n133[0] ), 
    .COUT1(\makeMusic.howLong.n1545 ), .COUT0(\makeMusic.howLong.n3325 ));
  makeMusic_howLong_SLICE_30 \makeMusic.howLong.SLICE_30 ( 
    .D1(\makeMusic.howLong.n3298 ), .D0(\makeMusic.howLong.n1509 ), 
    .B0(\makeMusic.howLong.n449[11] ), .CIN0(\makeMusic.howLong.n1509 ), 
    .CIN1(\makeMusic.howLong.n3298 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_145[31] ), 
    .COUT0(\makeMusic.howLong.n3298 ));
  makeMusic_howLong_SLICE_31 \makeMusic.howLong.SLICE_31 ( 
    .D1(\makeMusic.howLong.n3292 ), .B1(\makeMusic.howLong.n449[10] ), 
    .D0(\makeMusic.howLong.n1507 ), .B0(\makeMusic.howLong.n449[9] ), 
    .CIN0(\makeMusic.howLong.n1507 ), .CIN1(\makeMusic.howLong.n3292 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_145[29] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_145[30] ), 
    .COUT1(\makeMusic.howLong.n1509 ), .COUT0(\makeMusic.howLong.n3292 ));
  makeMusic_howLong_SLICE_32 \makeMusic.howLong.SLICE_32 ( 
    .D1(\makeMusic.howLong.n3286 ), .B1(\makeMusic.howLong.n449[8] ), 
    .D0(\makeMusic.howLong.n1505 ), .C0(\makeMusic.howLong.n474[16] ), 
    .B0(\makeMusic.howLong.n449[7] ), .CIN0(\makeMusic.howLong.n1505 ), 
    .CIN1(\makeMusic.howLong.n3286 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_145[27] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_145[28] ), 
    .COUT1(\makeMusic.howLong.n1507 ), .COUT0(\makeMusic.howLong.n3286 ));
  makeMusic_howLong_SLICE_33 \makeMusic.howLong.SLICE_33 ( 
    .D1(\makeMusic.howLong.n3265 ), .C1(\makeMusic.howLong.n474[9] ), 
    .B1(\makeMusic.howLong.n449[0] ), .CIN1(\makeMusic.howLong.n3265 ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_145[20] ), 
    .COUT1(\makeMusic.howLong.n1499 ), .COUT0(\makeMusic.howLong.n3265 ));
  makeMusic_howLong_SLICE_34 \makeMusic.howLong.SLICE_34 ( 
    .D1(\makeMusic.howLong.n3280 ), .C1(\makeMusic.howLong.n474[15] ), 
    .B1(\makeMusic.howLong.n449[6] ), .D0(\makeMusic.howLong.n1503 ), 
    .C0(\makeMusic.howLong.n474[14] ), .B0(\makeMusic.howLong.n449[5] ), 
    .CIN0(\makeMusic.howLong.n1503 ), .CIN1(\makeMusic.howLong.n3280 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_145[25] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_145[26] ), 
    .COUT1(\makeMusic.howLong.n1505 ), .COUT0(\makeMusic.howLong.n3280 ));
  makeMusic_howLong_SLICE_35 \makeMusic.howLong.SLICE_35 ( 
    .D1(\makeMusic.howLong.n3268 ), .C1(\makeMusic.howLong.n474[11] ), 
    .B1(\makeMusic.howLong.n449[2] ), .D0(\makeMusic.howLong.n1499 ), 
    .C0(\makeMusic.howLong.n474[10] ), .B0(\makeMusic.howLong.n449[1] ), 
    .CIN0(\makeMusic.howLong.n1499 ), .CIN1(\makeMusic.howLong.n3268 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_145[21] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_145[22] ), 
    .COUT1(\makeMusic.howLong.n1501 ), .COUT0(\makeMusic.howLong.n3268 ));
  makeMusic_howLong_SLICE_36 \makeMusic.howLong.SLICE_36 ( 
    .DI1(\makeMusic.howLong.n133[10] ), .DI0(\makeMusic.howLong.n133[9] ), 
    .D1(\makeMusic.howLong.n3340 ), .C1(\makeMusic.howLong.counter[10] ), 
    .D0(\makeMusic.howLong.n1553 ), .C0(\makeMusic.howLong.counter[9] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1553 ), 
    .CIN1(\makeMusic.howLong.n3340 ), .Q0(\makeMusic.howLong.counter[9] ), 
    .Q1(\makeMusic.howLong.counter[10] ), .F0(\makeMusic.howLong.n133[9] ), 
    .F1(\makeMusic.howLong.n133[10] ), .COUT1(\makeMusic.howLong.n1555 ), 
    .COUT0(\makeMusic.howLong.n3340 ));
  makeMusic_howLong_SLICE_37 \makeMusic.howLong.SLICE_37 ( 
    .D1(\makeMusic.howLong.n3274 ), .C1(\makeMusic.howLong.n474[13] ), 
    .B1(\makeMusic.howLong.n449[4] ), .D0(\makeMusic.howLong.n1501 ), 
    .C0(\makeMusic.howLong.n474[12] ), .B0(\makeMusic.howLong.n449[3] ), 
    .CIN0(\makeMusic.howLong.n1501 ), .CIN1(\makeMusic.howLong.n3274 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_145[23] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_145[24] ), 
    .COUT1(\makeMusic.howLong.n1503 ), .COUT0(\makeMusic.howLong.n3274 ));
  makeMusic_howLong_SLICE_38 \makeMusic.howLong.SLICE_38 ( 
    .DI1(\makeMusic.howLong.n133[12] ), .DI0(\makeMusic.howLong.n133[11] ), 
    .D1(\makeMusic.howLong.n3343 ), .C1(\makeMusic.howLong.counter[12] ), 
    .D0(\makeMusic.howLong.n1555 ), .C0(\makeMusic.howLong.counter[11] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1555 ), 
    .CIN1(\makeMusic.howLong.n3343 ), .Q0(\makeMusic.howLong.counter[11] ), 
    .Q1(\makeMusic.howLong.counter[12] ), .F0(\makeMusic.howLong.n133[11] ), 
    .F1(\makeMusic.howLong.n133[12] ), .COUT1(\makeMusic.howLong.n1557 ), 
    .COUT0(\makeMusic.howLong.n3343 ));
  makeMusic_howLong_SLICE_39 \makeMusic.howLong.SLICE_39 ( 
    .DI1(\makeMusic.howLong.n133[14] ), .DI0(\makeMusic.howLong.n133[13] ), 
    .D1(\makeMusic.howLong.n3346 ), .C1(\makeMusic.howLong.counter[14] ), 
    .D0(\makeMusic.howLong.n1557 ), .C0(\makeMusic.howLong.counter[13] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1557 ), 
    .CIN1(\makeMusic.howLong.n3346 ), .Q0(\makeMusic.howLong.counter[13] ), 
    .Q1(\makeMusic.howLong.counter[14] ), .F0(\makeMusic.howLong.n133[13] ), 
    .F1(\makeMusic.howLong.n133[14] ), .COUT1(\makeMusic.howLong.n1559 ), 
    .COUT0(\makeMusic.howLong.n3346 ));
  makeMusic_howLong_SLICE_40 \makeMusic.howLong.SLICE_40 ( 
    .DI1(\makeMusic.howLong.n133[16] ), .DI0(\makeMusic.howLong.n133[15] ), 
    .D1(\makeMusic.howLong.n3349 ), .C1(\makeMusic.howLong.counter[16] ), 
    .D0(\makeMusic.howLong.n1559 ), .C0(\makeMusic.howLong.counter[15] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1559 ), 
    .CIN1(\makeMusic.howLong.n3349 ), .Q0(\makeMusic.howLong.counter[15] ), 
    .Q1(\makeMusic.howLong.counter[16] ), .F0(\makeMusic.howLong.n133[15] ), 
    .F1(\makeMusic.howLong.n133[16] ), .COUT1(\makeMusic.howLong.n1561 ), 
    .COUT0(\makeMusic.howLong.n3349 ));
  makeMusic_howLong_SLICE_41 \makeMusic.howLong.SLICE_41 ( 
    .DI1(\makeMusic.howLong.n133[18] ), .DI0(\makeMusic.howLong.n133[17] ), 
    .D1(\makeMusic.howLong.n3352 ), .C1(\makeMusic.howLong.counter[18] ), 
    .D0(\makeMusic.howLong.n1561 ), .C0(\makeMusic.howLong.counter[17] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1561 ), 
    .CIN1(\makeMusic.howLong.n3352 ), .Q0(\makeMusic.howLong.counter[17] ), 
    .Q1(\makeMusic.howLong.counter[18] ), .F0(\makeMusic.howLong.n133[17] ), 
    .F1(\makeMusic.howLong.n133[18] ), .COUT1(\makeMusic.howLong.n1563 ), 
    .COUT0(\makeMusic.howLong.n3352 ));
  makeMusic_howLong_SLICE_42 \makeMusic.howLong.SLICE_42 ( 
    .DI1(\makeMusic.howLong.n133[20] ), .DI0(\makeMusic.howLong.n133[19] ), 
    .D1(\makeMusic.howLong.n3355 ), .C1(\makeMusic.howLong.counter[20] ), 
    .D0(\makeMusic.howLong.n1563 ), .C0(\makeMusic.howLong.counter[19] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1563 ), 
    .CIN1(\makeMusic.howLong.n3355 ), .Q0(\makeMusic.howLong.counter[19] ), 
    .Q1(\makeMusic.howLong.counter[20] ), .F0(\makeMusic.howLong.n133[19] ), 
    .F1(\makeMusic.howLong.n133[20] ), .COUT1(\makeMusic.howLong.n1565 ), 
    .COUT0(\makeMusic.howLong.n3355 ));
  makeMusic_howLong_SLICE_43 \makeMusic.howLong.SLICE_43 ( 
    .DI1(\makeMusic.howLong.n133[22] ), .DI0(\makeMusic.howLong.n133[21] ), 
    .D1(\makeMusic.howLong.n3358 ), .C1(\makeMusic.howLong.counter[22] ), 
    .D0(\makeMusic.howLong.n1565 ), .C0(\makeMusic.howLong.counter[21] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1565 ), 
    .CIN1(\makeMusic.howLong.n3358 ), .Q0(\makeMusic.howLong.counter[21] ), 
    .Q1(\makeMusic.howLong.counter[22] ), .F0(\makeMusic.howLong.n133[21] ), 
    .F1(\makeMusic.howLong.n133[22] ), .COUT1(\makeMusic.howLong.n1567 ), 
    .COUT0(\makeMusic.howLong.n3358 ));
  makeMusic_howLong_SLICE_44 \makeMusic.howLong.SLICE_44 ( 
    .DI1(\makeMusic.howLong.n133[24] ), .DI0(\makeMusic.howLong.n133[23] ), 
    .D1(\makeMusic.howLong.n3361 ), .C1(\makeMusic.howLong.counter[24] ), 
    .D0(\makeMusic.howLong.n1567 ), .C0(\makeMusic.howLong.counter[23] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1567 ), 
    .CIN1(\makeMusic.howLong.n3361 ), .Q0(\makeMusic.howLong.counter[23] ), 
    .Q1(\makeMusic.howLong.counter[24] ), .F0(\makeMusic.howLong.n133[23] ), 
    .F1(\makeMusic.howLong.n133[24] ), .COUT1(\makeMusic.howLong.n1569 ), 
    .COUT0(\makeMusic.howLong.n3361 ));
  makeMusic_howLong_SLICE_45 \makeMusic.howLong.SLICE_45 ( 
    .DI1(\makeMusic.howLong.n133[26] ), .DI0(\makeMusic.howLong.n133[25] ), 
    .D1(\makeMusic.howLong.n3364 ), .C1(\makeMusic.howLong.counter[26] ), 
    .D0(\makeMusic.howLong.n1569 ), .C0(\makeMusic.howLong.counter[25] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1569 ), 
    .CIN1(\makeMusic.howLong.n3364 ), .Q0(\makeMusic.howLong.counter[25] ), 
    .Q1(\makeMusic.howLong.counter[26] ), .F0(\makeMusic.howLong.n133[25] ), 
    .F1(\makeMusic.howLong.n133[26] ), .COUT1(\makeMusic.howLong.n1571 ), 
    .COUT0(\makeMusic.howLong.n3364 ));
  makeMusic_howLong_SLICE_46 \makeMusic.howLong.SLICE_46 ( 
    .DI1(\makeMusic.howLong.n133[28] ), .DI0(\makeMusic.howLong.n133[27] ), 
    .D1(\makeMusic.howLong.n3367 ), .C1(\makeMusic.howLong.counter[28] ), 
    .D0(\makeMusic.howLong.n1571 ), .C0(\makeMusic.howLong.counter[27] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1571 ), 
    .CIN1(\makeMusic.howLong.n3367 ), .Q0(\makeMusic.howLong.counter[27] ), 
    .Q1(\makeMusic.howLong.counter[28] ), .F0(\makeMusic.howLong.n133[27] ), 
    .F1(\makeMusic.howLong.n133[28] ), .COUT1(\makeMusic.howLong.n1573 ), 
    .COUT0(\makeMusic.howLong.n3367 ));
  makeMusic_howLong_SLICE_47 \makeMusic.howLong.SLICE_47 ( 
    .DI1(\makeMusic.howLong.n133[30] ), .DI0(\makeMusic.howLong.n133[29] ), 
    .D1(\makeMusic.howLong.n3370 ), .C1(\makeMusic.howLong.counter[30] ), 
    .D0(\makeMusic.howLong.n1573 ), .C0(\makeMusic.howLong.counter[29] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1573 ), 
    .CIN1(\makeMusic.howLong.n3370 ), .Q0(\makeMusic.howLong.counter[29] ), 
    .Q1(\makeMusic.howLong.counter[30] ), .F0(\makeMusic.howLong.n133[29] ), 
    .F1(\makeMusic.howLong.n133[30] ), .COUT1(\makeMusic.howLong.n1575 ), 
    .COUT0(\makeMusic.howLong.n3370 ));
  makeMusic_howLong_SLICE_48 \makeMusic.howLong.SLICE_48 ( 
    .DI0(\makeMusic.howLong.n133[31] ), .D1(\makeMusic.howLong.n3373 ), 
    .D0(\makeMusic.howLong.n1575 ), .C0(\makeMusic.howLong.counter[31] ), 
    .LSR(done), .CLK(int_osc_c), .CIN0(\makeMusic.howLong.n1575 ), 
    .CIN1(\makeMusic.howLong.n3373 ), .Q0(\makeMusic.howLong.counter[31] ), 
    .F0(\makeMusic.howLong.n133[31] ), .COUT0(\makeMusic.howLong.n3373 ));
  makeMusic_howLong_SLICE_49 \makeMusic.howLong.SLICE_49 ( 
    .D1(\makeMusic.howLong.n3247 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[11] ), 
    .CIN1(\makeMusic.howLong.n3247 ), .F1(\makeMusic.howLong.THRESHOLD[11] ), 
    .COUT1(\makeMusic.howLong.n1578 ), .COUT0(\makeMusic.howLong.n3247 ));
  makeMusic_howLong_SLICE_50 \makeMusic.howLong.SLICE_50 ( 
    .D1(\makeMusic.howLong.n3250 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[13] ), 
    .D0(\makeMusic.howLong.n1578 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[12] ), 
    .CIN0(\makeMusic.howLong.n1578 ), .CIN1(\makeMusic.howLong.n3250 ), 
    .F0(\makeMusic.howLong.THRESHOLD[12] ), 
    .F1(\makeMusic.howLong.THRESHOLD[13] ), .COUT1(\makeMusic.howLong.n1580 ), 
    .COUT0(\makeMusic.howLong.n3250 ));
  makeMusic_howLong_SLICE_51 \makeMusic.howLong.SLICE_51 ( 
    .D1(\makeMusic.howLong.n3253 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[15] ), 
    .D0(\makeMusic.howLong.n1580 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[14] ), 
    .CIN0(\makeMusic.howLong.n1580 ), .CIN1(\makeMusic.howLong.n3253 ), 
    .F0(\makeMusic.howLong.THRESHOLD[14] ), 
    .F1(\makeMusic.howLong.THRESHOLD[15] ), .COUT1(\makeMusic.howLong.n1582 ), 
    .COUT0(\makeMusic.howLong.n3253 ));
  makeMusic_howLong_SLICE_52 \makeMusic.howLong.SLICE_52 ( 
    .D1(\makeMusic.howLong.n3256 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[17] ), 
    .D0(\makeMusic.howLong.n1582 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[16] ), 
    .CIN0(\makeMusic.howLong.n1582 ), .CIN1(\makeMusic.howLong.n3256 ), 
    .F0(\makeMusic.howLong.THRESHOLD[16] ), 
    .F1(\makeMusic.howLong.THRESHOLD[17] ), .COUT1(\makeMusic.howLong.n1584 ), 
    .COUT0(\makeMusic.howLong.n3256 ));
  makeMusic_howLong_SLICE_53 \makeMusic.howLong.SLICE_53 ( 
    .D1(\makeMusic.howLong.n3259 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[19] ), 
    .D0(\makeMusic.howLong.n1584 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[18] ), 
    .CIN0(\makeMusic.howLong.n1584 ), .CIN1(\makeMusic.howLong.n3259 ), 
    .F0(\makeMusic.howLong.THRESHOLD[18] ), 
    .F1(\makeMusic.howLong.THRESHOLD[19] ), .COUT1(\makeMusic.howLong.n1586 ), 
    .COUT0(\makeMusic.howLong.n3259 ));
  makeMusic_howLong_SLICE_54 \makeMusic.howLong.SLICE_54 ( 
    .D1(\makeMusic.howLong.n3262 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[21] ), 
    .D0(\makeMusic.howLong.n1586 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[20] ), 
    .CIN0(\makeMusic.howLong.n1586 ), .CIN1(\makeMusic.howLong.n3262 ), 
    .F0(\makeMusic.howLong.THRESHOLD[20] ), 
    .F1(\makeMusic.howLong.THRESHOLD[21] ), .COUT1(\makeMusic.howLong.n1588 ), 
    .COUT0(\makeMusic.howLong.n3262 ));
  makeMusic_howLong_SLICE_55 \makeMusic.howLong.SLICE_55 ( 
    .D1(\makeMusic.howLong.n3271 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[23] ), 
    .D0(\makeMusic.howLong.n1588 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[22] ), 
    .CIN0(\makeMusic.howLong.n1588 ), .CIN1(\makeMusic.howLong.n3271 ), 
    .F0(\makeMusic.howLong.THRESHOLD[22] ), 
    .F1(\makeMusic.howLong.THRESHOLD[23] ), .COUT1(\makeMusic.howLong.n1590 ), 
    .COUT0(\makeMusic.howLong.n3271 ));
  makeMusic_howLong_SLICE_56 \makeMusic.howLong.SLICE_56 ( 
    .D1(\makeMusic.howLong.n3277 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[25] ), 
    .D0(\makeMusic.howLong.n1590 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[24] ), 
    .CIN0(\makeMusic.howLong.n1590 ), .CIN1(\makeMusic.howLong.n3277 ), 
    .F0(\makeMusic.howLong.THRESHOLD[24] ), 
    .F1(\makeMusic.howLong.THRESHOLD[25] ), .COUT1(\makeMusic.howLong.n1592 ), 
    .COUT0(\makeMusic.howLong.n3277 ));
  makeMusic_howLong_SLICE_57 \makeMusic.howLong.SLICE_57 ( 
    .D1(\makeMusic.howLong.n3283 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[27] ), 
    .D0(\makeMusic.howLong.n1592 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[26] ), 
    .CIN0(\makeMusic.howLong.n1592 ), .CIN1(\makeMusic.howLong.n3283 ), 
    .F0(\makeMusic.howLong.THRESHOLD[26] ), 
    .F1(\makeMusic.howLong.THRESHOLD[27] ), .COUT1(\makeMusic.howLong.n1594 ), 
    .COUT0(\makeMusic.howLong.n3283 ));
  makeMusic_howLong_SLICE_58 \makeMusic.howLong.SLICE_58 ( 
    .D1(\makeMusic.howLong.n3289 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[29] ), 
    .D0(\makeMusic.howLong.n1594 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[28] ), 
    .CIN0(\makeMusic.howLong.n1594 ), .CIN1(\makeMusic.howLong.n3289 ), 
    .F0(\makeMusic.howLong.THRESHOLD[28] ), 
    .F1(\makeMusic.howLong.THRESHOLD[29] ), .COUT1(\makeMusic.howLong.n1596 ), 
    .COUT0(\makeMusic.howLong.n3289 ));
  makeMusic_howLong_SLICE_59 \makeMusic.howLong.SLICE_59 ( 
    .D1(\makeMusic.howLong.n3295 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_145[31] ), 
    .D0(\makeMusic.howLong.n1596 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_145[30] ), 
    .CIN0(\makeMusic.howLong.n1596 ), .CIN1(\makeMusic.howLong.n3295 ), 
    .F0(\makeMusic.howLong.THRESHOLD[30] ), 
    .F1(\makeMusic.howLong.THRESHOLD[31] ), .COUT0(\makeMusic.howLong.n3295 ));
  SLICE_60 SLICE_60( .DI1(\newFlattenedMCUout[23].sig_096.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[22].sig_000.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[23] ), .B0(\newFlattenedMCUout[22] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[22] ), 
    .Q1(\flattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[22].sig_000.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[23].sig_096.FeedThruLUT ));
  SLICE_61 SLICE_61( .DI1(\newFlattenedMCUout[20].sig_003.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_001.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .B0(\newFlattenedMCUout[21] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[21] ), 
    .Q1(\flattenedMCUout[20] ), 
    .F0(\newFlattenedMCUout[21].sig_001.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_003.FeedThruLUT ));
  SLICE_62 SLICE_62( .DI1(\newFlattenedMCUout[40].sig_015.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[41].sig_002.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[40] ), .D0(\newFlattenedMCUout[41] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[41] ), 
    .Q1(\flattenedMCUout[40] ), 
    .F0(\newFlattenedMCUout[41].sig_002.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[40].sig_015.FeedThruLUT ));
  SLICE_64 SLICE_64( .DI1(\newFlattenedMCUout[18].sig_005.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_004.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[19] ), 
    .Q1(\flattenedMCUout[18] ), 
    .F0(\newFlattenedMCUout[19].sig_004.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_005.FeedThruLUT ));
  SLICE_66 SLICE_66( .DI1(\newFlattenedMCUout[16].sig_007.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_006.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[16] ), .A0(\newFlattenedMCUout[17] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[17] ), 
    .Q1(\flattenedMCUout[16] ), 
    .F0(\newFlattenedMCUout[17].sig_006.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_007.FeedThruLUT ));
  SLICE_68 SLICE_68( .DI1(\newFlattenedMCUout[14].sig_009.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_008.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[14] ), .A0(\newFlattenedMCUout[15] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[15] ), 
    .Q1(\flattenedMCUout[14] ), 
    .F0(\newFlattenedMCUout[15].sig_008.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_009.FeedThruLUT ));
  SLICE_70 SLICE_70( .DI1(\newFlattenedMCUout[12].sig_011.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_010.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[12] ), .B0(\newFlattenedMCUout[13] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[13] ), 
    .Q1(\flattenedMCUout[12] ), 
    .F0(\newFlattenedMCUout[13].sig_010.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_011.FeedThruLUT ));
  SLICE_72 SLICE_72( .DI1(\newFlattenedMCUout[10].sig_013.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_012.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[10] ), .B0(\newFlattenedMCUout[11] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[11] ), 
    .Q1(\flattenedMCUout[10] ), 
    .F0(\newFlattenedMCUout[11].sig_012.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_013.FeedThruLUT ));
  SLICE_74 SLICE_74( .DI1(\newFlattenedMCUout[8].sig_026.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_014.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[9] ), 
    .Q1(\flattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[9].sig_014.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_026.FeedThruLUT ));
  SLICE_76 SLICE_76( .DI1(\newFlattenedMCUout[27].sig_034.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[26].sig_016.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[27] ), .B0(\newFlattenedMCUout[26] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[26] ), 
    .Q1(\flattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[26].sig_016.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[27].sig_034.FeedThruLUT ));
  SLICE_77 SLICE_77( .DI1(\newFlattenedMCUout[25].sig_046.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[24].sig_017.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[25] ), .A0(\newFlattenedMCUout[24] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[24] ), 
    .Q1(\flattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[24].sig_017.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[25].sig_046.FeedThruLUT ));
  SLICE_78 SLICE_78( .DI1(\newFlattenedMCUout[1].sig_019.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_018.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[1] ), .B0(\newFlattenedMCUout[0] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[0] ), 
    .Q1(\flattenedMCUout[1] ), 
    .F0(\newFlattenedMCUout[0].sig_018.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_019.FeedThruLUT ));
  SLICE_80 SLICE_80( .DI1(\newFlattenedMCUout[3].sig_021.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[2].sig_020.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[3] ), .C0(\newFlattenedMCUout[2] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[2] ), 
    .Q1(\flattenedMCUout[3] ), 
    .F0(\newFlattenedMCUout[2].sig_020.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[3].sig_021.FeedThruLUT ));
  SLICE_82 SLICE_82( .DI1(\newFlattenedMCUout[5].sig_023.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[4].sig_022.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[5] ), .D0(\newFlattenedMCUout[4] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[4] ), 
    .Q1(\flattenedMCUout[5] ), 
    .F0(\newFlattenedMCUout[4].sig_022.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[5].sig_023.FeedThruLUT ));
  SLICE_84 SLICE_84( .DI1(\newFlattenedMCUout[7].sig_025.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[6].sig_024.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[7] ), .B0(\newFlattenedMCUout[6] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[6] ), 
    .Q1(\flattenedMCUout[7] ), 
    .F0(\newFlattenedMCUout[6].sig_024.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[7].sig_025.FeedThruLUT ));
  SLICE_88 SLICE_88( .DI1(\newFlattenedMCUout[33].sig_035.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[32].sig_027.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[33] ), .B0(\newFlattenedMCUout[32] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[32] ), 
    .Q1(\flattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[32].sig_027.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[33].sig_035.FeedThruLUT ));
  makeMusic_SLICE_90 \makeMusic.SLICE_90 ( .DI1(\makeMusic.dur_7__N_52[1] ), 
    .DI0(\makeMusic.dur_7__N_52[0] ), .C1(\makeMusic.freq_9__N_96 ), 
    .B1(\makeMusic.dur_7__N_97[1] ), .A1(\flattenedMCUout[33] ), 
    .D0(\makeMusic.freq_9__N_96 ), .C0(\makeMusic.dur_7__N_97[0] ), 
    .B0(\flattenedMCUout[32] ), .CE(\makeMusic.n1431 ), .CLK(int_osc_c), 
    .Q0(\makeMusic.dur[0] ), .Q1(\makeMusic.dur[1] ), 
    .F0(\makeMusic.dur_7__N_52[0] ), .F1(\makeMusic.dur_7__N_52[1] ));
  makeMusic_SLICE_91 \makeMusic.SLICE_91 ( .DI1(\makeMusic.n13[1] ), 
    .DI0(\makeMusic.n13[0] ), .D1(\makeMusic.counter[0] ), 
    .C1(\makeMusic.n311[3] ), .B1(\makeMusic.counter[1] ), 
    .A1(\makeMusic.n1469 ), .D0(\makeMusic.n311[2] ), 
    .C0(\makeMusic.counter[0] ), .B0(\makeMusic.n311[3] ), 
    .A0(\makeMusic.freq_9__N_96 ), .CLK(int_osc_c), 
    .Q0(\makeMusic.counter[0] ), .Q1(\makeMusic.counter[1] ), 
    .F0(\makeMusic.n13[0] ), .F1(\makeMusic.n13[1] ));
  makeMusic_SLICE_93 \makeMusic.SLICE_93 ( .DI1(\makeMusic.dur_7__N_52[6] ), 
    .DI0(\makeMusic.dur_7__N_52[7] ), .D1(\makeMusic.dur_7__N_97[6] ), 
    .C1(\flattenedMCUout[38] ), .B1(\makeMusic.freq_9__N_96 ), 
    .D0(\makeMusic.dur_7__N_97[7] ), .C0(\flattenedMCUout[39] ), 
    .A0(\makeMusic.freq_9__N_96 ), .CE(\makeMusic.n1431 ), .CLK(int_osc_c), 
    .Q0(\makeMusic.dur[7] ), .Q1(\makeMusic.dur[6] ), 
    .F0(\makeMusic.dur_7__N_52[7] ), .F1(\makeMusic.dur_7__N_52[6] ));
  makeMusic_SLICE_95 \makeMusic.SLICE_95 ( .DI1(\makeMusic.dur_7__N_52[4] ), 
    .DI0(\makeMusic.dur_7__N_52[5] ), .D1(\makeMusic.freq_9__N_96 ), 
    .C1(\flattenedMCUout[36] ), .A1(\makeMusic.dur_7__N_97[4] ), 
    .D0(\flattenedMCUout[37] ), .C0(\makeMusic.freq_9__N_96 ), 
    .A0(\makeMusic.dur_7__N_97[5] ), .CE(\makeMusic.n1431 ), .CLK(int_osc_c), 
    .Q0(\makeMusic.dur[5] ), .Q1(\makeMusic.dur[4] ), 
    .F0(\makeMusic.dur_7__N_52[5] ), .F1(\makeMusic.dur_7__N_52[4] ));
  makeMusic_SLICE_97 \makeMusic.SLICE_97 ( .DI1(\makeMusic.dur_7__N_52[2] ), 
    .DI0(\makeMusic.dur_7__N_52[3] ), .D1(\flattenedMCUout[34] ), 
    .C1(\makeMusic.dur_7__N_97[2] ), .A1(\makeMusic.freq_9__N_96 ), 
    .D0(\makeMusic.freq_9__N_96 ), .C0(\makeMusic.dur_7__N_97[3] ), 
    .B0(\flattenedMCUout[35] ), .CE(\makeMusic.n1431 ), .CLK(int_osc_c), 
    .Q0(\makeMusic.dur[3] ), .Q1(\makeMusic.dur[2] ), 
    .F0(\makeMusic.dur_7__N_52[3] ), .F1(\makeMusic.dur_7__N_52[2] ));
  makeMusic_SLICE_101 \makeMusic.SLICE_101 ( .DI1(\makeMusic.n1455 ), 
    .DI0(\makeMusic.n1456 ), .D1(\makeMusic.n1469 ), .C1(\makeMusic.n311[3] ), 
    .B1(\makeMusic.freq[2] ), .A1(\makeMusic.n397[2] ), 
    .D0(\makeMusic.n311[3] ), .C0(\makeMusic.n397[1] ), 
    .B0(\makeMusic.freq[1] ), .A0(\makeMusic.n1469 ), .CLK(int_osc_c), 
    .Q0(\makeMusic.freq[1] ), .Q1(\makeMusic.freq[2] ), .F0(\makeMusic.n1456 ), 
    .F1(\makeMusic.n1455 ));
  makeMusic_SLICE_103 \makeMusic.SLICE_103 ( .DI1(\makeMusic.n1453 ), 
    .DI0(\makeMusic.n1454 ), .D1(\makeMusic.freq[4] ), 
    .C1(\makeMusic.n397[4] ), .B1(\makeMusic.n1469 ), .A1(\makeMusic.n311[3] ), 
    .D0(\makeMusic.freq[3] ), .C0(\makeMusic.n1469 ), .B0(\makeMusic.n311[3] ), 
    .A0(\makeMusic.n397[3] ), .CLK(int_osc_c), .Q0(\makeMusic.freq[3] ), 
    .Q1(\makeMusic.freq[4] ), .F0(\makeMusic.n1454 ), .F1(\makeMusic.n1453 ));
  makeMusic_SLICE_105 \makeMusic.SLICE_105 ( .DI1(\makeMusic.n1451 ), 
    .DI0(\makeMusic.n1452 ), .D1(\makeMusic.freq[6] ), 
    .C1(\makeMusic.n311[3] ), .B1(\makeMusic.n397[6] ), .A1(\makeMusic.n1469 ), 
    .D0(\makeMusic.freq[5] ), .C0(\makeMusic.n397[5] ), .B0(\makeMusic.n1469 ), 
    .A0(\makeMusic.n311[3] ), .CLK(int_osc_c), .Q0(\makeMusic.freq[5] ), 
    .Q1(\makeMusic.freq[6] ), .F0(\makeMusic.n1452 ), .F1(\makeMusic.n1451 ));
  makeMusic_SLICE_107 \makeMusic.SLICE_107 ( .DI1(\makeMusic.n1449 ), 
    .DI0(\makeMusic.n1450 ), .D1(\makeMusic.n397[8] ), .C1(\makeMusic.n1469 ), 
    .B1(\makeMusic.freq[8] ), .A1(\makeMusic.n311[3] ), 
    .D0(\makeMusic.freq[7] ), .C0(\makeMusic.n311[3] ), .B0(\makeMusic.n1469 ), 
    .A0(\makeMusic.n397[7] ), .CLK(int_osc_c), .Q0(\makeMusic.freq[7] ), 
    .Q1(\makeMusic.freq[8] ), .F0(\makeMusic.n1450 ), .F1(\makeMusic.n1449 ));
  makeMusic_SLICE_108 \makeMusic.SLICE_108 ( 
    .DI1(\makeMusic.freq_9__N_96.sig_029.FeedThruLUT ), 
    .DI0(\makeMusic.n311[2].sig_028.FeedThruLUT ), 
    .B1(\makeMusic.freq_9__N_96 ), .C0(\makeMusic.n311[2] ), .CE(n1458), 
    .LSR(start), .CLK(int_osc_c), .Q0(\makeMusic.n311[3] ), 
    .Q1(\makeMusic.n311[2] ), .F0(\makeMusic.n311[2].sig_028.FeedThruLUT ), 
    .F1(\makeMusic.freq_9__N_96.sig_029.FeedThruLUT ));
  SLICE_115 SLICE_115( .DI1(\newFlattenedMCUout[30].sig_031.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_030.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[30] ), .A0(\newFlattenedMCUout[31] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[31] ), 
    .Q1(\flattenedMCUout[30] ), 
    .F0(\newFlattenedMCUout[31].sig_030.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_031.FeedThruLUT ));
  SLICE_117 SLICE_117( .DI1(\newFlattenedMCUout[28].sig_033.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_032.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[29] ), 
    .Q1(\flattenedMCUout[28] ), 
    .F0(\newFlattenedMCUout[29].sig_032.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_033.FeedThruLUT ));
  SLICE_121 SLICE_121( .DI1(\newFlattenedMCUout[35].sig_037.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[34].sig_036.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[35] ), .D0(\newFlattenedMCUout[34] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[34] ), 
    .Q1(\flattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[34].sig_036.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[35].sig_037.FeedThruLUT ));
  SLICE_123 SLICE_123( .DI1(\newFlattenedMCUout[37].sig_039.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[36].sig_038.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[37] ), .A0(\newFlattenedMCUout[36] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[36] ), 
    .Q1(\flattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[36].sig_038.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[37].sig_039.FeedThruLUT ));
  SLICE_125 SLICE_125( .DI1(\newFlattenedMCUout[39].sig_048.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[38].sig_040.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[39] ), .B0(\newFlattenedMCUout[38] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[38] ), 
    .Q1(\flattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[38].sig_040.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[39].sig_048.FeedThruLUT ));
  SLICE_126 SLICE_126( .DI1(\newFlattenedMCUout[42].sig_047.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[43].sig_041.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[42] ), .C0(\newFlattenedMCUout[43] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[43] ), 
    .Q1(\flattenedMCUout[42] ), 
    .F0(\newFlattenedMCUout[43].sig_041.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[42].sig_047.FeedThruLUT ));
  SLICE_127 SLICE_127( .DI1(\newFlattenedMCUout[45].sig_043.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[44].sig_042.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[45] ), .D0(\newFlattenedMCUout[44] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[44] ), 
    .Q1(\flattenedMCUout[45] ), 
    .F0(\newFlattenedMCUout[44].sig_042.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[45].sig_043.FeedThruLUT ));
  SLICE_129 SLICE_129( .DI1(\newFlattenedMCUout[47].sig_045.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[46].sig_044.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[47] ), .D0(\newFlattenedMCUout[46] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc_c), .Q0(\flattenedMCUout[46] ), 
    .Q1(\flattenedMCUout[47] ), 
    .F0(\newFlattenedMCUout[46].sig_044.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[47].sig_045.FeedThruLUT ));
  SLICE_135 SLICE_135( .DI1(\newFlattenedMCUout[44].sig_051.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[45].sig_050.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[44] ), .C0(\newFlattenedMCUout[45] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[46] ), .Q1(\newFlattenedMCUout[45] ), 
    .F0(\newFlattenedMCUout[45].sig_050.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[44].sig_051.FeedThruLUT ));
  SLICE_137 SLICE_137( .DI1(\newFlattenedMCUout[42].sig_053.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[43].sig_052.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[42] ), .A0(\newFlattenedMCUout[43] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[44] ), .Q1(\newFlattenedMCUout[43] ), 
    .F0(\newFlattenedMCUout[43].sig_052.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[42].sig_053.FeedThruLUT ));
  SLICE_139 SLICE_139( .DI1(\newFlattenedMCUout[40].sig_055.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[41].sig_054.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[40] ), .A0(\newFlattenedMCUout[41] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[42] ), .Q1(\newFlattenedMCUout[41] ), 
    .F0(\newFlattenedMCUout[41].sig_054.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[40].sig_055.FeedThruLUT ));
  SLICE_141 SLICE_141( .DI1(\newFlattenedMCUout[38].sig_057.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_056.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[38] ), .C0(\newFlattenedMCUout[39] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[40] ), .Q1(\newFlattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[39].sig_056.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_057.FeedThruLUT ));
  SLICE_143 SLICE_143( .DI1(\newFlattenedMCUout[36].sig_059.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_058.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[36] ), .C0(\newFlattenedMCUout[37] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[38] ), .Q1(\newFlattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[37].sig_058.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_059.FeedThruLUT ));
  SLICE_145 SLICE_145( .DI1(\newFlattenedMCUout[34].sig_061.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_060.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .A0(\newFlattenedMCUout[35] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[36] ), .Q1(\newFlattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[35].sig_060.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_061.FeedThruLUT ));
  SLICE_147 SLICE_147( .DI1(\newFlattenedMCUout[32].sig_063.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_062.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .A0(\newFlattenedMCUout[33] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[34] ), .Q1(\newFlattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[33].sig_062.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_063.FeedThruLUT ));
  SLICE_149 SLICE_149( .DI1(\newFlattenedMCUout[30].sig_065.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_064.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[30] ), .A0(\newFlattenedMCUout[31] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[32] ), .Q1(\newFlattenedMCUout[31] ), 
    .F0(\newFlattenedMCUout[31].sig_064.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_065.FeedThruLUT ));
  SLICE_151 SLICE_151( .DI1(\newFlattenedMCUout[28].sig_067.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_066.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[28] ), .C0(\newFlattenedMCUout[29] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[30] ), .Q1(\newFlattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[29].sig_066.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_067.FeedThruLUT ));
  SLICE_153 SLICE_153( .DI1(\newFlattenedMCUout[26].sig_069.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_068.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[26] ), .C0(\newFlattenedMCUout[27] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[28] ), .Q1(\newFlattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[27].sig_068.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_069.FeedThruLUT ));
  SLICE_155 SLICE_155( .DI1(\newFlattenedMCUout[24].sig_071.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_070.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[24] ), .C0(\newFlattenedMCUout[25] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[26] ), .Q1(\newFlattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[25].sig_070.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_071.FeedThruLUT ));
  SLICE_157 SLICE_157( .DI1(\newFlattenedMCUout[22].sig_073.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_072.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .C0(\newFlattenedMCUout[23] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[24] ), .Q1(\newFlattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[23].sig_072.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_073.FeedThruLUT ));
  SLICE_159 SLICE_159( .DI1(\newFlattenedMCUout[20].sig_075.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_074.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[20] ), .A0(\newFlattenedMCUout[21] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[22] ), .Q1(\newFlattenedMCUout[21] ), 
    .F0(\newFlattenedMCUout[21].sig_074.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_075.FeedThruLUT ));
  SLICE_161 SLICE_161( .DI1(\newFlattenedMCUout[18].sig_077.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_076.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .C0(\newFlattenedMCUout[19] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[20] ), .Q1(\newFlattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[19].sig_076.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_077.FeedThruLUT ));
  SLICE_163 SLICE_163( .DI1(\newFlattenedMCUout[16].sig_079.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_078.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[16] ), .B0(\newFlattenedMCUout[17] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[18] ), .Q1(\newFlattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[17].sig_078.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_079.FeedThruLUT ));
  SLICE_165 SLICE_165( .DI1(\newFlattenedMCUout[14].sig_081.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_080.FeedThruLUT ), 
    .A1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[16] ), .Q1(\newFlattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[15].sig_080.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_081.FeedThruLUT ));
  SLICE_167 SLICE_167( .DI1(\newFlattenedMCUout[12].sig_083.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_082.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[12] ), .C0(\newFlattenedMCUout[13] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[14] ), .Q1(\newFlattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[13].sig_082.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_083.FeedThruLUT ));
  SLICE_169 SLICE_169( .DI1(\newFlattenedMCUout[10].sig_085.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_084.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[10] ), .A0(\newFlattenedMCUout[11] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[12] ), .Q1(\newFlattenedMCUout[11] ), 
    .F0(\newFlattenedMCUout[11].sig_084.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_085.FeedThruLUT ));
  SLICE_171 SLICE_171( .DI1(\newFlattenedMCUout[8].sig_087.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_086.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[8] ), .C0(\newFlattenedMCUout[9] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[10] ), .Q1(\newFlattenedMCUout[9] ), 
    .F0(\newFlattenedMCUout[9].sig_086.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_087.FeedThruLUT ));
  SLICE_173 SLICE_173( .DI1(\newFlattenedMCUout[6].sig_089.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[7].sig_088.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[6] ), .C0(\newFlattenedMCUout[7] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[8] ), .Q1(\newFlattenedMCUout[7] ), 
    .F0(\newFlattenedMCUout[7].sig_088.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[6].sig_089.FeedThruLUT ));
  SLICE_175 SLICE_175( .DI1(\newFlattenedMCUout[4].sig_091.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[5].sig_090.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[4] ), .A0(\newFlattenedMCUout[5] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[6] ), .Q1(\newFlattenedMCUout[5] ), 
    .F0(\newFlattenedMCUout[5].sig_090.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[4].sig_091.FeedThruLUT ));
  SLICE_177 SLICE_177( .DI1(\newFlattenedMCUout[2].sig_093.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[3].sig_092.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[2] ), .C0(\newFlattenedMCUout[3] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[4] ), .Q1(\newFlattenedMCUout[3] ), 
    .F0(\newFlattenedMCUout[3].sig_092.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[2].sig_093.FeedThruLUT ));
  SLICE_179 SLICE_179( .DI1(\newFlattenedMCUout[0].sig_095.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[1].sig_094.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[0] ), .C0(\newFlattenedMCUout[1] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[2] ), .Q1(\newFlattenedMCUout[1] ), 
    .F0(\newFlattenedMCUout[1].sig_094.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[0].sig_095.FeedThruLUT ));
  SLICE_182 SLICE_182( .D0(\newFlattenedMCUout[34] ), 
    .C0(\flattenedMCUout[34] ), .B0(\flattenedMCUout[21] ), 
    .A0(\newFlattenedMCUout[21] ), .F0(n64));
  SLICE_183 SLICE_183( .D1(n62), .C1(n61), .B1(n64), .A1(n63), 
    .D0(\newFlattenedMCUout[38] ), .C0(\flattenedMCUout[10] ), 
    .B0(\flattenedMCUout[38] ), .A0(\newFlattenedMCUout[10] ), .F0(n61), 
    .F1(n88));
  SLICE_184 SLICE_184( .D1(\newFlattenedMCUout[29] ), 
    .C1(\flattenedMCUout[29] ), .B1(\newFlattenedMCUout[44] ), 
    .A1(\flattenedMCUout[44] ), .D0(\newFlattenedMCUout[12] ), 
    .C0(\newFlattenedMCUout[32] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[32] ), .F0(n56), .F1(n68));
  SLICE_185 SLICE_185( .D1(n54), .C1(n53), .B1(n55), .A1(n56), 
    .D0(\flattenedMCUout[41] ), .C0(\flattenedMCUout[26] ), 
    .B0(\newFlattenedMCUout[41] ), .A0(\newFlattenedMCUout[26] ), .F0(n53), 
    .F1(n86));
  SLICE_186 SLICE_186( .D1(\flattenedMCUout[40] ), .C1(\flattenedMCUout[6] ), 
    .B1(\newFlattenedMCUout[40] ), .A1(\newFlattenedMCUout[6] ), 
    .D0(\flattenedMCUout[22] ), .C0(\newFlattenedMCUout[28] ), 
    .B0(\flattenedMCUout[28] ), .A0(\newFlattenedMCUout[22] ), .F0(n72), 
    .F1(n70));
  SLICE_187 SLICE_187( .D1(n70), .C1(n69), .B1(n72), .A1(n71), 
    .D0(\newFlattenedMCUout[37] ), .C0(\flattenedMCUout[31] ), 
    .B0(\newFlattenedMCUout[31] ), .A0(\flattenedMCUout[37] ), .F0(n69), 
    .F1(n90));
  SLICE_188 SLICE_188( .D0(\newFlattenedMCUout[33] ), 
    .C0(\flattenedMCUout[45] ), .B0(\newFlattenedMCUout[45] ), 
    .A0(\flattenedMCUout[33] ), .F0(n60));
  SLICE_189 SLICE_189( .D1(n60), .C1(n57), .B1(n59), .A1(n58), 
    .D0(\newFlattenedMCUout[2] ), .C0(\flattenedMCUout[46] ), 
    .B0(\newFlattenedMCUout[46] ), .A0(\flattenedMCUout[2] ), .F0(n57), 
    .F1(n87));
  SLICE_190 SLICE_190( .D1(\flattenedMCUout[1] ), 
    .C1(\newFlattenedMCUout[25] ), .B1(\flattenedMCUout[25] ), 
    .A1(\newFlattenedMCUout[1] ), .D0(\newFlattenedMCUout[8] ), 
    .C0(\flattenedMCUout[8] ), .B0(\flattenedMCUout[24] ), 
    .A0(\newFlattenedMCUout[24] ), .F0(n52), .F1(n50));
  SLICE_191 SLICE_191( .D1(n50), .C1(n49), .B1(n52), .A1(n51), 
    .D0(\flattenedMCUout[18] ), .C0(\flattenedMCUout[4] ), 
    .B0(\newFlattenedMCUout[18] ), .A0(\newFlattenedMCUout[4] ), .F0(n49), 
    .F1(n85));
  SLICE_193 SLICE_193( .D1(n68), .C1(n65), .B1(n66), .A1(n67), 
    .D0(\newFlattenedMCUout[27] ), .C0(\flattenedMCUout[27] ), 
    .B0(\newFlattenedMCUout[30] ), .A0(\flattenedMCUout[30] ), .F0(n65), 
    .F1(n89));
  makeMusic_SLICE_194 \makeMusic.SLICE_194 ( .D1(\makeMusic.freq_9__N_96 ), 
    .C1(\makeMusic.n1389 ), .A1(\flattenedMCUout[40] ), 
    .D0(\flattenedMCUout[24] ), .C0(\flattenedMCUout[8] ), 
    .A0(\makeMusic.n311[2] ), .F0(\makeMusic.n1389 ), .F1(\makeMusic.n1390 ));
  makeMusic_SLICE_196 \makeMusic.SLICE_196 ( .D1(\flattenedMCUout[41] ), 
    .C1(\makeMusic.n1411 ), .B1(\makeMusic.freq_9__N_96 ), 
    .C0(\makeMusic.n311[2] ), .B0(\flattenedMCUout[9] ), 
    .A0(\flattenedMCUout[25] ), .F0(\makeMusic.n1411 ), .F1(\makeMusic.n1412 ));
  makeMusic_SLICE_198 \makeMusic.SLICE_198 ( .C1(\makeMusic.n1409 ), 
    .B1(\makeMusic.freq_9__N_96 ), .A1(\flattenedMCUout[42] ), 
    .D0(\makeMusic.n311[2] ), .C0(\flattenedMCUout[26] ), 
    .A0(\flattenedMCUout[10] ), .F0(\makeMusic.n1409 ), .F1(\makeMusic.n1410 ));
  makeMusic_SLICE_200 \makeMusic.SLICE_200 ( .D1(\makeMusic.freq_9__N_96 ), 
    .C1(\makeMusic.n1407 ), .B1(\flattenedMCUout[43] ), 
    .D0(\makeMusic.n311[2] ), .B0(\flattenedMCUout[27] ), 
    .A0(\flattenedMCUout[11] ), .F0(\makeMusic.n1407 ), .F1(\makeMusic.n1408 ));
  makeMusic_SLICE_202 \makeMusic.SLICE_202 ( .C1(\makeMusic.n1405 ), 
    .B1(\makeMusic.freq_9__N_96 ), .A1(\flattenedMCUout[44] ), 
    .D0(\flattenedMCUout[12] ), .C0(\flattenedMCUout[28] ), 
    .A0(\makeMusic.n311[2] ), .F0(\makeMusic.n1405 ), .F1(\makeMusic.n1406 ));
  makeMusic_SLICE_204 \makeMusic.SLICE_204 ( .D1(\makeMusic.freq_9__N_96 ), 
    .C1(\makeMusic.n1403 ), .B1(\flattenedMCUout[45] ), 
    .C0(\flattenedMCUout[29] ), .B0(\makeMusic.n311[2] ), 
    .A0(\flattenedMCUout[13] ), .F0(\makeMusic.n1403 ), .F1(\makeMusic.n1404 ));
  makeMusic_SLICE_206 \makeMusic.SLICE_206 ( .D1(\flattenedMCUout[46] ), 
    .C1(\makeMusic.n1401 ), .B1(\makeMusic.freq_9__N_96 ), 
    .C0(\flattenedMCUout[30] ), .B0(\makeMusic.n311[2] ), 
    .A0(\flattenedMCUout[14] ), .F0(\makeMusic.n1401 ), .F1(\makeMusic.n1402 ));
  makeMusic_SLICE_208 \makeMusic.SLICE_208 ( .D1(\flattenedMCUout[47] ), 
    .C1(\makeMusic.n1399 ), .A1(\makeMusic.freq_9__N_96 ), 
    .D0(\makeMusic.n311[2] ), .C0(\flattenedMCUout[15] ), 
    .B0(\flattenedMCUout[31] ), .F0(\makeMusic.n1399 ), .F1(\makeMusic.n1400 ));
  makeMusic_pitch_SLICE_210 \makeMusic.pitch.SLICE_210 ( 
    .D1(\makeMusic.pitch.n41 ), .C1(\makeMusic.pitch.n43 ), 
    .B1(\makeMusic.pitch.n2274 ), .A1(\makeMusic.pitch.n42 ), 
    .D0(\makeMusic.pitch.threshold[28] ), .C0(\makeMusic.pitch.counter[29] ), 
    .B0(\makeMusic.pitch.threshold[30] ), .A0(\makeMusic.pitch.counter[30] ), 
    .F0(\makeMusic.pitch.n41 ), .F1(\makeMusic.pitch.n59 ));
  makeMusic_pitch_SLICE_211 \makeMusic.pitch.SLICE_211 ( 
    .C0(\makeMusic.pitch.counter[9] ), .B0(\makeMusic.pitch.counter[10] ), 
    .F0(\makeMusic.pitch.n2274 ));
  makeMusic_pitch_SLICE_212 \makeMusic.pitch.SLICE_212 ( 
    .D1(\makeMusic.pitch.n49 ), .C1(\makeMusic.pitch.n36 ), 
    .B1(\makeMusic.pitch.n35 ), .A1(\makeMusic.pitch.n58 ), 
    .D0(\makeMusic.pitch.threshold[18] ), .C0(\makeMusic.pitch.threshold[20] ), 
    .B0(\makeMusic.pitch.counter[18] ), .A0(\makeMusic.pitch.counter[20] ), 
    .F0(\makeMusic.pitch.n35 ), .F1(\makeMusic.pitch.n61 ));
  makeMusic_pitch_SLICE_213 \makeMusic.pitch.SLICE_213 ( 
    .D1(\makeMusic.pitch.counter[13] ), .C1(\makeMusic.pitch.counter[14] ), 
    .B1(\makeMusic.pitch.threshold[14] ), .A1(\makeMusic.pitch.threshold[13] ), 
    .D0(\makeMusic.pitch.threshold[17] ), .C0(\makeMusic.pitch.counter[12] ), 
    .B0(\makeMusic.pitch.counter[17] ), .A0(\makeMusic.pitch.threshold[12] ), 
    .F0(\makeMusic.pitch.n36 ), .F1(\makeMusic.pitch.n40 ));
  makeMusic_pitch_SLICE_214 \makeMusic.pitch.SLICE_214 ( 
    .D1(\makeMusic.pitch.threshold[16] ), .C1(\makeMusic.pitch.n34 ), 
    .B1(\makeMusic.pitch.counter[0] ), .A1(\makeMusic.pitch.counter[16] ), 
    .C0(\makeMusic.pitch.counter[24] ), .B0(\makeMusic.pitch.threshold[24] ), 
    .A0(\makeMusic.pitch.counter[8] ), .F0(\makeMusic.pitch.n34 ), 
    .F1(\makeMusic.pitch.n49 ));
  makeMusic_pitch_SLICE_216 \makeMusic.pitch.SLICE_216 ( 
    .D1(\makeMusic.pitch.n40 ), .C1(\makeMusic.pitch.n38 ), 
    .B1(\makeMusic.pitch.n37 ), .A1(\makeMusic.pitch.n39 ), 
    .D0(\makeMusic.pitch.counter[26] ), .C0(\makeMusic.pitch.threshold[24] ), 
    .B0(\makeMusic.pitch.counter[28] ), .A0(\makeMusic.pitch.threshold[28] ), 
    .F0(\makeMusic.pitch.n37 ), .F1(\makeMusic.pitch.n58 ));
  makeMusic_pitch_SLICE_218 \makeMusic.pitch.SLICE_218 ( 
    .D1(\makeMusic.freq[1] ), .C1(\makeMusic.pitch.n14 ), 
    .B1(\makeMusic.freq[5] ), .A1(\makeMusic.pitch.n15 ), 
    .D0(\makeMusic.freq[7] ), .C0(\makeMusic.freq[6] ), 
    .B0(\makeMusic.freq[2] ), .A0(\makeMusic.freq[3] ), 
    .F0(\makeMusic.pitch.n15 ), .F1(\makeMusic.pitch.threshold_31__N_246[26] ));
  makeMusic_pitch_SLICE_219 \makeMusic.pitch.SLICE_219 ( 
    .DI1(\makeMusic.n1448 ), .D1(\makeMusic.n397[9] ), .C1(\makeMusic.n1469 ), 
    .B1(\makeMusic.freq[9] ), .A1(\makeMusic.n311[3] ), 
    .C0(\makeMusic.freq[8] ), .B0(\makeMusic.freq[9] ), 
    .A0(\makeMusic.freq[4] ), .CLK(int_osc_c), .Q1(\makeMusic.freq[9] ), 
    .F0(\makeMusic.pitch.n14 ), .F1(\makeMusic.n1448 ));
  makeMusic_howLong_SLICE_220 \makeMusic.howLong.SLICE_220 ( 
    .D1(\makeMusic.howLong.THRESHOLD[21] ), 
    .C1(\makeMusic.howLong.counter[21] ), 
    .B1(\makeMusic.howLong.THRESHOLD[22] ), 
    .A1(\makeMusic.howLong.counter[22] ), .D0(\makeMusic.howLong.counter[19] ), 
    .C0(\makeMusic.howLong.THRESHOLD[14] ), 
    .B0(\makeMusic.howLong.counter[14] ), 
    .A0(\makeMusic.howLong.THRESHOLD[19] ), .F0(\makeMusic.howLong.n40 ), 
    .F1(\makeMusic.howLong.n39 ));
  makeMusic_howLong_SLICE_221 \makeMusic.howLong.SLICE_221 ( 
    .D1(\makeMusic.howLong.n38 ), .C1(\makeMusic.howLong.n37 ), 
    .B1(\makeMusic.howLong.n40 ), .A1(\makeMusic.howLong.n39 ), 
    .D0(\makeMusic.howLong.counter[28] ), 
    .B0(\makeMusic.howLong.THRESHOLD[28] ), 
    .A0(\makeMusic.howLong.counter[10] ), .F0(\makeMusic.howLong.n37 ), 
    .F1(\makeMusic.howLong.n58 ));
  makeMusic_howLong_SLICE_222 \makeMusic.howLong.SLICE_222 ( 
    .D0(\makeMusic.howLong.counter[31] ), 
    .C0(\makeMusic.howLong.THRESHOLD[31] ), 
    .B0(\makeMusic.howLong.counter[15] ), 
    .A0(\makeMusic.howLong.THRESHOLD[15] ), .F0(\makeMusic.howLong.n44 ));
  makeMusic_howLong_SLICE_223 \makeMusic.howLong.SLICE_223 ( 
    .D1(\makeMusic.howLong.n43 ), .C1(\makeMusic.howLong.n41 ), 
    .B1(\makeMusic.howLong.n44 ), .A1(\makeMusic.howLong.n42 ), 
    .D0(\makeMusic.howLong.counter[13] ), 
    .C0(\makeMusic.howLong.THRESHOLD[13] ), 
    .B0(\makeMusic.howLong.counter[11] ), 
    .A0(\makeMusic.howLong.THRESHOLD[11] ), .F0(\makeMusic.howLong.n41 ), 
    .F1(\makeMusic.howLong.n59 ));
  makeMusic_howLong_SLICE_224 \makeMusic.howLong.SLICE_224 ( 
    .D1(\makeMusic.howLong.counter[16] ), 
    .C1(\makeMusic.howLong.THRESHOLD[16] ), 
    .B1(\makeMusic.howLong.counter[0] ), .A1(\makeMusic.howLong.n34 ), 
    .D0(\makeMusic.howLong.counter[24] ), 
    .C0(\makeMusic.howLong.THRESHOLD[24] ), 
    .A0(\makeMusic.howLong.counter[8] ), .F0(\makeMusic.howLong.n34 ), 
    .F1(\makeMusic.howLong.n49 ));
  makeMusic_howLong_SLICE_226 \makeMusic.howLong.SLICE_226 ( 
    .D0(\makeMusic.howLong.THRESHOLD[12] ), 
    .C0(\makeMusic.howLong.counter[12] ), .B0(\makeMusic.howLong.counter[17] ), 
    .A0(\makeMusic.howLong.THRESHOLD[17] ), .F0(\makeMusic.howLong.n36 ));
  makeMusic_howLong_SLICE_227 \makeMusic.howLong.SLICE_227 ( 
    .D1(\makeMusic.howLong.n36 ), .C1(\makeMusic.howLong.n49 ), 
    .B1(\makeMusic.howLong.n58 ), .A1(\makeMusic.howLong.n35 ), 
    .D0(\makeMusic.howLong.counter[20] ), .C0(\makeMusic.howLong.counter[18] ), 
    .B0(\makeMusic.howLong.THRESHOLD[18] ), 
    .A0(\makeMusic.howLong.THRESHOLD[20] ), .F0(\makeMusic.howLong.n35 ), 
    .F1(\makeMusic.howLong.n61 ));
  SLICE_228 SLICE_228( .D0(n88), .C0(n85), .B0(n86), .A0(n87), .F0(n94));
  SLICE_229 SLICE_229( .C0(n90), .B0(n89), .A0(n94), 
    .F0(flattenedMCUout_47__N_49));
  makeMusic_howLong_SLICE_230 \makeMusic.howLong.SLICE_230 ( 
    .DI1(\makeMusic.howLong.clkStrobe_N_213 ), .D1(\makeMusic.howLong.n2282 ), 
    .C1(\makeMusic.howLong.n2262 ), .B1(\makeMusic.howLong.n59 ), 
    .A1(\makeMusic.howLong.n61 ), .D0(\makeMusic.howLong.counter[4] ), 
    .C0(\makeMusic.howLong.counter[2] ), .B0(\makeMusic.howLong.counter[1] ), 
    .A0(\makeMusic.howLong.counter[9] ), .CLK(int_osc_c), .Q1(done), 
    .F0(\makeMusic.howLong.n2262 ), .F1(\makeMusic.howLong.clkStrobe_N_213 ));
  makeMusic_howLong_SLICE_231 \makeMusic.howLong.SLICE_231 ( 
    .D0(\makeMusic.howLong.counter[7] ), .C0(\makeMusic.howLong.counter[3] ), 
    .B0(\makeMusic.howLong.counter[6] ), .A0(\makeMusic.howLong.counter[5] ), 
    .F0(\makeMusic.howLong.n2282 ));
  makeMusic_howLong_SLICE_233 \makeMusic.howLong.SLICE_233 ( 
    .D1(\makeMusic.howLong.THRESHOLD[29] ), 
    .C1(\makeMusic.howLong.THRESHOLD[30] ), 
    .B1(\makeMusic.howLong.counter[30] ), .A1(\makeMusic.howLong.counter[29] ), 
    .D0(\makeMusic.howLong.THRESHOLD[23] ), 
    .C0(\makeMusic.howLong.counter[23] ), .B0(\makeMusic.howLong.counter[27] ), 
    .A0(\makeMusic.howLong.THRESHOLD[27] ), .F0(\makeMusic.howLong.n43 ), 
    .F1(\makeMusic.howLong.n42 ));
  makeMusic_pitch_SLICE_236 \makeMusic.pitch.SLICE_236 ( 
    .D0(\makeMusic.pitch.counter[6] ), .C0(\makeMusic.pitch.counter[3] ), 
    .B0(\makeMusic.pitch.counter[5] ), .A0(\makeMusic.pitch.counter[7] ), 
    .F0(\makeMusic.pitch.n2278 ));
  makeMusic_pitch_SLICE_237 \makeMusic.pitch.SLICE_237 ( 
    .DI1(\makeMusic.pitch.clkStrobe_N_314 ), .D1(\makeMusic.pitch.n59 ), 
    .C1(\makeMusic.pitch.n2276 ), .B1(\makeMusic.pitch.n61 ), 
    .A1(\makeMusic.pitch.n2278 ), .D0(\makeMusic.pitch.counter[11] ), 
    .C0(\makeMusic.pitch.counter[2] ), .B0(\makeMusic.pitch.counter[4] ), 
    .A0(\makeMusic.pitch.counter[1] ), .CLK(int_osc_c), .Q1(pwm_c), 
    .F0(\makeMusic.pitch.n2276 ), .F1(\makeMusic.pitch.clkStrobe_N_314 ));
  makeMusic_pitch_SLICE_238 \makeMusic.pitch.SLICE_238 ( 
    .D1(\makeMusic.pitch.threshold[24] ), .C1(\makeMusic.pitch.counter[25] ), 
    .B1(\makeMusic.pitch.threshold[20] ), .A1(\makeMusic.pitch.counter[22] ), 
    .D0(\makeMusic.pitch.counter[19] ), .C0(\makeMusic.pitch.threshold[19] ), 
    .B0(\makeMusic.pitch.counter[21] ), .A0(\makeMusic.pitch.threshold[20] ), 
    .F0(\makeMusic.pitch.n39 ), .F1(\makeMusic.pitch.n38 ));
  makeMusic_SLICE_240 \makeMusic.SLICE_240 ( .C0(\makeMusic.counter[1] ), 
    .A0(\makeMusic.counter[0] ), .F0(\makeMusic.rep ));
  makeMusic_SLICE_241 \makeMusic.SLICE_241 ( .DI1(\makeMusic.n1392 ), 
    .D1(\makeMusic.en_N_111 ), .C1(\makeMusic.rep ), .B1(start), 
    .A1(\makeMusic.n1423 ), .C0(done), .A0(\makeMusic.n311[3] ), .LSR(start), 
    .CLK(int_osc_c), .Q1(\makeMusic.en_N_111 ), .F0(\makeMusic.n1423 ), 
    .F1(\makeMusic.n1392 ));
  makeMusic_SLICE_244 \makeMusic.SLICE_244 ( .C1(\makeMusic.n311[2] ), 
    .B1(\makeMusic.freq_9__N_96 ), .A1(\makeMusic.n311[3] ), 
    .B0(\makeMusic.n311[2] ), .A0(\makeMusic.freq_9__N_96 ), 
    .F0(\makeMusic.n1469 ), .F1(\makeMusic.n1431 ));
  SLICE_246 SLICE_246( .D1(\makeMusic.n311[2] ), .C1(\flattenedMCUout[16] ), 
    .B1(\flattenedMCUout[0] ), .D0(\newFlattenedMCUout[0] ), 
    .C0(\newFlattenedMCUout[16] ), .B0(\flattenedMCUout[16] ), 
    .A0(\flattenedMCUout[0] ), .F0(n67), .F1(\makeMusic.dur_7__N_97[0] ));
  SLICE_248 SLICE_248( .DI1(\newFlattenedMCUout[46].sig_049.FeedThruLUT ), 
    .B1(\newFlattenedMCUout[46] ), .D0(\newFlattenedMCUout[47] ), 
    .C0(\flattenedMCUout[23] ), .B0(\newFlattenedMCUout[23] ), 
    .A0(\flattenedMCUout[47] ), .CLK(sck_c), .Q1(\newFlattenedMCUout[47] ), 
    .F0(n51), .F1(\newFlattenedMCUout[46].sig_049.FeedThruLUT ));
  SLICE_250 SLICE_250( .F0(VCC_net));
  SLICE_251 SLICE_251( .D1(\makeMusic.n311[2] ), .B1(\flattenedMCUout[23] ), 
    .A1(\flattenedMCUout[7] ), .D0(\newFlattenedMCUout[19] ), 
    .C0(\newFlattenedMCUout[7] ), .B0(\flattenedMCUout[7] ), 
    .A0(\flattenedMCUout[19] ), .F0(n62), .F1(\makeMusic.dur_7__N_97[7] ));
  SLICE_252 SLICE_252( .D0(\newFlattenedMCUout[20] ), 
    .C0(\flattenedMCUout[5] ), .B0(\flattenedMCUout[20] ), 
    .A0(\newFlattenedMCUout[5] ), .F0(n63));
  SLICE_254 SLICE_254( .D1(\newFlattenedMCUout[9] ), .C1(\flattenedMCUout[9] ), 
    .B1(\newFlattenedMCUout[43] ), .A1(\flattenedMCUout[43] ), 
    .D0(\flattenedMCUout[39] ), .C0(\newFlattenedMCUout[11] ), 
    .B0(\flattenedMCUout[11] ), .A0(\newFlattenedMCUout[39] ), .F0(n54), 
    .F1(n59));
  SLICE_255 SLICE_255( .D0(\flattenedMCUout[36] ), 
    .C0(\newFlattenedMCUout[13] ), .B0(\newFlattenedMCUout[36] ), 
    .A0(\flattenedMCUout[13] ), .F0(n55));
  SLICE_258 SLICE_258( .D0(\newFlattenedMCUout[17] ), 
    .C0(\flattenedMCUout[17] ), .B0(\newFlattenedMCUout[42] ), 
    .A0(\flattenedMCUout[42] ), .F0(n71));
  SLICE_260 SLICE_260( .D0(\newFlattenedMCUout[15] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[15] ), 
    .A0(\newFlattenedMCUout[35] ), .F0(n58));
  SLICE_264 SLICE_264( .D0(\newFlattenedMCUout[14] ), 
    .C0(\flattenedMCUout[14] ), .B0(\flattenedMCUout[3] ), 
    .A0(\newFlattenedMCUout[3] ), .F0(n66));
  makeMusic_SLICE_267 \makeMusic.SLICE_267 ( .D1(\flattenedMCUout[5] ), 
    .C1(\flattenedMCUout[21] ), .B1(\makeMusic.n311[2] ), 
    .C0(\flattenedMCUout[6] ), .B0(\flattenedMCUout[22] ), 
    .A0(\makeMusic.n311[2] ), .F0(\makeMusic.dur_7__N_97[6] ), 
    .F1(\makeMusic.dur_7__N_97[5] ));
  makeMusic_SLICE_269 \makeMusic.SLICE_269 ( .C1(\makeMusic.n311[2] ), 
    .B1(\flattenedMCUout[19] ), .A1(\flattenedMCUout[3] ), 
    .D0(\makeMusic.n311[2] ), .C0(\flattenedMCUout[20] ), 
    .A0(\flattenedMCUout[4] ), .F0(\makeMusic.dur_7__N_97[4] ), 
    .F1(\makeMusic.dur_7__N_97[3] ));
  makeMusic_SLICE_271 \makeMusic.SLICE_271 ( .D1(\flattenedMCUout[17] ), 
    .C1(\makeMusic.n311[2] ), .A1(\flattenedMCUout[1] ), 
    .D0(\flattenedMCUout[2] ), .B0(\makeMusic.n311[2] ), 
    .A0(\flattenedMCUout[18] ), .F0(\makeMusic.dur_7__N_97[2] ), 
    .F1(\makeMusic.dur_7__N_97[1] ));
  makeMusic_SLICE_273 \makeMusic.SLICE_273 ( .DI1(\makeMusic.n2037 ), 
    .D1(\makeMusic.counter[1] ), .C1(\makeMusic.n4 ), 
    .B1(\makeMusic.counter[0] ), .A1(\makeMusic.n1423 ), .D0(start), 
    .C0(\makeMusic.en_N_111 ), .B0(\makeMusic.freq_9__N_96 ), .A0(done), 
    .LSR(start), .CLK(int_osc_c), .Q1(\makeMusic.freq_9__N_96 ), 
    .F0(\makeMusic.n4 ), .F1(\makeMusic.n2037 ));
  makeMusic_pitch_SLICE_275 \makeMusic.pitch.SLICE_275 ( 
    .D0(\makeMusic.pitch.counter[31] ), .C0(\makeMusic.pitch.threshold[15] ), 
    .B0(\makeMusic.pitch.threshold[31] ), .A0(\makeMusic.pitch.counter[15] ), 
    .F0(\makeMusic.pitch.n43 ));
  makeMusic_pitch_SLICE_276 \makeMusic.pitch.SLICE_276 ( 
    .D0(\makeMusic.pitch.threshold[27] ), .C0(\makeMusic.pitch.threshold[23] ), 
    .B0(\makeMusic.pitch.counter[27] ), .A0(\makeMusic.pitch.counter[23] ), 
    .F0(\makeMusic.pitch.n42 ));
  makeMusic_pitch_SLICE_277 \makeMusic.pitch.SLICE_277 ( 
    .DI1(\makeMusic.en_N_110 ), .B1(\makeMusic.en_N_111 ), .C0(pwm_c), 
    .A0(\makeMusic.en ), .CLK(int_osc_c), .Q1(\makeMusic.en ), 
    .F0(\makeMusic.pitch.n1447 ), .F1(\makeMusic.en_N_110 ));
  makeMusic_howLong_SLICE_279 \makeMusic.howLong.SLICE_279 ( 
    .D0(\makeMusic.howLong.THRESHOLD[26] ), 
    .C0(\makeMusic.howLong.counter[26] ), 
    .B0(\makeMusic.howLong.THRESHOLD[25] ), 
    .A0(\makeMusic.howLong.counter[25] ), .F0(\makeMusic.howLong.n38 ));
  SLICE_282 SLICE_282( .DI1(\flattenedMCUout_47__N_49$n0 ), .D1(n89), .C1(n90), 
    .B1(n94), .C0(start), .B0(done), .CLK(int_osc_c), .Q1(start), .F0(n1458), 
    .F1(\flattenedMCUout_47__N_49$n0 ));
  makeMusic_mult_113 \makeMusic.mult_113 ( .A7(\makeMusic.n1400 ), 
    .A6(\makeMusic.n1402 ), .A5(\makeMusic.n1404 ), .A4(\makeMusic.n1406 ), 
    .A3(\makeMusic.n1408 ), .A2(\makeMusic.n1410 ), .A1(\makeMusic.n1412 ), 
    .A0(\makeMusic.n1390 ), .B1(VCC_net), .B0(VCC_net), 
    .O9(\makeMusic.n397[9] ), .O8(\makeMusic.n397[8] ), 
    .O7(\makeMusic.n397[7] ), .O6(\makeMusic.n397[6] ), 
    .O5(\makeMusic.n397[5] ), .O4(\makeMusic.n397[4] ), 
    .O3(\makeMusic.n397[3] ), .O2(\makeMusic.n397[2] ), 
    .O1(\makeMusic.n397[1] ));
  makeMusic_howLong_mult_126 \makeMusic.howLong.mult_126 ( 
    .A7(\makeMusic.dur[7] ), .A6(\makeMusic.dur[6] ), .A5(\makeMusic.dur[5] ), 
    .A4(\makeMusic.dur[4] ), .A3(\makeMusic.dur[3] ), .A2(\makeMusic.dur[2] ), 
    .A1(\makeMusic.dur[1] ), .A0(\makeMusic.dur[0] ), .B8(VCC_net), 
    .B7(VCC_net), .B5(VCC_net), .B1(VCC_net), .B0(VCC_net), 
    .O16(\makeMusic.howLong.n474[16] ), .O15(\makeMusic.howLong.n474[15] ), 
    .O14(\makeMusic.howLong.n474[14] ), .O13(\makeMusic.howLong.n474[13] ), 
    .O12(\makeMusic.howLong.n474[12] ), .O11(\makeMusic.howLong.n474[11] ), 
    .O10(\makeMusic.howLong.n474[10] ), .O9(\makeMusic.howLong.n474[9] ), 
    .O8(\makeMusic.howLong.THRESHOLD_31__N_145[19] ), 
    .O7(\makeMusic.howLong.THRESHOLD_31__N_145[18] ), 
    .O6(\makeMusic.howLong.THRESHOLD_31__N_145[17] ), 
    .O5(\makeMusic.howLong.THRESHOLD_31__N_145[16] ), 
    .O4(\makeMusic.howLong.THRESHOLD_31__N_145[15] ), 
    .O3(\makeMusic.howLong.THRESHOLD_31__N_145[14] ), 
    .O2(\makeMusic.howLong.THRESHOLD_31__N_145[13] ), 
    .O1(\makeMusic.howLong.THRESHOLD_31__N_145[12] ), 
    .O0(\makeMusic.howLong.THRESHOLD_31__N_145[11] ));
  makeMusic_howLong_mult_125 \makeMusic.howLong.mult_125 ( 
    .A7(\makeMusic.dur[7] ), .A6(\makeMusic.dur[6] ), .A5(\makeMusic.dur[5] ), 
    .A4(\makeMusic.dur[4] ), .A3(\makeMusic.dur[3] ), .A2(\makeMusic.dur[2] ), 
    .A1(\makeMusic.dur[1] ), .A0(\makeMusic.dur[0] ), .B15(VCC_net), 
    .B14(VCC_net), .B13(VCC_net), .B12(VCC_net), .B11(VCC_net), .B7(VCC_net), 
    .B6(VCC_net), .B5(VCC_net), .B4(VCC_net), 
    .O11(\makeMusic.howLong.n449[11] ), .O10(\makeMusic.howLong.n449[10] ), 
    .O9(\makeMusic.howLong.n449[9] ), .O8(\makeMusic.howLong.n449[8] ), 
    .O7(\makeMusic.howLong.n449[7] ), .O6(\makeMusic.howLong.n449[6] ), 
    .O5(\makeMusic.howLong.n449[5] ), .O4(\makeMusic.howLong.n449[4] ), 
    .O3(\makeMusic.howLong.n449[3] ), .O2(\makeMusic.howLong.n449[2] ), 
    .O1(\makeMusic.howLong.n449[1] ), .O0(\makeMusic.howLong.n449[0] ));
  spi_newFlattenedMCUout_i0 \spi.newFlattenedMCUout_i0 ( .PADDI(sdi_c), 
    .INCLK(sck_c), .DI0(\newFlattenedMCUout[0] ));
  sdi sdi_I( .PADDI(sdi_c), .sdi(sdi));
  sck sck_I( .PADDI(sck_c), .sck(sck));
  clk clk_I( .PADDI(int_osc_c), .clk(clk));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module makeMusic_pitch_SLICE_0 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module makeMusic_pitch_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_122__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_16 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_122_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_122__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_17 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_18 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_19 ( input D1, C1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_21 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_22 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_23 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_29 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_30 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_142_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_31 ( input D1, B1, D0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_142_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_32 ( input D1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_142_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_33 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/howLong/add_142_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_34 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_142_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_35 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_142_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_36 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_37 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_142_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_38 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_39 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_40 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_41 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_42 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_43 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_44 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_45 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_46 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_47 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_120__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_48 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_120_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_120__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_49 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_50 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_51 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_52 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_53 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_54 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_55 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_56 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_57 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_58 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_59 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_15_sub_3_add_2_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_60_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_60_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i23( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i22( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_61 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_61_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_61_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i20( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i21( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_62_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_62_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i40( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i41( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_64 ( input DI1, DI0, B1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_64_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_64_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i18( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i19( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_66 ( input DI1, DI0, A1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_66_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_66_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i16( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i17( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_68 ( input DI1, DI0, B1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_68_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_68_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i14( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i15( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_70 ( input DI1, DI0, A1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_70_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_70_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i12( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i13( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_72 ( input DI1, DI0, B1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_72_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_72_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i10( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i11( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_74 ( input DI1, DI0, A1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_74_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_74_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i8( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i9( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_76_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_76_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i27( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i26( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_77 ( input DI1, DI0, A1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_77_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_77_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i25( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i24( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, B1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_78_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_78_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_80 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_80_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_80_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i2( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input DI1, DI0, A1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_82_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_82_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i5( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i4( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_84 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_84_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_84_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i7( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i6( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_88 ( input DI1, DI0, B1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_88_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_88_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i33( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i32( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_90 ( input DI1, DI0, C1, B1, A1, D0, C0, B0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 \makeMusic/dur_7__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \makeMusic/dur_7__I_0_i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_91 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 \makeMusic/i465_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40011 \makeMusic/i457_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/counter_119__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/counter_119__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x9CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF0B4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_93 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40012 \makeMusic/dur_7__I_0_i7_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \makeMusic/dur_7__I_0_i8_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_95 ( input DI1, DI0, D1, C1, A1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \makeMusic/dur_7__I_0_i5_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \makeMusic/dur_7__I_0_i6_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_97 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 \makeMusic/dur_7__I_0_i3_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \makeMusic/dur_7__I_0_i4_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_101 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40017 \makeMusic/i428_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/i429_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i0_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_103 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 \makeMusic/i426_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \makeMusic/i427_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i0_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_105 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 \makeMusic/i424_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40022 \makeMusic/i425_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i0_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xCDC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xF1E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_107 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \makeMusic/i422_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \makeMusic/i423_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i0_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xABA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_108 ( input DI1, DI0, B1, C0, CE, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40004 \makeMusic.SLICE_108_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \makeMusic.SLICE_108_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \makeMusic/state_FSM_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \makeMusic/state_FSM_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_115 ( input DI1, DI0, C1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_115_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_115_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i30( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i31( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_117 ( input DI1, DI0, B1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_117_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_117_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i28( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i29( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_121 ( input DI1, DI0, B1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40004 SLICE_121_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_121_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i35( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i34( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_123 ( input DI1, DI0, D1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_123_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_123_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i37( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i36( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_125 ( input DI1, DI0, C1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_125_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_125_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i39( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i38( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_126 ( input DI1, DI0, A1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_126_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_126_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i42( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i43( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_127 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_127_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_127_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i45( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i44( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_129_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_129_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i47( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i46( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_135 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_135_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_135_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i45 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i46 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_137 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_137_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_137_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i43 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i44 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_139 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 SLICE_139_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_139_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i41 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i42 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_141 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_141_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_141_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i39 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i40 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_143 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_143_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_143_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i37 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i38 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_145 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_145_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_145_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i35 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i36 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_147 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_147_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_147_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i33 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i34 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_149 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_149_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_149_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_151 ( input DI1, DI0, A1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_151_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_151_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_153 ( input DI1, DI0, B1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 SLICE_153_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_153_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_155 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_155_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_155_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_157 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_157_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_157_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_159 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_159_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_159_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_161 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_161_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_161_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_163 ( input DI1, DI0, A1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_163_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_163_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_165 ( input DI1, DI0, A1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 SLICE_165_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_165_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_167 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_167_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_167_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_169 ( input DI1, DI0, C1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_169_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_169_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_171 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_171_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_171_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_173 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_173_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_173_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_175 ( input DI1, DI0, B1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 SLICE_175_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_175_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_177 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_177_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_177_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_179 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_179_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_179_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_182 ( input D0, C0, B0, A0, output F0 );

  lut40025 i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40026 i40_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 i20_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i8_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40030 i38_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_186 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40032 i22_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i24_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_187 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40026 i42_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 i21_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_188 ( input D0, C0, B0, A0, output F0 );

  lut40035 i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 i39_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_190 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40037 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40026 i37_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i41_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 i17_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_194 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40041 \makeMusic/i364_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \makeMusic/i363_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_196 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40043 \makeMusic/i386_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \makeMusic/i385_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_198 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \makeMusic/i384_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \makeMusic/i383_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xB8B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_200 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \makeMusic/i382_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \makeMusic/i381_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_202 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \makeMusic/i380_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \makeMusic/i379_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_204 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \makeMusic/i378_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \makeMusic/i377_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_206 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40043 \makeMusic/i376_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \makeMusic/i375_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_208 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40016 \makeMusic/i374_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \makeMusic/i373_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_210 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40050 \makeMusic/pitch/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \makeMusic/pitch/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_211 ( input C0, B0, output F0 );
  wire   GNDI;

  lut40052 \makeMusic/pitch/i950_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_212 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40053 \makeMusic/pitch/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \makeMusic/pitch/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_213 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40054 \makeMusic/pitch/i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \makeMusic/pitch/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_214 ( input D1, C1, B1, A1, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40056 \makeMusic/pitch/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \makeMusic/pitch/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x7D7D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_216 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40058 \makeMusic/pitch/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \makeMusic/pitch/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_218 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40060 \makeMusic/pitch/i1204_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \makeMusic/pitch/i6_4_lut_adj_69 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_219 ( input DI1, D1, C1, B1, A1, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40023 \makeMusic/i421_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40062 \makeMusic/pitch/i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_220 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40063 \makeMusic/howLong/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40034 \makeMusic/howLong/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_221 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40026 \makeMusic/howLong/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40064 \makeMusic/howLong/i5_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x77DD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_222 ( input D0, C0, B0, A0, output F0 );

  lut40059 \makeMusic/howLong/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_223 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40065 \makeMusic/howLong/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40040 \makeMusic/howLong/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_224 ( input D1, C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40066 \makeMusic/howLong/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40067 \makeMusic/howLong/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xBFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x5FF5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_226 ( input D0, C0, B0, A0, output F0 );

  lut40068 \makeMusic/howLong/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_227 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40036 \makeMusic/howLong/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40069 \makeMusic/howLong/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_228 ( input D0, C0, B0, A0, output F0 );

  lut40070 i46_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_229 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40071 i47_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_230 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40072 \makeMusic/howLong/i1212_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40073 \makeMusic/howLong/i938_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/howLong/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_231 ( input D0, C0, B0, A0, output F0 );

  lut40074 \makeMusic/howLong/i958_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_233 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40075 \makeMusic/howLong/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40068 \makeMusic/howLong/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_236 ( input D0, C0, B0, A0, output F0 );

  lut40076 \makeMusic/pitch/i954_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_237 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40077 \makeMusic/pitch/i1209_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40076 \makeMusic/pitch/i952_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/pitch/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_238 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40078 \makeMusic/pitch/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \makeMusic/pitch/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_240 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40079 \makeMusic/counter_1__I_0_i3_2_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_241 ( input DI1, D1, C1, B1, A1, C0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40080 \makeMusic/i366_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 \makeMusic/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/state_FSM_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x3B0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_244 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 \makeMusic/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \makeMusic/i442_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_246 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40084 \makeMusic/mux_24_i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_248 ( input DI1, B1, D0, C0, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40004 SLICE_248_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i47 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module SLICE_250 ( output F0 );
  wire   GNDI;

  lut40086 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_251 ( input D1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40087 \makeMusic/mux_24_i8_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 i14_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xCCAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_252 ( input D0, C0, B0, A0, output F0 );

  lut40088 i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_254 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 i11_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_255 ( input D0, C0, B0, A0, output F0 );

  lut40055 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_258 ( input D0, C0, B0, A0, output F0 );

  lut40040 i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_260 ( input D0, C0, B0, A0, output F0 );

  lut40088 i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_264 ( input D0, C0, B0, A0, output F0 );

  lut40025 i18_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_267 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \makeMusic/mux_24_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \makeMusic/mux_24_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_269 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40091 \makeMusic/mux_24_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \makeMusic/mux_24_i5_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xCACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_271 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \makeMusic/mux_24_i2_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \makeMusic/mux_24_i3_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xBB88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_273 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40094 \makeMusic/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \makeMusic/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20096 \makeMusic/state_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xF8FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xF444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20096 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module makeMusic_pitch_SLICE_275 ( input D0, C0, B0, A0, output F0 );

  lut40088 \makeMusic/pitch/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_276 ( input D0, C0, B0, A0, output F0 );

  lut40038 \makeMusic/pitch/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_277 ( input DI1, B1, C0, A0, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40097 \makeMusic/en_I_0_1_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \makeMusic/pitch/i1206_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \makeMusic/en_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_279 ( input D0, C0, B0, A0, output F0 );

  lut40099 \makeMusic/howLong/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_282 ( input DI1, D1, C1, B1, C0, B0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40100 SLICE_282_K1( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 i431_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 start_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_mult_113 ( input A7, A6, A5, A4, A3, A2, A1, A0, B1, B0, 
    output O9, O8, O7, O6, O5, O4, O3, O2, O1 );
  wire   GNDI;

  MAC16_B \makeMusic/mult_113 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), .C14(GNDI), 
    .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), .C8(GNDI), 
    .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), .C2(GNDI), 
    .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), .A12(GNDI), 
    .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(A7), .A6(A6), .A5(A5), 
    .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(GNDI), .B14(GNDI), 
    .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), .B9(GNDI), .B8(GNDI), 
    .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), .B3(GNDI), .B2(GNDI), .B1(B1), 
    .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), .D11(GNDI), 
    .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), .D5(GNDI), 
    .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), .AHOLD(GNDI), 
    .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), .IRSTBOT(GNDI), 
    .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), .OLOADBOT(GNDI), 
    .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), 
    .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), 
    .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(), .O21(), .O20(), 
    .O19(), .O18(), .O17(), .O16(), .O15(), .O14(), .O13(), .O12(), .O11(), 
    .O10(), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A1 => O1) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (A0 => O1) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B1 => O8) = (0:0:0,0:0:0);
    (B1 => O7) = (0:0:0,0:0:0);
    (B1 => O6) = (0:0:0,0:0:0);
    (B1 => O5) = (0:0:0,0:0:0);
    (B1 => O4) = (0:0:0,0:0:0);
    (B1 => O3) = (0:0:0,0:0:0);
    (B1 => O2) = (0:0:0,0:0:0);
    (B1 => O1) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
    (B0 => O1) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b10";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b10";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b1";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module makeMusic_howLong_mult_126 ( input A7, A6, A5, A4, A3, A2, A1, A0, B8, 
    B7, B5, B1, B0, output O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, 
    O5, O4, O3, O2, O1, O0 );
  wire   GNDI;

  MAC160102 \makeMusic/howLong/mult_126 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(GNDI), 
    .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), .B9(GNDI), 
    .B8(B8), .B7(B7), .B6(GNDI), .B5(B5), .B4(GNDI), .B3(GNDI), .B2(GNDI), 
    .B1(B1), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), 
    .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), 
    .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), 
    .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), 
    .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), 
    .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), 
    .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), 
    .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(), 
    .O21(), .O20(), .O19(), .O18(), .O17(), .O16(O16), .O15(O15), .O14(O14), 
    .O13(O13), .O12(O12), .O11(O11), .O10(O10), .O9(O9), .O8(O8), .O7(O7), 
    .O6(O6), .O5(O5), .O4(O4), .O3(O3), .O2(O2), .O1(O1), .O0(O0), .CO(), 
    .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A7 => O16) = (0:0:0,0:0:0);
    (A7 => O15) = (0:0:0,0:0:0);
    (A7 => O14) = (0:0:0,0:0:0);
    (A7 => O13) = (0:0:0,0:0:0);
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O16) = (0:0:0,0:0:0);
    (A6 => O15) = (0:0:0,0:0:0);
    (A6 => O14) = (0:0:0,0:0:0);
    (A6 => O13) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O16) = (0:0:0,0:0:0);
    (A5 => O15) = (0:0:0,0:0:0);
    (A5 => O14) = (0:0:0,0:0:0);
    (A5 => O13) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O16) = (0:0:0,0:0:0);
    (A4 => O15) = (0:0:0,0:0:0);
    (A4 => O14) = (0:0:0,0:0:0);
    (A4 => O13) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O16) = (0:0:0,0:0:0);
    (A3 => O15) = (0:0:0,0:0:0);
    (A3 => O14) = (0:0:0,0:0:0);
    (A3 => O13) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O16) = (0:0:0,0:0:0);
    (A2 => O15) = (0:0:0,0:0:0);
    (A2 => O14) = (0:0:0,0:0:0);
    (A2 => O13) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O16) = (0:0:0,0:0:0);
    (A1 => O15) = (0:0:0,0:0:0);
    (A1 => O14) = (0:0:0,0:0:0);
    (A1 => O13) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A1 => O1) = (0:0:0,0:0:0);
    (A0 => O16) = (0:0:0,0:0:0);
    (A0 => O15) = (0:0:0,0:0:0);
    (A0 => O14) = (0:0:0,0:0:0);
    (A0 => O13) = (0:0:0,0:0:0);
    (A0 => O12) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (A0 => O1) = (0:0:0,0:0:0);
    (A0 => O0) = (0:0:0,0:0:0);
    (B8 => O16) = (0:0:0,0:0:0);
    (B8 => O15) = (0:0:0,0:0:0);
    (B8 => O14) = (0:0:0,0:0:0);
    (B8 => O13) = (0:0:0,0:0:0);
    (B8 => O12) = (0:0:0,0:0:0);
    (B8 => O11) = (0:0:0,0:0:0);
    (B8 => O10) = (0:0:0,0:0:0);
    (B8 => O9) = (0:0:0,0:0:0);
    (B8 => O8) = (0:0:0,0:0:0);
    (B7 => O16) = (0:0:0,0:0:0);
    (B7 => O15) = (0:0:0,0:0:0);
    (B7 => O14) = (0:0:0,0:0:0);
    (B7 => O13) = (0:0:0,0:0:0);
    (B7 => O12) = (0:0:0,0:0:0);
    (B7 => O11) = (0:0:0,0:0:0);
    (B7 => O10) = (0:0:0,0:0:0);
    (B7 => O9) = (0:0:0,0:0:0);
    (B7 => O8) = (0:0:0,0:0:0);
    (B7 => O7) = (0:0:0,0:0:0);
    (B5 => O16) = (0:0:0,0:0:0);
    (B5 => O15) = (0:0:0,0:0:0);
    (B5 => O14) = (0:0:0,0:0:0);
    (B5 => O13) = (0:0:0,0:0:0);
    (B5 => O12) = (0:0:0,0:0:0);
    (B5 => O11) = (0:0:0,0:0:0);
    (B5 => O10) = (0:0:0,0:0:0);
    (B5 => O9) = (0:0:0,0:0:0);
    (B5 => O8) = (0:0:0,0:0:0);
    (B5 => O7) = (0:0:0,0:0:0);
    (B5 => O6) = (0:0:0,0:0:0);
    (B5 => O5) = (0:0:0,0:0:0);
    (B1 => O16) = (0:0:0,0:0:0);
    (B1 => O15) = (0:0:0,0:0:0);
    (B1 => O14) = (0:0:0,0:0:0);
    (B1 => O13) = (0:0:0,0:0:0);
    (B1 => O12) = (0:0:0,0:0:0);
    (B1 => O11) = (0:0:0,0:0:0);
    (B1 => O10) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B1 => O8) = (0:0:0,0:0:0);
    (B1 => O7) = (0:0:0,0:0:0);
    (B1 => O6) = (0:0:0,0:0:0);
    (B1 => O5) = (0:0:0,0:0:0);
    (B1 => O4) = (0:0:0,0:0:0);
    (B1 => O3) = (0:0:0,0:0:0);
    (B1 => O2) = (0:0:0,0:0:0);
    (B1 => O1) = (0:0:0,0:0:0);
    (B0 => O16) = (0:0:0,0:0:0);
    (B0 => O15) = (0:0:0,0:0:0);
    (B0 => O14) = (0:0:0,0:0:0);
    (B0 => O13) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
    (B0 => O1) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC160102 ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module makeMusic_howLong_mult_125 ( input A7, A6, A5, A4, A3, A2, A1, A0, B15, 
    B14, B13, B12, B11, B7, B6, B5, B4, output O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0 );
  wire   GNDI;

  MAC160102 \makeMusic/howLong/mult_125 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(GNDI), .B9(GNDI), .B8(GNDI), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(GNDI), .B2(GNDI), .B1(GNDI), .B0(GNDI), 
    .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), .D11(GNDI), .D10(GNDI), 
    .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), .D5(GNDI), .D4(GNDI), 
    .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), 
    .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), 
    .ORSTBOT(GNDI), .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), 
    .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), 
    .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), 
    .O26(), .O25(), .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), 
    .O17(), .O16(), .O15(), .O14(), .O13(), .O12(), .O11(O11), .O10(O10), 
    .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), .O2(O2), 
    .O1(O1), .O0(O0), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A1 => O1) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (A0 => O1) = (0:0:0,0:0:0);
    (A0 => O0) = (0:0:0,0:0:0);
    (B11 => O11) = (0:0:0,0:0:0);
    (B7 => O11) = (0:0:0,0:0:0);
    (B7 => O10) = (0:0:0,0:0:0);
    (B7 => O9) = (0:0:0,0:0:0);
    (B7 => O8) = (0:0:0,0:0:0);
    (B7 => O7) = (0:0:0,0:0:0);
    (B6 => O11) = (0:0:0,0:0:0);
    (B6 => O10) = (0:0:0,0:0:0);
    (B6 => O9) = (0:0:0,0:0:0);
    (B6 => O8) = (0:0:0,0:0:0);
    (B6 => O7) = (0:0:0,0:0:0);
    (B6 => O6) = (0:0:0,0:0:0);
    (B5 => O11) = (0:0:0,0:0:0);
    (B5 => O10) = (0:0:0,0:0:0);
    (B5 => O9) = (0:0:0,0:0:0);
    (B5 => O8) = (0:0:0,0:0:0);
    (B5 => O7) = (0:0:0,0:0:0);
    (B5 => O6) = (0:0:0,0:0:0);
    (B5 => O5) = (0:0:0,0:0:0);
    (B4 => O11) = (0:0:0,0:0:0);
    (B4 => O10) = (0:0:0,0:0:0);
    (B4 => O9) = (0:0:0,0:0:0);
    (B4 => O8) = (0:0:0,0:0:0);
    (B4 => O7) = (0:0:0,0:0:0);
    (B4 => O6) = (0:0:0,0:0:0);
    (B4 => O5) = (0:0:0,0:0:0);
    (B4 => O4) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi_newFlattenedMCUout_i0 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \spi/newFlattenedMCUout_i0 ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module sdi ( output PADDI, input sdi );
  wire   GNDI;

  BB_B_B \sdi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sdi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module sck ( output PADDI, input sck );
  wire   GNDI;

  BB_B_B \sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );
  wire   GNDI;

  BB_B_B \int_osc_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule
