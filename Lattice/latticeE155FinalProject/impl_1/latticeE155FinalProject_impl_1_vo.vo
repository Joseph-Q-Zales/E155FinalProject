
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Thu Dec  8 15:52:13 2022
// Netlist written on Thu Dec  8 15:52:21 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( ce, sdi, sck, reset, makingMusic, pwm );
  input  ce, sdi, sck, reset;
  output makingMusic, pwm;
  wire   \tuner.pitch.n133[0] , \tuner.pitch.n4613 , \tuner.pitch.counter[0] , 
         VCC_net, \tuner.pitch.counter_31__N_342 , int_osc, 
         \tuner.pitch.n2764 , \tuner.pitch.n133[31] , \tuner.pitch.n4712 , 
         \tuner.pitch.n2794 , \tuner.pitch.counter[31] , 
         \tuner.pitch.n133[30] , \tuner.pitch.n133[29] , \tuner.pitch.n4709 , 
         \tuner.pitch.counter[30] , \tuner.pitch.n2792 , 
         \tuner.pitch.counter[29] , \tuner.pitch.n133[28] , 
         \tuner.pitch.n133[27] , \tuner.pitch.n4706 , 
         \tuner.pitch.counter[28] , \tuner.pitch.n2790 , 
         \tuner.pitch.counter[27] , \tuner.pitch.n133[26] , 
         \tuner.pitch.n133[25] , \tuner.pitch.n4703 , 
         \tuner.pitch.counter[26] , \tuner.pitch.n2788 , 
         \tuner.pitch.counter[25] , \tuner.pitch.n133[24] , 
         \tuner.pitch.n133[23] , \tuner.pitch.n4700 , 
         \tuner.pitch.counter[24] , \tuner.pitch.n2786 , 
         \tuner.pitch.counter[23] , \tuner.pitch.n133[22] , 
         \tuner.pitch.n133[21] , \tuner.pitch.n4697 , 
         \tuner.pitch.counter[22] , \tuner.pitch.n2784 , 
         \tuner.pitch.counter[21] , \tuner.pitch.n133[20] , 
         \tuner.pitch.n133[19] , \tuner.pitch.n4694 , 
         \tuner.pitch.counter[20] , \tuner.pitch.n2782 , 
         \tuner.pitch.counter[19] , \tuner.pitch.n133[18] , 
         \tuner.pitch.n133[17] , \tuner.pitch.n4691 , 
         \tuner.pitch.counter[18] , \tuner.pitch.n2780 , 
         \tuner.pitch.counter[17] , \tuner.pitch.n133[16] , 
         \tuner.pitch.n133[15] , \tuner.pitch.n4688 , 
         \tuner.pitch.counter[16] , \tuner.pitch.n2778 , 
         \tuner.pitch.counter[15] , \tuner.pitch.n133[14] , 
         \tuner.pitch.n133[13] , \tuner.pitch.n4685 , 
         \tuner.pitch.counter[14] , \tuner.pitch.n2776 , 
         \tuner.pitch.counter[13] , \tuner.pitch.n133[12] , 
         \tuner.pitch.n133[11] , \tuner.pitch.n4682 , 
         \tuner.pitch.counter[12] , \tuner.pitch.n2774 , 
         \tuner.pitch.counter[11] , \tuner.pitch.n133[10] , 
         \tuner.pitch.n133[9] , \tuner.pitch.n4679 , \tuner.pitch.counter[10] , 
         \tuner.pitch.n2772 , \tuner.pitch.counter[9] , \tuner.pitch.n133[8] , 
         \tuner.pitch.n133[7] , \tuner.pitch.n4676 , \tuner.pitch.counter[8] , 
         \tuner.pitch.n2770 , \tuner.pitch.counter[7] , \tuner.pitch.n133[6] , 
         \tuner.pitch.n133[5] , \tuner.pitch.n4673 , \tuner.pitch.counter[6] , 
         \tuner.pitch.n2768 , \tuner.pitch.counter[5] , \tuner.pitch.n133[4] , 
         \tuner.pitch.n133[3] , \tuner.pitch.n4670 , \tuner.pitch.counter[4] , 
         \tuner.pitch.n2766 , \tuner.pitch.counter[3] , \tuner.pitch.n133[2] , 
         \tuner.pitch.n133[1] , \tuner.pitch.n4667 , \tuner.pitch.counter[2] , 
         \tuner.pitch.counter[1] , \tuner.howLong.n133[31] , 
         \tuner.howLong.n4664 , \tuner.howLong.n2827 , 
         \tuner.howLong.counter[31] , \tuner.howLong.counter_31__N_277 , 
         \tuner.howLong.n133[30] , \tuner.howLong.n133[29] , 
         \tuner.howLong.n4661 , \tuner.howLong.counter[30] , 
         \tuner.howLong.n2825 , \tuner.howLong.counter[29] , 
         \tuner.howLong.n133[28] , \tuner.howLong.n133[27] , 
         \tuner.howLong.n4658 , \tuner.howLong.counter[28] , 
         \tuner.howLong.n2823 , \tuner.howLong.counter[27] , 
         \tuner.howLong.n133[26] , \tuner.howLong.n133[25] , 
         \tuner.howLong.n4655 , \tuner.howLong.counter[26] , 
         \tuner.howLong.n2821 , \tuner.howLong.counter[25] , 
         \tuner.howLong.n133[24] , \tuner.howLong.n133[23] , 
         \tuner.howLong.n4652 , \tuner.howLong.counter[24] , 
         \tuner.howLong.n2819 , \tuner.howLong.counter[23] , 
         \tuner.howLong.n133[22] , \tuner.howLong.n133[21] , 
         \tuner.howLong.n4649 , \tuner.howLong.counter[22] , 
         \tuner.howLong.n2817 , \tuner.howLong.counter[21] , 
         \tuner.howLong.n133[20] , \tuner.howLong.n133[19] , 
         \tuner.howLong.n4646 , \tuner.howLong.counter[20] , 
         \tuner.howLong.n2815 , \tuner.howLong.counter[19] , 
         \tuner.howLong.n133[18] , \tuner.howLong.n133[17] , 
         \tuner.howLong.n4643 , \tuner.howLong.counter[18] , 
         \tuner.howLong.n2813 , \tuner.howLong.counter[17] , 
         \tuner.howLong.n133[16] , \tuner.howLong.n133[15] , 
         \tuner.howLong.n4640 , \tuner.howLong.counter[16] , 
         \tuner.howLong.n2811 , \tuner.howLong.counter[15] , 
         \tuner.howLong.n133[14] , \tuner.howLong.n133[13] , 
         \tuner.howLong.n4637 , \tuner.howLong.counter[14] , 
         \tuner.howLong.n2809 , \tuner.howLong.counter[13] , 
         \tuner.howLong.n133[12] , \tuner.howLong.n133[11] , 
         \tuner.howLong.n4634 , \tuner.howLong.counter[12] , 
         \tuner.howLong.n2807 , \tuner.howLong.counter[11] , 
         \tuner.howLong.n133[10] , \tuner.howLong.n133[9] , 
         \tuner.howLong.n4631 , \tuner.howLong.counter[10] , 
         \tuner.howLong.n2805 , \tuner.howLong.counter[9] , 
         \tuner.howLong.n133[8] , \tuner.howLong.n133[7] , 
         \tuner.howLong.n4628 , \tuner.howLong.counter[8] , 
         \tuner.howLong.n2803 , \tuner.howLong.counter[7] , 
         \tuner.howLong.n133[6] , \tuner.howLong.n133[5] , 
         \tuner.howLong.n4625 , \tuner.howLong.counter[6] , 
         \tuner.howLong.n2801 , \tuner.howLong.counter[5] , 
         \tuner.howLong.n133[4] , \tuner.howLong.n133[3] , 
         \tuner.howLong.n4622 , \tuner.howLong.counter[4] , 
         \tuner.howLong.n2799 , \tuner.howLong.counter[3] , 
         \tuner.howLong.n133[2] , \tuner.howLong.n133[1] , 
         \tuner.howLong.n4619 , \tuner.howLong.counter[2] , 
         \tuner.howLong.n2797 , \tuner.howLong.counter[1] , 
         \tuner.howLong.n133[0] , \tuner.howLong.n4616 , 
         \tuner.howLong.counter[0] , 
         \newFlattenedMCUout[1].sig_001.FeedThruLUT , 
         \spi.newFlattenedMCUout[2]_2.sig_000.FeedThruLUT , 
         \newFlattenedMCUout[1] , \spi.newFlattenedMCUout[2]_2 , sck_c, 
         \spi.newFlattenedMCUout[3]_2 , 
         \newFlattenedMCUout[38].sig_002.FeedThruLUT , 
         \newFlattenedMCUout[38] , \newFlattenedMCUout[39] , 
         \newFlattenedMCUout[36].sig_004.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_003.FeedThruLUT , 
         \newFlattenedMCUout[36] , \newFlattenedMCUout[37] , 
         \newFlattenedMCUout[34].sig_006.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_005.FeedThruLUT , 
         \newFlattenedMCUout[34] , \newFlattenedMCUout[35] , 
         \newFlattenedMCUout[32].sig_008.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_007.FeedThruLUT , 
         \newFlattenedMCUout[32] , \newFlattenedMCUout[33] , 
         \newFlattenedMCUout[30].sig_010.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_009.FeedThruLUT , 
         \newFlattenedMCUout[30] , \newFlattenedMCUout[31] , 
         \newFlattenedMCUout[28].sig_012.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_011.FeedThruLUT , 
         \newFlattenedMCUout[28] , \newFlattenedMCUout[29] , 
         \newFlattenedMCUout[26].sig_014.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_013.FeedThruLUT , 
         \newFlattenedMCUout[26] , \newFlattenedMCUout[27] , 
         \newFlattenedMCUout[24].sig_016.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_015.FeedThruLUT , 
         \newFlattenedMCUout[24] , \newFlattenedMCUout[25] , 
         \newFlattenedMCUout[22].sig_018.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_017.FeedThruLUT , 
         \newFlattenedMCUout[22] , \newFlattenedMCUout[23] , 
         \newFlattenedMCUout[20].sig_020.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_019.FeedThruLUT , 
         \newFlattenedMCUout[20] , \newFlattenedMCUout[21] , 
         \newFlattenedMCUout[18].sig_022.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_021.FeedThruLUT , 
         \newFlattenedMCUout[18] , \newFlattenedMCUout[19] , 
         \newFlattenedMCUout[16].sig_024.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_023.FeedThruLUT , 
         \newFlattenedMCUout[16] , \newFlattenedMCUout[17] , 
         \newFlattenedMCUout[14].sig_026.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_025.FeedThruLUT , 
         \newFlattenedMCUout[14] , \newFlattenedMCUout[15] , 
         \newFlattenedMCUout[12].sig_028.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_027.FeedThruLUT , 
         \newFlattenedMCUout[12] , \newFlattenedMCUout[13] , 
         \newFlattenedMCUout[10].sig_030.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_029.FeedThruLUT , 
         \newFlattenedMCUout[10] , \newFlattenedMCUout[11] , 
         \newFlattenedMCUout[8].sig_032.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_031.FeedThruLUT , \newFlattenedMCUout[8] , 
         \newFlattenedMCUout[9] , \newFlattenedMCUout[0].sig_038.FeedThruLUT , 
         \spi.newFlattenedMCUout[7]_2.sig_033.FeedThruLUT , 
         \newFlattenedMCUout[0] , \spi.newFlattenedMCUout[7]_2 , 
         \spi.newFlattenedMCUout[5]_2.sig_035.FeedThruLUT , 
         \spi.newFlattenedMCUout[6]_2.sig_034.FeedThruLUT , 
         \spi.newFlattenedMCUout[5]_2 , \spi.newFlattenedMCUout[6]_2 , 
         \spi.newFlattenedMCUout[3]_2.sig_037.FeedThruLUT , 
         \spi.newFlattenedMCUout[4]_2.sig_036.FeedThruLUT , 
         \spi.newFlattenedMCUout[4]_2 , \tuner.n4313 , \tuner.n4307 , 
         \tuner.n4310 , \tuner.n2009 , \freqThreshold0[1] , 
         \freqThreshold1[1] , \tuner.n4304 , \freqThreshold0[0] , 
         \freqThreshold1[0] , n2141, \tuner.freqThreshold[0] , 
         \tuner.freqThreshold[1] , \tuner.n3043 , \tuner.n2056 , \tuner.n4 , 
         nextstate_5__N_126, start, \tuner.nextstate_5__N_125 , reset_c, 
         nextstate_5__N_121, \tuner.n424[1].sig_040.FeedThruLUT , 
         \nextstate_5__N_121.sig_039.FeedThruLUT , \tuner.n424[1] , n2167, 
         \tuner.n424[2] , \tuner.n4361 , \tuner.n3647 , \tuner.n4358 , 
         \freqThreshold0[14] , \freqThreshold1[14] , \tuner.n3646 , 
         \tuner.n3808 , \tuner.freqThreshold[15] , \tuner.freqThreshold[14] , 
         \tuner.n4379 , \tuner.n4373 , \tuner.n4376 , \freqThreshold0[12] , 
         \freqThreshold1[12] , \tuner.n4370 , \freqThreshold0[13] , 
         \freqThreshold1[13] , \tuner.freqThreshold[13] , 
         \tuner.freqThreshold[12] , \tuner.n4403 , \tuner.n4397 , 
         \tuner.n4400 , \freqThreshold0[10] , \freqThreshold1[10] , 
         \tuner.n4394 , \freqThreshold1[11] , \freqThreshold0[11] , 
         \tuner.freqThreshold[11] , \tuner.freqThreshold[10] , \tuner.n4385 , 
         \tuner.n4391 , \tuner.n4382 , \freqThreshold0[8] , 
         \freqThreshold1[8] , \tuner.n4388 , \freqThreshold0[9] , 
         \freqThreshold1[9] , \tuner.freqThreshold[9] , 
         \tuner.freqThreshold[8] , \tuner.n4355 , \tuner.n4367 , \tuner.n4352 , 
         \freqThreshold0[6] , \freqThreshold1[6] , \tuner.n4364 , 
         \freqThreshold0[7] , \freqThreshold1[7] , \tuner.freqThreshold[7] , 
         \tuner.freqThreshold[6] , \tuner.n3668 , \tuner.n4349 , \tuner.n3667 , 
         \tuner.n3823 , \tuner.n4346 , \freqThreshold1[5] , 
         \freqThreshold0[5] , \tuner.freqThreshold[5] , 
         \tuner.freqThreshold[4] , \tuner.n4325 , \tuner.n4331 , \tuner.n4322 , 
         \freqThreshold0[2] , \freqThreshold1[2] , \tuner.n4328 , 
         \freqThreshold1[3] , \freqThreshold0[3] , \tuner.freqThreshold[3] , 
         \tuner.freqThreshold[2] , \tuner.n524[1] , \counter[0] , 
         \tuner.counter[1]_2 , n2169, n2164, n2165, n1986, \durThreshold[8] , 
         \durThreshold[7] , n1987, n2162, n2163, \durThreshold[11] , 
         \durThreshold[9] , n1985, n2160, n2161, n1971, \durThreshold[13] , 
         \durThreshold[12] , n2158, n2159, \durThreshold[16] , 
         \durThreshold[15] , n2156, n2157, \durThreshold[20] , 
         \durThreshold[17] , n2033, n2154, n2155, \durThreshold[22] , 
         \durThreshold[21] , n2145, \tuner.n3409 , makingMusic_c, lastCE, ce_c, 
         n2152, \durThreshold[24] , \n1985$n0 , \tuner.n4337 , \tuner.n3820 , 
         \tuner.n3664 , \tuner.n4334 , \durThresh1[19] , \durThresh0[19] , 
         \tuner.durThreshold[19] , \tuner.durThreshold[18] , 
         \tuner.pitch.pwm_N_346 , \tuner.pitch.n30 , \tuner.pitch.n29 , 
         \tuner.pitch.n3048 , pwm_c, 
         \newFlattenedMCUout[1].sig_076.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_042.FeedThruLUT , 
         \enabler.flattenedMCUout_39__N_41 , \flattenedMCUout[0] , 
         \flattenedMCUout[1] , \newFlattenedMCUout[38].sig_045.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_044.FeedThruLUT , \flattenedMCUout[39] , 
         \flattenedMCUout[38] , \newFlattenedMCUout[36].sig_047.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_046.FeedThruLUT , \flattenedMCUout[37] , 
         \flattenedMCUout[36] , \newFlattenedMCUout[34].sig_049.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_048.FeedThruLUT , \flattenedMCUout[35] , 
         \flattenedMCUout[34] , \newFlattenedMCUout[32].sig_051.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_050.FeedThruLUT , \flattenedMCUout[33] , 
         \flattenedMCUout[32] , \newFlattenedMCUout[30].sig_053.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_052.FeedThruLUT , \flattenedMCUout[31] , 
         \flattenedMCUout[30] , \newFlattenedMCUout[28].sig_055.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_054.FeedThruLUT , \flattenedMCUout[29] , 
         \flattenedMCUout[28] , \newFlattenedMCUout[26].sig_057.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_056.FeedThruLUT , \flattenedMCUout[27] , 
         \flattenedMCUout[26] , \newFlattenedMCUout[24].sig_059.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_058.FeedThruLUT , \flattenedMCUout[25] , 
         \flattenedMCUout[24] , \newFlattenedMCUout[22].sig_061.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_060.FeedThruLUT , \flattenedMCUout[23] , 
         \flattenedMCUout[22] , \newFlattenedMCUout[20].sig_063.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_062.FeedThruLUT , \flattenedMCUout[21] , 
         \flattenedMCUout[20] , \newFlattenedMCUout[18].sig_065.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_064.FeedThruLUT , \flattenedMCUout[19] , 
         \flattenedMCUout[18] , \newFlattenedMCUout[16].sig_067.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_066.FeedThruLUT , \flattenedMCUout[17] , 
         \flattenedMCUout[16] , \newFlattenedMCUout[14].sig_069.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_068.FeedThruLUT , \flattenedMCUout[15] , 
         \flattenedMCUout[14] , \newFlattenedMCUout[12].sig_071.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_070.FeedThruLUT , \flattenedMCUout[13] , 
         \flattenedMCUout[12] , \newFlattenedMCUout[10].sig_073.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_072.FeedThruLUT , 
         \enabler.flattenedMCUout[11] , \enabler.flattenedMCUout[10] , 
         \newFlattenedMCUout[8].sig_075.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_074.FeedThruLUT , 
         \enabler.flattenedMCUout[9] , \enabler.flattenedMCUout[8] , 
         \ce_c.sig_077.FeedThruLUT , \enabler.twoAgoCE , \durThresh1[15] , 
         \tuner.n4340 , \durThresh0[15] , \tuner.n2011 , \tuner.n3745 , 
         \durThresh2[15] , \durThresh0[20] , \tuner.n4316 , \durThresh1[20] , 
         \tuner.n3744 , \durThresh2[20] , \durThresh2[19] , \tuner.n3740 , 
         \tuner.n3712 , \durThresh2[23] , \tuner.n4298 , nextstate_5__N_124, 
         n66, \tuner.n3691 , n7, \tuner.n3836 , \freqThreshold3[10] , 
         \tuner.n3778 , \freqThreshold3[0] , \tuner.n3722 , 
         \freqThreshold2[0] , \freqThreshold2[10] , \tuner.n3771 , 
         \freqThreshold2[11] , \tuner.n3764 , \freqThreshold2[9] , 
         \tuner.n3763 , \freqThreshold2[8] , \tuner.n3762 , 
         \freqThreshold2[12] , \tuner.n3761 , \freqThreshold2[13] , 
         \freqThreshold2[7] , \tuner.n3760 , \freqThreshold2[14] , 
         \tuner.n3759 , \tuner.n3758 , \freqThreshold2[6] , 
         \freqThreshold2[5] , \tuner.n3755 , n2620, n2626, \freqThreshold2[1] , 
         n2644, n2614, \freqThreshold3[1] , \tuner.n3730 , \tuner.n3757 , 
         n2636, n2558, n2638, \tuner.n3739 , \freqThreshold2[3] , 
         \tuner.n3738 , \freqThreshold2[2] , \tuner.rep , done, 
         \freqThreshold3[2] , \freqThreshold3[3] , n3068, \freqThreshold3[5] , 
         \freqThreshold3[6] , \freqThreshold3[14] , \freqThreshold3[7] , n2304, 
         \freqThreshold3[13] , \freqThreshold3[12] , \freqThreshold3[8] , 
         \freqThreshold3[9] , \freqThreshold3[11] , \tuner.pitch.n23 , 
         \tuner.pitch.n24 , \tuner.pitch.n21 , \tuner.pitch.n22 , 
         \tuner.pitch.n28 , \tuner.pitch.n27 , \tuner.pitch.n25 , 
         \tuner.pitch.n26 , \tuner.pitch.n20 , \tuner.pitch.n18 , 
         \tuner.pitch.n17 , \tuner.pitch.n19 , \tuner.howLong.n25 , 
         \tuner.howLong.n18 , \tuner.howLong.n30 , \tuner.howLong.n22 , 
         \tuner.howLong.n20 , \tuner.howLong.n19 , \tuner.howLong.n21 , 
         \tuner.howLong.n31 , \tuner.howLong.n24 , \tuner.howLong.n27 , 
         \tuner.howLong.n3051 , \tuner.howLong.n25_adj_348 , 
         \tuner.howLong.n26 , \tuner.howLong.n23 , \tuner.howLong.n24_adj_347 , 
         \tuner.howLong.counter_31__N_277$n1 , \durThresh1[23] , 
         \durThresh0[23] , \tuner.n424[2].sig_041.FeedThruLUT , \tuner.n2138 , 
         \tuner.n4301 , \tuner.durThreshold[23] , n5, \enabler.n2321 , 
         stopCountFlag, \enabler.twoAgoCE.sig_043.FeedThruLUT , n3342, sdi_c;

  tuner_pitch_SLICE_0 \tuner.pitch.SLICE_0 ( .DI1(\tuner.pitch.n133[0] ), 
    .D1(\tuner.pitch.n4613 ), .C1(\tuner.pitch.counter[0] ), .B1(VCC_net), 
    .LSR(\tuner.pitch.counter_31__N_342 ), .CLK(int_osc), 
    .CIN1(\tuner.pitch.n4613 ), .Q1(\tuner.pitch.counter[0] ), 
    .F1(\tuner.pitch.n133[0] ), .COUT1(\tuner.pitch.n2764 ), 
    .COUT0(\tuner.pitch.n4613 ));
  tuner_pitch_SLICE_1 \tuner.pitch.SLICE_1 ( .DI0(\tuner.pitch.n133[31] ), 
    .D1(\tuner.pitch.n4712 ), .D0(\tuner.pitch.n2794 ), 
    .C0(\tuner.pitch.counter[31] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2794 ), .CIN1(\tuner.pitch.n4712 ), 
    .Q0(\tuner.pitch.counter[31] ), .F0(\tuner.pitch.n133[31] ), 
    .COUT0(\tuner.pitch.n4712 ));
  tuner_pitch_SLICE_2 \tuner.pitch.SLICE_2 ( .DI1(\tuner.pitch.n133[30] ), 
    .DI0(\tuner.pitch.n133[29] ), .D1(\tuner.pitch.n4709 ), 
    .C1(\tuner.pitch.counter[30] ), .D0(\tuner.pitch.n2792 ), 
    .C0(\tuner.pitch.counter[29] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2792 ), .CIN1(\tuner.pitch.n4709 ), 
    .Q0(\tuner.pitch.counter[29] ), .Q1(\tuner.pitch.counter[30] ), 
    .F0(\tuner.pitch.n133[29] ), .F1(\tuner.pitch.n133[30] ), 
    .COUT1(\tuner.pitch.n2794 ), .COUT0(\tuner.pitch.n4709 ));
  tuner_pitch_SLICE_3 \tuner.pitch.SLICE_3 ( .DI1(\tuner.pitch.n133[28] ), 
    .DI0(\tuner.pitch.n133[27] ), .D1(\tuner.pitch.n4706 ), 
    .C1(\tuner.pitch.counter[28] ), .D0(\tuner.pitch.n2790 ), 
    .C0(\tuner.pitch.counter[27] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2790 ), .CIN1(\tuner.pitch.n4706 ), 
    .Q0(\tuner.pitch.counter[27] ), .Q1(\tuner.pitch.counter[28] ), 
    .F0(\tuner.pitch.n133[27] ), .F1(\tuner.pitch.n133[28] ), 
    .COUT1(\tuner.pitch.n2792 ), .COUT0(\tuner.pitch.n4706 ));
  tuner_pitch_SLICE_4 \tuner.pitch.SLICE_4 ( .DI1(\tuner.pitch.n133[26] ), 
    .DI0(\tuner.pitch.n133[25] ), .D1(\tuner.pitch.n4703 ), 
    .C1(\tuner.pitch.counter[26] ), .D0(\tuner.pitch.n2788 ), 
    .C0(\tuner.pitch.counter[25] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2788 ), .CIN1(\tuner.pitch.n4703 ), 
    .Q0(\tuner.pitch.counter[25] ), .Q1(\tuner.pitch.counter[26] ), 
    .F0(\tuner.pitch.n133[25] ), .F1(\tuner.pitch.n133[26] ), 
    .COUT1(\tuner.pitch.n2790 ), .COUT0(\tuner.pitch.n4703 ));
  tuner_pitch_SLICE_5 \tuner.pitch.SLICE_5 ( .DI1(\tuner.pitch.n133[24] ), 
    .DI0(\tuner.pitch.n133[23] ), .D1(\tuner.pitch.n4700 ), 
    .C1(\tuner.pitch.counter[24] ), .D0(\tuner.pitch.n2786 ), 
    .C0(\tuner.pitch.counter[23] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2786 ), .CIN1(\tuner.pitch.n4700 ), 
    .Q0(\tuner.pitch.counter[23] ), .Q1(\tuner.pitch.counter[24] ), 
    .F0(\tuner.pitch.n133[23] ), .F1(\tuner.pitch.n133[24] ), 
    .COUT1(\tuner.pitch.n2788 ), .COUT0(\tuner.pitch.n4700 ));
  tuner_pitch_SLICE_6 \tuner.pitch.SLICE_6 ( .DI1(\tuner.pitch.n133[22] ), 
    .DI0(\tuner.pitch.n133[21] ), .D1(\tuner.pitch.n4697 ), 
    .C1(\tuner.pitch.counter[22] ), .D0(\tuner.pitch.n2784 ), 
    .C0(\tuner.pitch.counter[21] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2784 ), .CIN1(\tuner.pitch.n4697 ), 
    .Q0(\tuner.pitch.counter[21] ), .Q1(\tuner.pitch.counter[22] ), 
    .F0(\tuner.pitch.n133[21] ), .F1(\tuner.pitch.n133[22] ), 
    .COUT1(\tuner.pitch.n2786 ), .COUT0(\tuner.pitch.n4697 ));
  tuner_pitch_SLICE_7 \tuner.pitch.SLICE_7 ( .DI1(\tuner.pitch.n133[20] ), 
    .DI0(\tuner.pitch.n133[19] ), .D1(\tuner.pitch.n4694 ), 
    .C1(\tuner.pitch.counter[20] ), .D0(\tuner.pitch.n2782 ), 
    .C0(\tuner.pitch.counter[19] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2782 ), .CIN1(\tuner.pitch.n4694 ), 
    .Q0(\tuner.pitch.counter[19] ), .Q1(\tuner.pitch.counter[20] ), 
    .F0(\tuner.pitch.n133[19] ), .F1(\tuner.pitch.n133[20] ), 
    .COUT1(\tuner.pitch.n2784 ), .COUT0(\tuner.pitch.n4694 ));
  tuner_pitch_SLICE_8 \tuner.pitch.SLICE_8 ( .DI1(\tuner.pitch.n133[18] ), 
    .DI0(\tuner.pitch.n133[17] ), .D1(\tuner.pitch.n4691 ), 
    .C1(\tuner.pitch.counter[18] ), .D0(\tuner.pitch.n2780 ), 
    .C0(\tuner.pitch.counter[17] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2780 ), .CIN1(\tuner.pitch.n4691 ), 
    .Q0(\tuner.pitch.counter[17] ), .Q1(\tuner.pitch.counter[18] ), 
    .F0(\tuner.pitch.n133[17] ), .F1(\tuner.pitch.n133[18] ), 
    .COUT1(\tuner.pitch.n2782 ), .COUT0(\tuner.pitch.n4691 ));
  tuner_pitch_SLICE_9 \tuner.pitch.SLICE_9 ( .DI1(\tuner.pitch.n133[16] ), 
    .DI0(\tuner.pitch.n133[15] ), .D1(\tuner.pitch.n4688 ), 
    .C1(\tuner.pitch.counter[16] ), .D0(\tuner.pitch.n2778 ), 
    .C0(\tuner.pitch.counter[15] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2778 ), .CIN1(\tuner.pitch.n4688 ), 
    .Q0(\tuner.pitch.counter[15] ), .Q1(\tuner.pitch.counter[16] ), 
    .F0(\tuner.pitch.n133[15] ), .F1(\tuner.pitch.n133[16] ), 
    .COUT1(\tuner.pitch.n2780 ), .COUT0(\tuner.pitch.n4688 ));
  tuner_pitch_SLICE_10 \tuner.pitch.SLICE_10 ( .DI1(\tuner.pitch.n133[14] ), 
    .DI0(\tuner.pitch.n133[13] ), .D1(\tuner.pitch.n4685 ), 
    .C1(\tuner.pitch.counter[14] ), .D0(\tuner.pitch.n2776 ), 
    .C0(\tuner.pitch.counter[13] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2776 ), .CIN1(\tuner.pitch.n4685 ), 
    .Q0(\tuner.pitch.counter[13] ), .Q1(\tuner.pitch.counter[14] ), 
    .F0(\tuner.pitch.n133[13] ), .F1(\tuner.pitch.n133[14] ), 
    .COUT1(\tuner.pitch.n2778 ), .COUT0(\tuner.pitch.n4685 ));
  tuner_pitch_SLICE_11 \tuner.pitch.SLICE_11 ( .DI1(\tuner.pitch.n133[12] ), 
    .DI0(\tuner.pitch.n133[11] ), .D1(\tuner.pitch.n4682 ), 
    .C1(\tuner.pitch.counter[12] ), .D0(\tuner.pitch.n2774 ), 
    .C0(\tuner.pitch.counter[11] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2774 ), .CIN1(\tuner.pitch.n4682 ), 
    .Q0(\tuner.pitch.counter[11] ), .Q1(\tuner.pitch.counter[12] ), 
    .F0(\tuner.pitch.n133[11] ), .F1(\tuner.pitch.n133[12] ), 
    .COUT1(\tuner.pitch.n2776 ), .COUT0(\tuner.pitch.n4682 ));
  tuner_pitch_SLICE_12 \tuner.pitch.SLICE_12 ( .DI1(\tuner.pitch.n133[10] ), 
    .DI0(\tuner.pitch.n133[9] ), .D1(\tuner.pitch.n4679 ), 
    .C1(\tuner.pitch.counter[10] ), .D0(\tuner.pitch.n2772 ), 
    .C0(\tuner.pitch.counter[9] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2772 ), .CIN1(\tuner.pitch.n4679 ), 
    .Q0(\tuner.pitch.counter[9] ), .Q1(\tuner.pitch.counter[10] ), 
    .F0(\tuner.pitch.n133[9] ), .F1(\tuner.pitch.n133[10] ), 
    .COUT1(\tuner.pitch.n2774 ), .COUT0(\tuner.pitch.n4679 ));
  tuner_pitch_SLICE_13 \tuner.pitch.SLICE_13 ( .DI1(\tuner.pitch.n133[8] ), 
    .DI0(\tuner.pitch.n133[7] ), .D1(\tuner.pitch.n4676 ), 
    .C1(\tuner.pitch.counter[8] ), .D0(\tuner.pitch.n2770 ), 
    .C0(\tuner.pitch.counter[7] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2770 ), .CIN1(\tuner.pitch.n4676 ), 
    .Q0(\tuner.pitch.counter[7] ), .Q1(\tuner.pitch.counter[8] ), 
    .F0(\tuner.pitch.n133[7] ), .F1(\tuner.pitch.n133[8] ), 
    .COUT1(\tuner.pitch.n2772 ), .COUT0(\tuner.pitch.n4676 ));
  tuner_pitch_SLICE_14 \tuner.pitch.SLICE_14 ( .DI1(\tuner.pitch.n133[6] ), 
    .DI0(\tuner.pitch.n133[5] ), .D1(\tuner.pitch.n4673 ), 
    .C1(\tuner.pitch.counter[6] ), .D0(\tuner.pitch.n2768 ), 
    .C0(\tuner.pitch.counter[5] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2768 ), .CIN1(\tuner.pitch.n4673 ), 
    .Q0(\tuner.pitch.counter[5] ), .Q1(\tuner.pitch.counter[6] ), 
    .F0(\tuner.pitch.n133[5] ), .F1(\tuner.pitch.n133[6] ), 
    .COUT1(\tuner.pitch.n2770 ), .COUT0(\tuner.pitch.n4673 ));
  tuner_pitch_SLICE_15 \tuner.pitch.SLICE_15 ( .DI1(\tuner.pitch.n133[4] ), 
    .DI0(\tuner.pitch.n133[3] ), .D1(\tuner.pitch.n4670 ), 
    .C1(\tuner.pitch.counter[4] ), .D0(\tuner.pitch.n2766 ), 
    .C0(\tuner.pitch.counter[3] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2766 ), .CIN1(\tuner.pitch.n4670 ), 
    .Q0(\tuner.pitch.counter[3] ), .Q1(\tuner.pitch.counter[4] ), 
    .F0(\tuner.pitch.n133[3] ), .F1(\tuner.pitch.n133[4] ), 
    .COUT1(\tuner.pitch.n2768 ), .COUT0(\tuner.pitch.n4670 ));
  tuner_pitch_SLICE_16 \tuner.pitch.SLICE_16 ( .DI1(\tuner.pitch.n133[2] ), 
    .DI0(\tuner.pitch.n133[1] ), .D1(\tuner.pitch.n4667 ), 
    .C1(\tuner.pitch.counter[2] ), .D0(\tuner.pitch.n2764 ), 
    .C0(\tuner.pitch.counter[1] ), .LSR(\tuner.pitch.counter_31__N_342 ), 
    .CLK(int_osc), .CIN0(\tuner.pitch.n2764 ), .CIN1(\tuner.pitch.n4667 ), 
    .Q0(\tuner.pitch.counter[1] ), .Q1(\tuner.pitch.counter[2] ), 
    .F0(\tuner.pitch.n133[1] ), .F1(\tuner.pitch.n133[2] ), 
    .COUT1(\tuner.pitch.n2766 ), .COUT0(\tuner.pitch.n4667 ));
  tuner_howLong_SLICE_17 \tuner.howLong.SLICE_17 ( 
    .DI0(\tuner.howLong.n133[31] ), .D1(\tuner.howLong.n4664 ), 
    .D0(\tuner.howLong.n2827 ), .C0(\tuner.howLong.counter[31] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2827 ), .CIN1(\tuner.howLong.n4664 ), 
    .Q0(\tuner.howLong.counter[31] ), .F0(\tuner.howLong.n133[31] ), 
    .COUT0(\tuner.howLong.n4664 ));
  tuner_howLong_SLICE_18 \tuner.howLong.SLICE_18 ( 
    .DI1(\tuner.howLong.n133[30] ), .DI0(\tuner.howLong.n133[29] ), 
    .D1(\tuner.howLong.n4661 ), .C1(\tuner.howLong.counter[30] ), 
    .D0(\tuner.howLong.n2825 ), .C0(\tuner.howLong.counter[29] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2825 ), .CIN1(\tuner.howLong.n4661 ), 
    .Q0(\tuner.howLong.counter[29] ), .Q1(\tuner.howLong.counter[30] ), 
    .F0(\tuner.howLong.n133[29] ), .F1(\tuner.howLong.n133[30] ), 
    .COUT1(\tuner.howLong.n2827 ), .COUT0(\tuner.howLong.n4661 ));
  tuner_howLong_SLICE_19 \tuner.howLong.SLICE_19 ( 
    .DI1(\tuner.howLong.n133[28] ), .DI0(\tuner.howLong.n133[27] ), 
    .D1(\tuner.howLong.n4658 ), .C1(\tuner.howLong.counter[28] ), 
    .D0(\tuner.howLong.n2823 ), .C0(\tuner.howLong.counter[27] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2823 ), .CIN1(\tuner.howLong.n4658 ), 
    .Q0(\tuner.howLong.counter[27] ), .Q1(\tuner.howLong.counter[28] ), 
    .F0(\tuner.howLong.n133[27] ), .F1(\tuner.howLong.n133[28] ), 
    .COUT1(\tuner.howLong.n2825 ), .COUT0(\tuner.howLong.n4658 ));
  tuner_howLong_SLICE_20 \tuner.howLong.SLICE_20 ( 
    .DI1(\tuner.howLong.n133[26] ), .DI0(\tuner.howLong.n133[25] ), 
    .D1(\tuner.howLong.n4655 ), .C1(\tuner.howLong.counter[26] ), 
    .D0(\tuner.howLong.n2821 ), .C0(\tuner.howLong.counter[25] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2821 ), .CIN1(\tuner.howLong.n4655 ), 
    .Q0(\tuner.howLong.counter[25] ), .Q1(\tuner.howLong.counter[26] ), 
    .F0(\tuner.howLong.n133[25] ), .F1(\tuner.howLong.n133[26] ), 
    .COUT1(\tuner.howLong.n2823 ), .COUT0(\tuner.howLong.n4655 ));
  tuner_howLong_SLICE_21 \tuner.howLong.SLICE_21 ( 
    .DI1(\tuner.howLong.n133[24] ), .DI0(\tuner.howLong.n133[23] ), 
    .D1(\tuner.howLong.n4652 ), .C1(\tuner.howLong.counter[24] ), 
    .D0(\tuner.howLong.n2819 ), .C0(\tuner.howLong.counter[23] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2819 ), .CIN1(\tuner.howLong.n4652 ), 
    .Q0(\tuner.howLong.counter[23] ), .Q1(\tuner.howLong.counter[24] ), 
    .F0(\tuner.howLong.n133[23] ), .F1(\tuner.howLong.n133[24] ), 
    .COUT1(\tuner.howLong.n2821 ), .COUT0(\tuner.howLong.n4652 ));
  tuner_howLong_SLICE_22 \tuner.howLong.SLICE_22 ( 
    .DI1(\tuner.howLong.n133[22] ), .DI0(\tuner.howLong.n133[21] ), 
    .D1(\tuner.howLong.n4649 ), .C1(\tuner.howLong.counter[22] ), 
    .D0(\tuner.howLong.n2817 ), .C0(\tuner.howLong.counter[21] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2817 ), .CIN1(\tuner.howLong.n4649 ), 
    .Q0(\tuner.howLong.counter[21] ), .Q1(\tuner.howLong.counter[22] ), 
    .F0(\tuner.howLong.n133[21] ), .F1(\tuner.howLong.n133[22] ), 
    .COUT1(\tuner.howLong.n2819 ), .COUT0(\tuner.howLong.n4649 ));
  tuner_howLong_SLICE_23 \tuner.howLong.SLICE_23 ( 
    .DI1(\tuner.howLong.n133[20] ), .DI0(\tuner.howLong.n133[19] ), 
    .D1(\tuner.howLong.n4646 ), .C1(\tuner.howLong.counter[20] ), 
    .D0(\tuner.howLong.n2815 ), .C0(\tuner.howLong.counter[19] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2815 ), .CIN1(\tuner.howLong.n4646 ), 
    .Q0(\tuner.howLong.counter[19] ), .Q1(\tuner.howLong.counter[20] ), 
    .F0(\tuner.howLong.n133[19] ), .F1(\tuner.howLong.n133[20] ), 
    .COUT1(\tuner.howLong.n2817 ), .COUT0(\tuner.howLong.n4646 ));
  tuner_howLong_SLICE_24 \tuner.howLong.SLICE_24 ( 
    .DI1(\tuner.howLong.n133[18] ), .DI0(\tuner.howLong.n133[17] ), 
    .D1(\tuner.howLong.n4643 ), .C1(\tuner.howLong.counter[18] ), 
    .D0(\tuner.howLong.n2813 ), .C0(\tuner.howLong.counter[17] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2813 ), .CIN1(\tuner.howLong.n4643 ), 
    .Q0(\tuner.howLong.counter[17] ), .Q1(\tuner.howLong.counter[18] ), 
    .F0(\tuner.howLong.n133[17] ), .F1(\tuner.howLong.n133[18] ), 
    .COUT1(\tuner.howLong.n2815 ), .COUT0(\tuner.howLong.n4643 ));
  tuner_howLong_SLICE_25 \tuner.howLong.SLICE_25 ( 
    .DI1(\tuner.howLong.n133[16] ), .DI0(\tuner.howLong.n133[15] ), 
    .D1(\tuner.howLong.n4640 ), .C1(\tuner.howLong.counter[16] ), 
    .D0(\tuner.howLong.n2811 ), .C0(\tuner.howLong.counter[15] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2811 ), .CIN1(\tuner.howLong.n4640 ), 
    .Q0(\tuner.howLong.counter[15] ), .Q1(\tuner.howLong.counter[16] ), 
    .F0(\tuner.howLong.n133[15] ), .F1(\tuner.howLong.n133[16] ), 
    .COUT1(\tuner.howLong.n2813 ), .COUT0(\tuner.howLong.n4640 ));
  tuner_howLong_SLICE_26 \tuner.howLong.SLICE_26 ( 
    .DI1(\tuner.howLong.n133[14] ), .DI0(\tuner.howLong.n133[13] ), 
    .D1(\tuner.howLong.n4637 ), .C1(\tuner.howLong.counter[14] ), 
    .D0(\tuner.howLong.n2809 ), .C0(\tuner.howLong.counter[13] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2809 ), .CIN1(\tuner.howLong.n4637 ), 
    .Q0(\tuner.howLong.counter[13] ), .Q1(\tuner.howLong.counter[14] ), 
    .F0(\tuner.howLong.n133[13] ), .F1(\tuner.howLong.n133[14] ), 
    .COUT1(\tuner.howLong.n2811 ), .COUT0(\tuner.howLong.n4637 ));
  tuner_howLong_SLICE_27 \tuner.howLong.SLICE_27 ( 
    .DI1(\tuner.howLong.n133[12] ), .DI0(\tuner.howLong.n133[11] ), 
    .D1(\tuner.howLong.n4634 ), .C1(\tuner.howLong.counter[12] ), 
    .D0(\tuner.howLong.n2807 ), .C0(\tuner.howLong.counter[11] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2807 ), .CIN1(\tuner.howLong.n4634 ), 
    .Q0(\tuner.howLong.counter[11] ), .Q1(\tuner.howLong.counter[12] ), 
    .F0(\tuner.howLong.n133[11] ), .F1(\tuner.howLong.n133[12] ), 
    .COUT1(\tuner.howLong.n2809 ), .COUT0(\tuner.howLong.n4634 ));
  tuner_howLong_SLICE_28 \tuner.howLong.SLICE_28 ( 
    .DI1(\tuner.howLong.n133[10] ), .DI0(\tuner.howLong.n133[9] ), 
    .D1(\tuner.howLong.n4631 ), .C1(\tuner.howLong.counter[10] ), 
    .D0(\tuner.howLong.n2805 ), .C0(\tuner.howLong.counter[9] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2805 ), .CIN1(\tuner.howLong.n4631 ), 
    .Q0(\tuner.howLong.counter[9] ), .Q1(\tuner.howLong.counter[10] ), 
    .F0(\tuner.howLong.n133[9] ), .F1(\tuner.howLong.n133[10] ), 
    .COUT1(\tuner.howLong.n2807 ), .COUT0(\tuner.howLong.n4631 ));
  tuner_howLong_SLICE_29 \tuner.howLong.SLICE_29 ( 
    .DI1(\tuner.howLong.n133[8] ), .DI0(\tuner.howLong.n133[7] ), 
    .D1(\tuner.howLong.n4628 ), .C1(\tuner.howLong.counter[8] ), 
    .D0(\tuner.howLong.n2803 ), .C0(\tuner.howLong.counter[7] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2803 ), .CIN1(\tuner.howLong.n4628 ), 
    .Q0(\tuner.howLong.counter[7] ), .Q1(\tuner.howLong.counter[8] ), 
    .F0(\tuner.howLong.n133[7] ), .F1(\tuner.howLong.n133[8] ), 
    .COUT1(\tuner.howLong.n2805 ), .COUT0(\tuner.howLong.n4628 ));
  tuner_howLong_SLICE_30 \tuner.howLong.SLICE_30 ( 
    .DI1(\tuner.howLong.n133[6] ), .DI0(\tuner.howLong.n133[5] ), 
    .D1(\tuner.howLong.n4625 ), .C1(\tuner.howLong.counter[6] ), 
    .D0(\tuner.howLong.n2801 ), .C0(\tuner.howLong.counter[5] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2801 ), .CIN1(\tuner.howLong.n4625 ), 
    .Q0(\tuner.howLong.counter[5] ), .Q1(\tuner.howLong.counter[6] ), 
    .F0(\tuner.howLong.n133[5] ), .F1(\tuner.howLong.n133[6] ), 
    .COUT1(\tuner.howLong.n2803 ), .COUT0(\tuner.howLong.n4625 ));
  tuner_howLong_SLICE_31 \tuner.howLong.SLICE_31 ( 
    .DI1(\tuner.howLong.n133[4] ), .DI0(\tuner.howLong.n133[3] ), 
    .D1(\tuner.howLong.n4622 ), .C1(\tuner.howLong.counter[4] ), 
    .D0(\tuner.howLong.n2799 ), .C0(\tuner.howLong.counter[3] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2799 ), .CIN1(\tuner.howLong.n4622 ), 
    .Q0(\tuner.howLong.counter[3] ), .Q1(\tuner.howLong.counter[4] ), 
    .F0(\tuner.howLong.n133[3] ), .F1(\tuner.howLong.n133[4] ), 
    .COUT1(\tuner.howLong.n2801 ), .COUT0(\tuner.howLong.n4622 ));
  tuner_howLong_SLICE_32 \tuner.howLong.SLICE_32 ( 
    .DI1(\tuner.howLong.n133[2] ), .DI0(\tuner.howLong.n133[1] ), 
    .D1(\tuner.howLong.n4619 ), .C1(\tuner.howLong.counter[2] ), 
    .D0(\tuner.howLong.n2797 ), .C0(\tuner.howLong.counter[1] ), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN0(\tuner.howLong.n2797 ), .CIN1(\tuner.howLong.n4619 ), 
    .Q0(\tuner.howLong.counter[1] ), .Q1(\tuner.howLong.counter[2] ), 
    .F0(\tuner.howLong.n133[1] ), .F1(\tuner.howLong.n133[2] ), 
    .COUT1(\tuner.howLong.n2799 ), .COUT0(\tuner.howLong.n4619 ));
  tuner_howLong_SLICE_33 \tuner.howLong.SLICE_33 ( 
    .DI1(\tuner.howLong.n133[0] ), .D1(\tuner.howLong.n4616 ), 
    .C1(\tuner.howLong.counter[0] ), .B1(VCC_net), 
    .LSR(\tuner.howLong.counter_31__N_277 ), .CLK(int_osc), 
    .CIN1(\tuner.howLong.n4616 ), .Q1(\tuner.howLong.counter[0] ), 
    .F1(\tuner.howLong.n133[0] ), .COUT1(\tuner.howLong.n2797 ), 
    .COUT0(\tuner.howLong.n4616 ));
  spi_SLICE_34 \spi.SLICE_34 ( 
    .DI1(\newFlattenedMCUout[1].sig_001.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[2]_2.sig_000.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[1] ), .D0(\spi.newFlattenedMCUout[2]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[3]_2 ), 
    .Q1(\spi.newFlattenedMCUout[2]_2 ), 
    .F0(\spi.newFlattenedMCUout[2]_2.sig_000.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_001.FeedThruLUT ));
  SLICE_36 SLICE_36( .DI0(\newFlattenedMCUout[38].sig_002.FeedThruLUT ), 
    .D0(\newFlattenedMCUout[38] ), .CLK(sck_c), .Q0(\newFlattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[38].sig_002.FeedThruLUT ));
  SLICE_37 SLICE_37( .DI1(\newFlattenedMCUout[36].sig_004.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_003.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[38] ), .Q1(\newFlattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[37].sig_003.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_004.FeedThruLUT ));
  SLICE_39 SLICE_39( .DI1(\newFlattenedMCUout[34].sig_006.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_005.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[36] ), .Q1(\newFlattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[35].sig_005.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_006.FeedThruLUT ));
  SLICE_41 SLICE_41( .DI1(\newFlattenedMCUout[32].sig_008.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_007.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[34] ), .Q1(\newFlattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[33].sig_007.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_008.FeedThruLUT ));
  SLICE_43 SLICE_43( .DI1(\newFlattenedMCUout[30].sig_010.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_009.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[32] ), .Q1(\newFlattenedMCUout[31] ), 
    .F0(\newFlattenedMCUout[31].sig_009.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_010.FeedThruLUT ));
  SLICE_45 SLICE_45( .DI1(\newFlattenedMCUout[28].sig_012.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_011.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[30] ), .Q1(\newFlattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[29].sig_011.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_012.FeedThruLUT ));
  SLICE_47 SLICE_47( .DI1(\newFlattenedMCUout[26].sig_014.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_013.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[28] ), .Q1(\newFlattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[27].sig_013.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_014.FeedThruLUT ));
  SLICE_49 SLICE_49( .DI1(\newFlattenedMCUout[24].sig_016.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_015.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[26] ), .Q1(\newFlattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[25].sig_015.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_016.FeedThruLUT ));
  SLICE_51 SLICE_51( .DI1(\newFlattenedMCUout[22].sig_018.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_017.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[24] ), .Q1(\newFlattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[23].sig_017.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_018.FeedThruLUT ));
  SLICE_53 SLICE_53( .DI1(\newFlattenedMCUout[20].sig_020.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_019.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[22] ), .Q1(\newFlattenedMCUout[21] ), 
    .F0(\newFlattenedMCUout[21].sig_019.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_020.FeedThruLUT ));
  SLICE_55 SLICE_55( .DI1(\newFlattenedMCUout[18].sig_022.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_021.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[20] ), .Q1(\newFlattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[19].sig_021.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_022.FeedThruLUT ));
  SLICE_57 SLICE_57( .DI1(\newFlattenedMCUout[16].sig_024.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_023.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[18] ), .Q1(\newFlattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[17].sig_023.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_024.FeedThruLUT ));
  SLICE_59 SLICE_59( .DI1(\newFlattenedMCUout[14].sig_026.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_025.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[16] ), .Q1(\newFlattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[15].sig_025.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_026.FeedThruLUT ));
  SLICE_61 SLICE_61( .DI1(\newFlattenedMCUout[12].sig_028.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_027.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[14] ), .Q1(\newFlattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[13].sig_027.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_028.FeedThruLUT ));
  SLICE_63 SLICE_63( .DI1(\newFlattenedMCUout[10].sig_030.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_029.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[12] ), .Q1(\newFlattenedMCUout[11] ), 
    .F0(\newFlattenedMCUout[11].sig_029.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_030.FeedThruLUT ));
  SLICE_65 SLICE_65( .DI1(\newFlattenedMCUout[8].sig_032.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_031.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[10] ), .Q1(\newFlattenedMCUout[9] ), 
    .F0(\newFlattenedMCUout[9].sig_031.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_032.FeedThruLUT ));
  spi_SLICE_67 \spi.SLICE_67 ( 
    .DI1(\newFlattenedMCUout[0].sig_038.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[7]_2.sig_033.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[0] ), .D0(\spi.newFlattenedMCUout[7]_2 ), 
    .CLK(sck_c), .Q0(\newFlattenedMCUout[8] ), .Q1(\newFlattenedMCUout[1] ), 
    .F0(\spi.newFlattenedMCUout[7]_2.sig_033.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[0].sig_038.FeedThruLUT ));
  spi_SLICE_68 \spi.SLICE_68 ( 
    .DI1(\spi.newFlattenedMCUout[5]_2.sig_035.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[6]_2.sig_034.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[5]_2 ), .D0(\spi.newFlattenedMCUout[6]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[7]_2 ), 
    .Q1(\spi.newFlattenedMCUout[6]_2 ), 
    .F0(\spi.newFlattenedMCUout[6]_2.sig_034.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[5]_2.sig_035.FeedThruLUT ));
  spi_SLICE_70 \spi.SLICE_70 ( 
    .DI1(\spi.newFlattenedMCUout[3]_2.sig_037.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[4]_2.sig_036.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[3]_2 ), .D0(\spi.newFlattenedMCUout[4]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[5]_2 ), 
    .Q1(\spi.newFlattenedMCUout[4]_2 ), 
    .F0(\spi.newFlattenedMCUout[4]_2.sig_036.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[3]_2.sig_037.FeedThruLUT ));
  tuner_SLICE_73 \tuner.SLICE_73 ( .DI1(\tuner.n4313 ), .DI0(\tuner.n4307 ), 
    .D1(\tuner.n4310 ), .C1(\tuner.n2009 ), .B1(\freqThreshold0[1] ), 
    .A1(\freqThreshold1[1] ), .D0(\tuner.n4304 ), .C0(\freqThreshold0[0] ), 
    .B0(\tuner.n2009 ), .A0(\freqThreshold1[0] ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[0] ), .Q1(\tuner.freqThreshold[1] ), 
    .F0(\tuner.n4307 ), .F1(\tuner.n4313 ));
  tuner_SLICE_74 \tuner.SLICE_74 ( .DI1(\tuner.n3043 ), .DI0(\tuner.n2056 ), 
    .D1(\tuner.n4 ), .C1(nextstate_5__N_126), .A1(start), 
    .D0(nextstate_5__N_126), .C0(\tuner.nextstate_5__N_125 ), .B0(start), 
    .LSR(reset_c), .CLK(int_osc), .Q0(nextstate_5__N_126), 
    .Q1(nextstate_5__N_121), .F0(\tuner.n2056 ), .F1(\tuner.n3043 ));
  SLICE_76 SLICE_76( .DI1(\tuner.n424[1].sig_040.FeedThruLUT ), 
    .DI0(\nextstate_5__N_121.sig_039.FeedThruLUT ), .D1(\tuner.n424[1] ), 
    .D0(nextstate_5__N_121), .CE(n2167), .LSR(reset_c), .CLK(int_osc), 
    .Q0(\tuner.n424[1] ), .Q1(\tuner.n424[2] ), 
    .F0(\nextstate_5__N_121.sig_039.FeedThruLUT ), 
    .F1(\tuner.n424[1].sig_040.FeedThruLUT ));
  tuner_SLICE_80 \tuner.SLICE_80 ( .DI1(\tuner.n4361 ), .DI0(\tuner.n3647 ), 
    .D1(\tuner.n4358 ), .C1(\tuner.n2009 ), .B1(\freqThreshold0[14] ), 
    .A1(\freqThreshold1[14] ), .D0(\tuner.n424[1] ), .C0(nextstate_5__N_121), 
    .B0(\tuner.n3646 ), .A0(\tuner.n3808 ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[15] ), .Q1(\tuner.freqThreshold[14] ), 
    .F0(\tuner.n3647 ), .F1(\tuner.n4361 ));
  tuner_SLICE_82 \tuner.SLICE_82 ( .DI1(\tuner.n4379 ), .DI0(\tuner.n4373 ), 
    .D1(\tuner.n4376 ), .C1(\tuner.n2009 ), .B1(\freqThreshold0[12] ), 
    .A1(\freqThreshold1[12] ), .D0(\tuner.n4370 ), .C0(\freqThreshold0[13] ), 
    .B0(\tuner.n2009 ), .A0(\freqThreshold1[13] ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[13] ), .Q1(\tuner.freqThreshold[12] ), 
    .F0(\tuner.n4373 ), .F1(\tuner.n4379 ));
  tuner_SLICE_84 \tuner.SLICE_84 ( .DI1(\tuner.n4403 ), .DI0(\tuner.n4397 ), 
    .D1(\tuner.n4400 ), .C1(\tuner.n2009 ), .B1(\freqThreshold0[10] ), 
    .A1(\freqThreshold1[10] ), .D0(\tuner.n4394 ), .C0(\freqThreshold1[11] ), 
    .B0(\tuner.n2009 ), .A0(\freqThreshold0[11] ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[11] ), .Q1(\tuner.freqThreshold[10] ), 
    .F0(\tuner.n4397 ), .F1(\tuner.n4403 ));
  tuner_SLICE_86 \tuner.SLICE_86 ( .DI1(\tuner.n4385 ), .DI0(\tuner.n4391 ), 
    .D1(\tuner.n4382 ), .C1(\freqThreshold0[8] ), .B1(\tuner.n2009 ), 
    .A1(\freqThreshold1[8] ), .D0(\tuner.n4388 ), .C0(\tuner.n2009 ), 
    .B0(\freqThreshold0[9] ), .A0(\freqThreshold1[9] ), .CE(n2141), 
    .CLK(int_osc), .Q0(\tuner.freqThreshold[9] ), 
    .Q1(\tuner.freqThreshold[8] ), .F0(\tuner.n4391 ), .F1(\tuner.n4385 ));
  tuner_SLICE_88 \tuner.SLICE_88 ( .DI1(\tuner.n4355 ), .DI0(\tuner.n4367 ), 
    .D1(\tuner.n4352 ), .C1(\tuner.n2009 ), .B1(\freqThreshold0[6] ), 
    .A1(\freqThreshold1[6] ), .D0(\tuner.n4364 ), .C0(\freqThreshold0[7] ), 
    .B0(\tuner.n2009 ), .A0(\freqThreshold1[7] ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[7] ), .Q1(\tuner.freqThreshold[6] ), 
    .F0(\tuner.n4367 ), .F1(\tuner.n4355 ));
  tuner_SLICE_90 \tuner.SLICE_90 ( .DI1(\tuner.n3668 ), .DI0(\tuner.n4349 ), 
    .D1(\tuner.n424[1] ), .C1(nextstate_5__N_121), .B1(\tuner.n3667 ), 
    .A1(\tuner.n3823 ), .D0(\tuner.n4346 ), .C0(\freqThreshold1[5] ), 
    .B0(\tuner.n2009 ), .A0(\freqThreshold0[5] ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.freqThreshold[5] ), .Q1(\tuner.freqThreshold[4] ), 
    .F0(\tuner.n4349 ), .F1(\tuner.n3668 ));
  tuner_SLICE_92 \tuner.SLICE_92 ( .DI1(\tuner.n4325 ), .DI0(\tuner.n4331 ), 
    .D1(\tuner.n4322 ), .C1(\freqThreshold0[2] ), .B1(\tuner.n2009 ), 
    .A1(\freqThreshold1[2] ), .D0(\tuner.n4328 ), .C0(\tuner.n2009 ), 
    .B0(\freqThreshold1[3] ), .A0(\freqThreshold0[3] ), .CE(n2141), 
    .CLK(int_osc), .Q0(\tuner.freqThreshold[3] ), 
    .Q1(\tuner.freqThreshold[2] ), .F0(\tuner.n4331 ), .F1(\tuner.n4325 ));
  tuner_SLICE_95 \tuner.SLICE_95 ( .DI0(\tuner.n524[1] ), .D0(\counter[0] ), 
    .C0(\tuner.counter[1]_2 ), .CE(n2169), .LSR(nextstate_5__N_126), 
    .CLK(int_osc), .Q0(\tuner.counter[1]_2 ), .F0(\tuner.n524[1] ));
  SLICE_96 SLICE_96( .DI1(n2164), .DI0(n2165), .D1(n1986), 
    .C1(\durThreshold[8] ), .B1(n2141), .D0(\durThreshold[7] ), .C0(n1987), 
    .A0(n2141), .CLK(int_osc), .Q0(\durThreshold[7] ), .Q1(\durThreshold[8] ), 
    .F0(n2165), .F1(n2164));
  SLICE_98 SLICE_98( .DI1(n2162), .DI0(n2163), .D1(n1986), 
    .C1(\durThreshold[11] ), .B1(n2141), .D0(\durThreshold[9] ), .C0(n2141), 
    .B0(n1985), .CLK(int_osc), .Q0(\durThreshold[9] ), .Q1(\durThreshold[11] ), 
    .F0(n2163), .F1(n2162));
  SLICE_100 SLICE_100( .DI1(n2160), .DI0(n2161), .D1(n1971), 
    .C1(\durThreshold[13] ), .B1(n2141), .D0(\durThreshold[12] ), .C0(n1985), 
    .A0(n2141), .CLK(int_osc), .Q0(\durThreshold[12] ), 
    .Q1(\durThreshold[13] ), .F0(n2161), .F1(n2160));
  SLICE_102 SLICE_102( .DI1(n2158), .DI0(n2159), .D1(n1986), 
    .C1(\durThreshold[16] ), .B1(n2141), .D0(\durThreshold[15] ), .C0(n1987), 
    .A0(n2141), .CLK(int_osc), .Q0(\durThreshold[15] ), 
    .Q1(\durThreshold[16] ), .F0(n2159), .F1(n2158));
  SLICE_104 SLICE_104( .DI1(n2156), .DI0(n2157), .D1(n1986), 
    .C1(\durThreshold[20] ), .B1(n2141), .D0(\durThreshold[17] ), .C0(n2033), 
    .A0(n2141), .CLK(int_osc), .Q0(\durThreshold[17] ), 
    .Q1(\durThreshold[20] ), .F0(n2157), .F1(n2156));
  SLICE_106 SLICE_106( .DI1(n2154), .DI0(n2155), .D1(n2141), 
    .C1(\durThreshold[22] ), .B1(n2033), .D0(n1985), .C0(\durThreshold[21] ), 
    .A0(n2141), .CLK(int_osc), .Q0(\durThreshold[21] ), 
    .Q1(\durThreshold[22] ), .F0(n2155), .F1(n2154));
  tuner_SLICE_108 \tuner.SLICE_108 ( .DI1(n2145), .DI0(\tuner.n3409 ), 
    .D1(makingMusic_c), .C1(lastCE), .B1(start), .A1(ce_c), 
    .D0(nextstate_5__N_121), .C0(makingMusic_c), .B0(nextstate_5__N_126), 
    .A0(\tuner.nextstate_5__N_125 ), .CLK(int_osc), .Q0(makingMusic_c), 
    .Q1(start), .F0(\tuner.n3409 ), .F1(n2145));
  SLICE_109 SLICE_109( .DI0(n2152), .D0(\durThreshold[24] ), .C0(n1971), 
    .A0(n2141), .CLK(int_osc), .Q0(\durThreshold[24] ), .F0(n2152));
  tuner_SLICE_111 \tuner.SLICE_111 ( .DI1(\n1985$n0 ), .DI0(\tuner.n4337 ), 
    .D1(\tuner.n3820 ), .C1(\tuner.n3664 ), .B1(\tuner.n424[1] ), 
    .A1(nextstate_5__N_121), .D0(\tuner.n4334 ), .C0(\tuner.n2009 ), 
    .B0(\durThresh1[19] ), .A0(\durThresh0[19] ), .CE(n2141), .CLK(int_osc), 
    .Q0(\tuner.durThreshold[19] ), .Q1(\tuner.durThreshold[18] ), 
    .F0(\tuner.n4337 ), .F1(\n1985$n0 ));
  tuner_pitch_SLICE_114 \tuner.pitch.SLICE_114 ( .DI0(\tuner.pitch.pwm_N_346 ), 
    .D0(\tuner.pitch.n30 ), .C0(\tuner.pitch.n29 ), .B0(\tuner.pitch.n3048 ), 
    .A0(pwm_c), .CLK(int_osc), .Q0(pwm_c), .F0(\tuner.pitch.pwm_N_346 ));
  SLICE_117 SLICE_117( .DI1(\newFlattenedMCUout[1].sig_076.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_042.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[1] ), .D0(\newFlattenedMCUout[0] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[0] ), .Q1(\flattenedMCUout[1] ), 
    .F0(\newFlattenedMCUout[0].sig_042.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_076.FeedThruLUT ));
  SLICE_120 SLICE_120( .DI1(\newFlattenedMCUout[38].sig_045.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_044.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[38] ), .D0(\newFlattenedMCUout[39] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[39] ), .Q1(\flattenedMCUout[38] ), 
    .F0(\newFlattenedMCUout[39].sig_044.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_045.FeedThruLUT ));
  SLICE_122 SLICE_122( .DI1(\newFlattenedMCUout[36].sig_047.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_046.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[37] ), .Q1(\flattenedMCUout[36] ), 
    .F0(\newFlattenedMCUout[37].sig_046.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_047.FeedThruLUT ));
  SLICE_124 SLICE_124( .DI1(\newFlattenedMCUout[34].sig_049.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_048.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[35] ), .Q1(\flattenedMCUout[34] ), 
    .F0(\newFlattenedMCUout[35].sig_048.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_049.FeedThruLUT ));
  SLICE_126 SLICE_126( .DI1(\newFlattenedMCUout[32].sig_051.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_050.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[33] ), .Q1(\flattenedMCUout[32] ), 
    .F0(\newFlattenedMCUout[33].sig_050.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_051.FeedThruLUT ));
  SLICE_128 SLICE_128( .DI1(\newFlattenedMCUout[30].sig_053.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_052.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[31] ), .Q1(\flattenedMCUout[30] ), 
    .F0(\newFlattenedMCUout[31].sig_052.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_053.FeedThruLUT ));
  SLICE_130 SLICE_130( .DI1(\newFlattenedMCUout[28].sig_055.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_054.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[29] ), .Q1(\flattenedMCUout[28] ), 
    .F0(\newFlattenedMCUout[29].sig_054.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_055.FeedThruLUT ));
  SLICE_132 SLICE_132( .DI1(\newFlattenedMCUout[26].sig_057.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_056.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[27] ), .Q1(\flattenedMCUout[26] ), 
    .F0(\newFlattenedMCUout[27].sig_056.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_057.FeedThruLUT ));
  SLICE_134 SLICE_134( .DI1(\newFlattenedMCUout[24].sig_059.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_058.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[25] ), .Q1(\flattenedMCUout[24] ), 
    .F0(\newFlattenedMCUout[25].sig_058.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_059.FeedThruLUT ));
  SLICE_136 SLICE_136( .DI1(\newFlattenedMCUout[22].sig_061.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_060.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[23] ), .Q1(\flattenedMCUout[22] ), 
    .F0(\newFlattenedMCUout[23].sig_060.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_061.FeedThruLUT ));
  SLICE_138 SLICE_138( .DI1(\newFlattenedMCUout[20].sig_063.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_062.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[21] ), .Q1(\flattenedMCUout[20] ), 
    .F0(\newFlattenedMCUout[21].sig_062.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_063.FeedThruLUT ));
  SLICE_140 SLICE_140( .DI1(\newFlattenedMCUout[18].sig_065.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_064.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[19] ), .Q1(\flattenedMCUout[18] ), 
    .F0(\newFlattenedMCUout[19].sig_064.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_065.FeedThruLUT ));
  SLICE_142 SLICE_142( .DI1(\newFlattenedMCUout[16].sig_067.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_066.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[17] ), .Q1(\flattenedMCUout[16] ), 
    .F0(\newFlattenedMCUout[17].sig_066.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_067.FeedThruLUT ));
  SLICE_144 SLICE_144( .DI1(\newFlattenedMCUout[14].sig_069.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_068.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .C0(\newFlattenedMCUout[15] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[15] ), .Q1(\flattenedMCUout[14] ), 
    .F0(\newFlattenedMCUout[15].sig_068.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_069.FeedThruLUT ));
  SLICE_146 SLICE_146( .DI1(\newFlattenedMCUout[12].sig_071.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_070.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\flattenedMCUout[13] ), .Q1(\flattenedMCUout[12] ), 
    .F0(\newFlattenedMCUout[13].sig_070.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_071.FeedThruLUT ));
  SLICE_148 SLICE_148( .DI1(\newFlattenedMCUout[10].sig_073.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_072.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\enabler.flattenedMCUout[11] ), .Q1(\enabler.flattenedMCUout[10] ), 
    .F0(\newFlattenedMCUout[11].sig_072.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_073.FeedThruLUT ));
  SLICE_150 SLICE_150( .DI1(\newFlattenedMCUout[8].sig_075.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_074.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), 
    .CE(\enabler.flattenedMCUout_39__N_41 ), .CLK(int_osc), 
    .Q0(\enabler.flattenedMCUout[9] ), .Q1(\enabler.flattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[9].sig_074.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_075.FeedThruLUT ));
  SLICE_153 SLICE_153( .DI0(\ce_c.sig_077.FeedThruLUT ), .D0(ce_c), 
    .CLK(int_osc), .Q0(\enabler.twoAgoCE ), .F0(\ce_c.sig_077.FeedThruLUT ));
  tuner_SLICE_154 \tuner.SLICE_154 ( .D1(\durThresh1[15] ), .C1(\tuner.n4340 ), 
    .B1(\durThresh0[15] ), .A1(\tuner.n2009 ), .D0(\tuner.n2011 ), 
    .C0(\tuner.n3745 ), .B0(\durThresh2[15] ), .A0(\tuner.n2009 ), 
    .F0(\tuner.n4340 ), .F1(n1987));
  tuner_SLICE_156 \tuner.SLICE_156 ( .D1(\durThresh0[20] ), .C1(\tuner.n4316 ), 
    .B1(\durThresh1[20] ), .A1(\tuner.n2009 ), .D0(\tuner.n2009 ), 
    .C0(\tuner.n3744 ), .B0(\tuner.n2011 ), .A0(\durThresh2[20] ), 
    .F0(\tuner.n4316 ), .F1(n1986));
  aD2DT_d2d2_SLICE_158 \aD2DT.d2d2.SLICE_158 ( .D1(\tuner.n2011 ), 
    .C1(\durThresh2[19] ), .B1(\tuner.n2009 ), .A1(\tuner.n3740 ), 
    .D0(\flattenedMCUout[17] ), .C0(\flattenedMCUout[18] ), 
    .B0(\flattenedMCUout[19] ), .A0(\flattenedMCUout[16] ), 
    .F0(\durThresh2[19] ), .F1(\tuner.n4334 ));
  aD2DT_d2d2_SLICE_160 \aD2DT.d2d2.SLICE_160 ( .D1(\tuner.n3712 ), 
    .C1(\durThresh2[23] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[17] ), .C0(\flattenedMCUout[18] ), 
    .B0(\flattenedMCUout[19] ), .A0(\flattenedMCUout[16] ), 
    .F0(\durThresh2[23] ), .F1(\tuner.n4298 ));
  aD2DT_d2d2_SLICE_162 \aD2DT.d2d2.SLICE_162 ( .D1(\tuner.n2011 ), 
    .C1(\durThresh2[20] ), .B1(nextstate_5__N_124), .A1(n66), 
    .D0(\flattenedMCUout[17] ), .C0(\flattenedMCUout[18] ), 
    .B0(\flattenedMCUout[19] ), .A0(\flattenedMCUout[16] ), 
    .F0(\durThresh2[20] ), .F1(\tuner.n3691 ));
  aD2DT_d2d2_SLICE_164 \aD2DT.d2d2.SLICE_164 ( .D1(\tuner.n2011 ), 
    .C1(\durThresh2[15] ), .B1(nextstate_5__N_124), .A1(n7), 
    .D0(\flattenedMCUout[17] ), .C0(\flattenedMCUout[18] ), 
    .B0(\flattenedMCUout[19] ), .A0(\flattenedMCUout[16] ), 
    .F0(\durThresh2[15] ), .F1(\tuner.n3664 ));
  aD2DT_d2d1_SLICE_166 \aD2DT.d2d1.SLICE_166 ( .D1(\flattenedMCUout[25] ), 
    .C1(\flattenedMCUout[26] ), .B1(\flattenedMCUout[24] ), 
    .A1(\flattenedMCUout[27] ), .D0(\flattenedMCUout[26] ), 
    .C0(\flattenedMCUout[25] ), .B0(\flattenedMCUout[27] ), 
    .A0(\flattenedMCUout[24] ), .F0(\durThresh1[20] ), .F1(\durThresh1[15] ));
  tuner_SLICE_167 \tuner.SLICE_167 ( .C1(\durThresh0[20] ), 
    .B1(\durThresh1[20] ), .A1(\tuner.n2011 ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[35] ), .B0(\flattenedMCUout[34] ), 
    .A0(\flattenedMCUout[32] ), .F0(\durThresh0[20] ), .F1(\tuner.n3836 ));
  tuner_SLICE_169 \tuner.SLICE_169 ( .D1(\durThresh1[15] ), 
    .C1(\durThresh0[15] ), .A1(\tuner.n2011 ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[34] ), .B0(\flattenedMCUout[32] ), 
    .A0(\flattenedMCUout[35] ), .F0(\durThresh0[15] ), .F1(\tuner.n3820 ));
  tuner_SLICE_170 \tuner.SLICE_170 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[10] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[10] ), .F1(\tuner.n3778 ));
  tuner_SLICE_172 \tuner.SLICE_172 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[0] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[0] ), .F1(\tuner.n3722 ));
  tuner_SLICE_174 \tuner.SLICE_174 ( .D1(\tuner.n3722 ), 
    .C1(\freqThreshold2[0] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[0] ), .F1(\tuner.n4304 ));
  tuner_SLICE_176 \tuner.SLICE_176 ( .D1(\tuner.n3778 ), 
    .C1(\freqThreshold2[10] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[10] ), .F1(\tuner.n4400 ));
  tuner_SLICE_178 \tuner.SLICE_178 ( .D1(\tuner.n3771 ), 
    .C1(\freqThreshold2[11] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[11] ), .F1(\tuner.n4394 ));
  tuner_SLICE_180 \tuner.SLICE_180 ( .D1(\tuner.n3764 ), 
    .C1(\freqThreshold2[9] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[9] ), .F1(\tuner.n4388 ));
  tuner_SLICE_182 \tuner.SLICE_182 ( .D1(\tuner.n3763 ), 
    .C1(\freqThreshold2[8] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[8] ), .F1(\tuner.n4382 ));
  tuner_SLICE_184 \tuner.SLICE_184 ( .D1(\tuner.n3762 ), 
    .C1(\freqThreshold2[12] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[21] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[22] ), 
    .F0(\freqThreshold2[12] ), .F1(\tuner.n4376 ));
  tuner_SLICE_186 \tuner.SLICE_186 ( .D1(\tuner.n3761 ), 
    .C1(\freqThreshold2[13] ), .B1(\tuner.n2011 ), .A1(\tuner.n2009 ), 
    .D0(\flattenedMCUout[21] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[23] ), .A0(\flattenedMCUout[22] ), 
    .F0(\freqThreshold2[13] ), .F1(\tuner.n4370 ));
  tuner_SLICE_188 \tuner.SLICE_188 ( .D1(\tuner.n2011 ), 
    .C1(\freqThreshold2[7] ), .B1(\tuner.n3760 ), .A1(\tuner.n2009 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[7] ), .F1(\tuner.n4364 ));
  tuner_SLICE_190 \tuner.SLICE_190 ( .D1(\tuner.n2011 ), 
    .C1(\freqThreshold2[14] ), .B1(\tuner.n2009 ), .A1(\tuner.n3759 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[14] ), .F1(\tuner.n4358 ));
  tuner_SLICE_192 \tuner.SLICE_192 ( .D1(\tuner.n3758 ), 
    .C1(\freqThreshold2[6] ), .B1(\tuner.n2011 ), .A1(\tuner.n2009 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[6] ), .F1(\tuner.n4352 ));
  tuner_SLICE_194 \tuner.SLICE_194 ( .D1(\tuner.n2011 ), 
    .C1(\freqThreshold2[5] ), .B1(\tuner.n2009 ), .A1(\tuner.n3755 ), 
    .D0(\flattenedMCUout[23] ), .C0(\flattenedMCUout[20] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[21] ), 
    .F0(\freqThreshold2[5] ), .F1(\tuner.n4346 ));
  tuner_SLICE_196 \tuner.SLICE_196 ( .D1(nextstate_5__N_124), 
    .C1(\tuner.n2011 ), .B1(n2620), .A1(n2626), .D0(\tuner.n424[1] ), 
    .C0(nextstate_5__N_121), .B0(\tuner.n424[2] ), .F0(\tuner.n2011 ), 
    .F1(\tuner.n3667 ));
  aT2FT_t2F2_SLICE_197 \aT2FT.t2F2.SLICE_197 ( .D1(\flattenedMCUout[21] ), 
    .C1(\flattenedMCUout[20] ), .B1(\flattenedMCUout[23] ), 
    .A1(\flattenedMCUout[22] ), .D0(\flattenedMCUout[20] ), 
    .C0(\flattenedMCUout[21] ), .B0(\flattenedMCUout[22] ), 
    .A0(\flattenedMCUout[23] ), .F0(n2620), .F1(\freqThreshold2[1] ));
  tuner_SLICE_198 \tuner.SLICE_198 ( .D1(\tuner.n2011 ), .C1(n2644), 
    .B1(n2614), .D0(\flattenedMCUout[37] ), .C0(\flattenedMCUout[38] ), 
    .B0(\flattenedMCUout[39] ), .A0(\flattenedMCUout[36] ), .F0(n2644), 
    .F1(\tuner.n3823 ));
  tuner_SLICE_200 \tuner.SLICE_200 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[1] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[1] ), .F1(\tuner.n3730 ));
  tuner_SLICE_202 \tuner.SLICE_202 ( .D1(\flattenedMCUout[15] ), 
    .C1(\tuner.n3757 ), .B1(n2636), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[13] ), .C0(\flattenedMCUout[14] ), 
    .A0(nextstate_5__N_124), .F0(\tuner.n3757 ), .F1(\tuner.n3646 ));
  tuner_SLICE_204 \tuner.SLICE_204 ( .D1(\tuner.n2011 ), .C1(n2558), 
    .B1(\flattenedMCUout[39] ), .A1(n2638), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .F0(n2558), .F1(\tuner.n3808 ));
  tuner_SLICE_206 \tuner.SLICE_206 ( .D1(\tuner.n3739 ), 
    .C1(\freqThreshold2[3] ), .B1(\tuner.n2009 ), .A1(\tuner.n2011 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[3] ), .F1(\tuner.n4328 ));
  tuner_SLICE_208 \tuner.SLICE_208 ( .D1(\tuner.n3738 ), 
    .C1(\freqThreshold2[2] ), .B1(\tuner.n2011 ), .A1(\tuner.n2009 ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[21] ), 
    .B0(\flattenedMCUout[22] ), .A0(\flattenedMCUout[23] ), 
    .F0(\freqThreshold2[2] ), .F1(\tuner.n4322 ));
  tuner_SLICE_210 \tuner.SLICE_210 ( .D1(nextstate_5__N_124), .C1(n66), 
    .D0(\enabler.flattenedMCUout[10] ), .C0(\enabler.flattenedMCUout[9] ), 
    .B0(\enabler.flattenedMCUout[11] ), .A0(\enabler.flattenedMCUout[8] ), 
    .F0(n66), .F1(\tuner.n3744 ));
  tuner_SLICE_212 \tuner.SLICE_212 ( .D1(nextstate_5__N_121), .C1(\tuner.rep ), 
    .B1(done), .A1(nextstate_5__N_124), .D0(\flattenedMCUout[0] ), 
    .C0(\flattenedMCUout[1] ), .B0(\counter[0] ), .A0(\tuner.counter[1]_2 ), 
    .F0(\tuner.rep ), .F1(\tuner.n4 ));
  tuner_SLICE_215 \tuner.SLICE_215 ( .D1(\tuner.n3730 ), .C1(\tuner.n2009 ), 
    .B1(\freqThreshold2[1] ), .A1(\tuner.n2011 ), .D0(\tuner.n424[1] ), 
    .C0(nextstate_5__N_121), .F0(\tuner.n2009 ), .F1(\tuner.n4310 ));
  tuner_SLICE_216 \tuner.SLICE_216 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[2] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[2] ), .F1(\tuner.n3738 ));
  tuner_SLICE_218 \tuner.SLICE_218 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[3] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[3] ), .F1(\tuner.n3739 ));
  tuner_SLICE_220 \tuner.SLICE_220 ( .D1(nextstate_5__N_124), .C1(n3068), 
    .D0(\enabler.flattenedMCUout[9] ), .C0(\enabler.flattenedMCUout[10] ), 
    .B0(\enabler.flattenedMCUout[8] ), .A0(\enabler.flattenedMCUout[11] ), 
    .F0(n3068), .F1(\tuner.n3740 ));
  tuner_SLICE_222 \tuner.SLICE_222 ( .D1(nextstate_5__N_124), .C1(n7), 
    .D0(\enabler.flattenedMCUout[9] ), .C0(\enabler.flattenedMCUout[10] ), 
    .B0(\enabler.flattenedMCUout[8] ), .A0(\enabler.flattenedMCUout[11] ), 
    .F0(n7), .F1(\tuner.n3745 ));
  tuner_SLICE_224 \tuner.SLICE_224 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[5] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[14] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freqThreshold3[5] ), .F1(\tuner.n3755 ));
  tuner_SLICE_226 \tuner.SLICE_226 ( .C1(\freqThreshold3[6] ), 
    .A1(nextstate_5__N_124), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[6] ), .F1(\tuner.n3758 ));
  tuner_SLICE_228 \tuner.SLICE_228 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[14] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[14] ), .F1(\tuner.n3759 ));
  tuner_SLICE_230 \tuner.SLICE_230 ( .C1(\freqThreshold3[7] ), 
    .A1(nextstate_5__N_124), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[7] ), .F1(\tuner.n3760 ));
  tuner_SLICE_232 \tuner.SLICE_232 ( .D1(nextstate_5__N_124), .C1(n2304), 
    .D0(\enabler.flattenedMCUout[10] ), .C0(\enabler.flattenedMCUout[9] ), 
    .B0(\enabler.flattenedMCUout[11] ), .A0(\enabler.flattenedMCUout[8] ), 
    .F0(n2304), .F1(\tuner.n3712 ));
  tuner_SLICE_234 \tuner.SLICE_234 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[13] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[13] ), .F1(\tuner.n3761 ));
  tuner_SLICE_236 \tuner.SLICE_236 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[12] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[13] ), .B0(\flattenedMCUout[15] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[12] ), .F1(\tuner.n3762 ));
  tuner_SLICE_238 \tuner.SLICE_238 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[8] ), .D0(\flattenedMCUout[15] ), 
    .C0(\flattenedMCUout[12] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[8] ), .F1(\tuner.n3763 ));
  tuner_SLICE_240 \tuner.SLICE_240 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[9] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[9] ), .F1(\tuner.n3764 ));
  tuner_SLICE_242 \tuner.SLICE_242 ( .D1(nextstate_5__N_124), 
    .C1(\freqThreshold3[11] ), .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(\freqThreshold3[11] ), .F1(\tuner.n3771 ));
  tuner_pitch_SLICE_244 \tuner.pitch.SLICE_244 ( .D1(\tuner.pitch.n23 ), 
    .C1(\tuner.pitch.n24 ), .B1(\tuner.pitch.n21 ), .A1(\tuner.pitch.n22 ), 
    .D0(\tuner.pitch.counter[7] ), .C0(\tuner.freqThreshold[7] ), 
    .B0(\tuner.freqThreshold[15] ), .A0(\tuner.pitch.counter[15] ), 
    .F0(\tuner.pitch.n24 ), .F1(\tuner.pitch.n30 ));
  tuner_pitch_SLICE_246 \tuner.pitch.SLICE_246 ( 
    .D0(\tuner.pitch.counter[31] ), .C0(\tuner.pitch.counter[27] ), 
    .B0(\tuner.pitch.counter[23] ), .A0(\tuner.pitch.counter[29] ), 
    .F0(\tuner.pitch.n28 ));
  tuner_pitch_SLICE_247 \tuner.pitch.SLICE_247 ( .D1(\tuner.pitch.n27 ), 
    .C1(\tuner.pitch.n25 ), .B1(\tuner.pitch.n26 ), .A1(\tuner.pitch.n28 ), 
    .D0(\tuner.pitch.counter[16] ), .C0(\tuner.pitch.counter[24] ), 
    .B0(\tuner.pitch.counter[20] ), .A0(\tuner.pitch.counter[18] ), 
    .F0(\tuner.pitch.n25 ), .F1(\tuner.pitch.n3048 ));
  tuner_pitch_SLICE_248 \tuner.pitch.SLICE_248 ( 
    .D1(\tuner.freqThreshold[13] ), .C1(\tuner.pitch.counter[11] ), 
    .B1(\tuner.freqThreshold[11] ), .A1(\tuner.pitch.counter[13] ), 
    .D0(\tuner.pitch.counter[9] ), .C0(\tuner.pitch.counter[10] ), 
    .B0(\tuner.freqThreshold[9] ), .A0(\tuner.freqThreshold[10] ), 
    .F0(\tuner.pitch.n20 ), .F1(\tuner.pitch.n23 ));
  tuner_pitch_SLICE_249 \tuner.pitch.SLICE_249 ( .D1(\tuner.pitch.n18 ), 
    .C1(\tuner.pitch.n17 ), .B1(\tuner.pitch.n20 ), .A1(\tuner.pitch.n19 ), 
    .D0(\tuner.pitch.counter[8] ), .C0(\tuner.pitch.counter[0] ), 
    .B0(\tuner.freqThreshold[0] ), .A0(\tuner.freqThreshold[8] ), 
    .F0(\tuner.pitch.n17 ), .F1(\tuner.pitch.n29 ));
  tuner_howLong_SLICE_250 \tuner.howLong.SLICE_250 ( .D1(\tuner.howLong.n25 ), 
    .C1(\tuner.howLong.n18 ), .B1(\tuner.howLong.counter[15] ), 
    .A1(\durThreshold[15] ), .D0(\durThreshold[8] ), 
    .C0(\tuner.howLong.counter[8] ), .B0(\tuner.howLong.counter[16] ), 
    .A0(\durThreshold[16] ), .F0(\tuner.howLong.n18 ), 
    .F1(\tuner.howLong.n30 ));
  tuner_howLong_SLICE_252 \tuner.howLong.SLICE_252 ( 
    .D1(\tuner.durThreshold[18] ), .C1(\tuner.howLong.counter[17] ), 
    .B1(\durThreshold[17] ), .A1(\tuner.howLong.counter[18] ), 
    .D0(\tuner.howLong.counter[22] ), .C0(\tuner.howLong.counter[9] ), 
    .B0(\durThreshold[22] ), .A0(\durThreshold[9] ), .F0(\tuner.howLong.n22 ), 
    .F1(\tuner.howLong.n20 ));
  tuner_howLong_SLICE_253 \tuner.howLong.SLICE_253 ( .D1(\tuner.howLong.n20 ), 
    .C1(\tuner.howLong.n19 ), .B1(\tuner.howLong.n22 ), 
    .A1(\tuner.howLong.n21 ), .D0(\tuner.howLong.counter[20] ), 
    .C0(\tuner.howLong.counter[24] ), .B0(\durThreshold[20] ), 
    .A0(\durThreshold[24] ), .F0(\tuner.howLong.n19 ), 
    .F1(\tuner.howLong.n31 ));
  tuner_howLong_SLICE_254 \tuner.howLong.SLICE_254 ( 
    .D0(\tuner.howLong.counter[11] ), .C0(\tuner.howLong.counter[13] ), 
    .B0(\durThreshold[11] ), .A0(\durThreshold[13] ), .F0(\tuner.howLong.n24 ));
  tuner_howLong_SLICE_255 \tuner.howLong.SLICE_255 ( .D1(\tuner.howLong.n27 ), 
    .C1(\tuner.howLong.n3051 ), .B1(\tuner.howLong.n25_adj_348 ), 
    .A1(\tuner.howLong.n26 ), .D0(\tuner.howLong.n31 ), 
    .C0(\tuner.howLong.n30 ), .B0(\tuner.howLong.n23 ), 
    .A0(\tuner.howLong.n24 ), .F0(\tuner.howLong.n3051 ), 
    .F1(\tuner.howLong.counter_31__N_277 ));
  tuner_howLong_SLICE_256 \tuner.howLong.SLICE_256 ( 
    .D1(\tuner.howLong.counter[0] ), .C1(\tuner.howLong.n24_adj_347 ), 
    .B1(\tuner.howLong.counter[4] ), .A1(\tuner.howLong.counter[31] ), 
    .D0(\tuner.howLong.counter[1] ), .C0(\tuner.howLong.counter[5] ), 
    .B0(\tuner.howLong.counter[2] ), .A0(\tuner.howLong.counter[6] ), 
    .F0(\tuner.howLong.n24_adj_347 ), .F1(\tuner.howLong.n27 ));
  tuner_howLong_SLICE_258 \tuner.howLong.SLICE_258 ( 
    .DI1(\tuner.howLong.counter_31__N_277$n1 ), .D1(\tuner.howLong.n3051 ), 
    .C1(\tuner.howLong.n26 ), .B1(\tuner.howLong.n25_adj_348 ), 
    .A1(\tuner.howLong.n27 ), .D0(\tuner.howLong.counter[14] ), 
    .C0(\tuner.howLong.counter[27] ), .B0(\tuner.howLong.counter[29] ), 
    .A0(\tuner.howLong.counter[30] ), .CLK(int_osc), .Q1(done), 
    .F0(\tuner.howLong.n26 ), .F1(\tuner.howLong.counter_31__N_277$n1 ));
  aD2DT_d2d1_SLICE_260 \aD2DT.d2d1.SLICE_260 ( .D1(\flattenedMCUout[25] ), 
    .C1(\flattenedMCUout[26] ), .B1(\flattenedMCUout[24] ), 
    .A1(\flattenedMCUout[27] ), .D0(\flattenedMCUout[26] ), 
    .C0(\flattenedMCUout[25] ), .B0(\flattenedMCUout[27] ), 
    .A0(\flattenedMCUout[24] ), .F0(\durThresh1[19] ), .F1(\durThresh1[23] ));
  aD2DT_d2d0_SLICE_264 \aD2DT.d2d0.SLICE_264 ( .D1(\flattenedMCUout[34] ), 
    .C1(\flattenedMCUout[33] ), .B1(\flattenedMCUout[35] ), 
    .A1(\flattenedMCUout[32] ), .D0(\flattenedMCUout[33] ), 
    .C0(\flattenedMCUout[34] ), .B0(\flattenedMCUout[32] ), 
    .A0(\flattenedMCUout[35] ), .F0(\durThresh0[23] ), .F1(\durThresh0[19] ));
  tuner_SLICE_266 \tuner.SLICE_266 ( .DI1(\tuner.n424[2].sig_041.FeedThruLUT ), 
    .C1(\tuner.n424[2] ), .D0(\tuner.n424[1] ), .C0(nextstate_5__N_121), 
    .B0(\tuner.n424[2] ), .A0(nextstate_5__N_124), .CE(n2167), .LSR(reset_c), 
    .CLK(int_osc), .Q1(nextstate_5__N_124), .F0(n2141), 
    .F1(\tuner.n424[2].sig_041.FeedThruLUT ));
  tuner_SLICE_267 \tuner.SLICE_267 ( .D1(\tuner.n3820 ), .C1(\tuner.n3664 ), 
    .B1(nextstate_5__N_121), .A1(\tuner.n424[1] ), .D0(\tuner.n424[2] ), 
    .C0(nextstate_5__N_121), .B0(\tuner.n424[1] ), .A0(nextstate_5__N_124), 
    .F0(n2033), .F1(n1985));
  aT2FT_t2F1_SLICE_268 \aT2FT.t2F1.SLICE_268 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .D0(\flattenedMCUout[30] ), .C0(\flattenedMCUout[29] ), 
    .B0(\flattenedMCUout[28] ), .A0(\flattenedMCUout[31] ), 
    .F0(\freqThreshold1[0] ), .F1(n2638));
  aT2FT_t2F1_SLICE_269 \aT2FT.t2F1.SLICE_269 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[3] ), 
    .F1(\freqThreshold1[1] ));
  aT2FT_t2F1_SLICE_271 \aT2FT.t2F1.SLICE_271 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[10] ), 
    .F1(\freqThreshold1[2] ));
  aT2FT_t2F1_SLICE_273 \aT2FT.t2F1.SLICE_273 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[11] ), 
    .F1(\freqThreshold1[5] ));
  aT2FT_t2F1_SLICE_275 \aT2FT.t2F1.SLICE_275 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[30] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[13] ), 
    .F1(\freqThreshold1[6] ));
  aT2FT_t2F1_SLICE_277 \aT2FT.t2F1.SLICE_277 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[30] ), 
    .A0(\flattenedMCUout[31] ), .F0(n2614), .F1(\freqThreshold1[7] ));
  aT2FT_t2F1_SLICE_279 \aT2FT.t2F1.SLICE_279 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[12] ), 
    .F1(\freqThreshold1[8] ));
  aT2FT_t2F1_SLICE_281 \aT2FT.t2F1.SLICE_281 ( .D1(\flattenedMCUout[29] ), 
    .C1(\flattenedMCUout[30] ), .B1(\flattenedMCUout[31] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[30] ), 
    .C0(\flattenedMCUout[29] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[31] ), .F0(\freqThreshold1[14] ), 
    .F1(\freqThreshold1[9] ));
  aT2FT_t2F0_SLICE_282 \aT2FT.t2F0.SLICE_282 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[36] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[9] ), 
    .F1(\freqThreshold0[0] ));
  aT2FT_t2F0_SLICE_284 \aT2FT.t2F0.SLICE_284 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[10] ), 
    .F1(\freqThreshold0[8] ));
  aT2FT_t2F0_SLICE_286 \aT2FT.t2F0.SLICE_286 ( .D1(\flattenedMCUout[36] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[37] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[36] ), .B0(\flattenedMCUout[37] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[11] ), 
    .F1(\freqThreshold0[7] ));
  aT2FT_t2F0_SLICE_288 \aT2FT.t2F0.SLICE_288 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[12] ), 
    .F1(\freqThreshold0[6] ));
  aT2FT_t2F0_SLICE_290 \aT2FT.t2F0.SLICE_290 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[13] ), 
    .F1(\freqThreshold0[5] ));
  aT2FT_t2F0_SLICE_292 \aT2FT.t2F0.SLICE_292 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[38] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freqThreshold0[14] ), 
    .F1(\freqThreshold0[2] ));
  aT2FT_t2F0_SLICE_294 \aT2FT.t2F0.SLICE_294 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[36] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freqThreshold0[3] ), 
    .F1(\freqThreshold0[1] ));
  aT2FT_t2F2_SLICE_297 \aT2FT.t2F2.SLICE_297 ( .D0(\flattenedMCUout[22] ), 
    .C0(\flattenedMCUout[21] ), .A0(\flattenedMCUout[23] ), .F0(n2636));
  tuner_pitch_SLICE_301 \tuner.pitch.SLICE_301 ( .D0(\tuner.pitch.counter[1] ), 
    .C0(\tuner.freqThreshold[12] ), .B0(\tuner.pitch.counter[12] ), 
    .A0(\tuner.freqThreshold[1] ), .F0(\tuner.pitch.n19 ));
  tuner_pitch_SLICE_303 \tuner.pitch.SLICE_303 ( 
    .D0(\tuner.pitch.counter[30] ), .C0(\tuner.pitch.counter[21] ), 
    .B0(\tuner.pitch.counter[19] ), .A0(\tuner.pitch.counter[22] ), 
    .F0(\tuner.pitch.n27 ));
  tuner_pitch_SLICE_304 \tuner.pitch.SLICE_304 ( .D0(\tuner.pitch.counter[5] ), 
    .C0(\tuner.pitch.counter[6] ), .B0(\tuner.freqThreshold[5] ), 
    .A0(\tuner.freqThreshold[6] ), .F0(\tuner.pitch.n21 ));
  tuner_pitch_SLICE_308 \tuner.pitch.SLICE_308 ( .D0(\tuner.pitch.n30 ), 
    .C0(\tuner.pitch.n29 ), .B0(\tuner.pitch.n3048 ), .A0(makingMusic_c), 
    .F0(\tuner.pitch.counter_31__N_342 ));
  tuner_pitch_SLICE_309 \tuner.pitch.SLICE_309 ( .D0(\tuner.pitch.counter[2] ), 
    .C0(\tuner.pitch.counter[4] ), .B0(\tuner.freqThreshold[4] ), 
    .A0(\tuner.freqThreshold[2] ), .F0(\tuner.pitch.n18 ));
  tuner_howLong_SLICE_310 \tuner.howLong.SLICE_310 ( 
    .D1(\tuner.durThreshold[19] ), .C1(\tuner.howLong.counter[19] ), 
    .B1(\tuner.howLong.counter[21] ), .A1(\durThreshold[21] ), 
    .D0(\tuner.howLong.counter[10] ), .C0(\tuner.durThreshold[19] ), 
    .B0(\tuner.howLong.counter[12] ), .A0(\durThreshold[12] ), 
    .F0(\tuner.howLong.n21 ), .F1(\tuner.howLong.n23 ));
  SLICE_312 SLICE_312( .DI1(\tuner.n2138 ), .D1(\tuner.rep ), 
    .C1(nextstate_5__N_124), .B1(done), .C0(done), .A0(reset_c), .LSR(reset_c), 
    .CLK(int_osc), .Q1(\tuner.nextstate_5__N_125 ), .F0(n2167), 
    .F1(\tuner.n2138 ));
  tuner_pitch_SLICE_314 \tuner.pitch.SLICE_314 ( .D0(\tuner.pitch.counter[3] ), 
    .C0(\tuner.freqThreshold[3] ), .B0(\tuner.freqThreshold[14] ), 
    .A0(\tuner.pitch.counter[14] ), .F0(\tuner.pitch.n22 ));
  tuner_pitch_SLICE_315 \tuner.pitch.SLICE_315 ( 
    .D0(\tuner.pitch.counter[25] ), .C0(\tuner.pitch.counter[28] ), 
    .B0(\tuner.pitch.counter[26] ), .A0(\tuner.pitch.counter[17] ), 
    .F0(\tuner.pitch.n26 ));
  tuner_howLong_SLICE_316 \tuner.howLong.SLICE_316 ( .DI1(\tuner.n4301 ), 
    .D1(\tuner.n4298 ), .C1(\tuner.n2009 ), .B1(\durThresh1[23] ), 
    .A1(\durThresh0[23] ), .D0(\tuner.howLong.counter[7] ), 
    .C0(\tuner.howLong.counter[23] ), .B0(\tuner.durThreshold[23] ), 
    .A0(\durThreshold[7] ), .CE(n2141), .CLK(int_osc), 
    .Q1(\tuner.durThreshold[23] ), .F0(\tuner.howLong.n25 ), 
    .F1(\tuner.n4301 ));
  tuner_howLong_SLICE_318 \tuner.howLong.SLICE_318 ( 
    .D0(\tuner.howLong.counter[3] ), .C0(\tuner.howLong.counter[28] ), 
    .B0(\tuner.howLong.counter[25] ), .A0(\tuner.howLong.counter[26] ), 
    .F0(\tuner.howLong.n25_adj_348 ));
  aT2FT_t2F3_SLICE_319 \aT2FT.t2F3.SLICE_319 ( .D0(\flattenedMCUout[12] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[13] ), 
    .A0(\flattenedMCUout[14] ), .F0(n2626));
  enabler_SLICE_320 \enabler.SLICE_320 ( .DI1(n5), .D1(nextstate_5__N_124), 
    .C1(\enabler.n2321 ), .B1(nextstate_5__N_126), .A1(\counter[0] ), 
    .D0(nextstate_5__N_121), .C0(stopCountFlag), .B0(\counter[0] ), 
    .LSR(nextstate_5__N_126), .CLK(int_osc), .Q1(\counter[0] ), 
    .F0(\enabler.n2321 ), .F1(n5));
  enabler_SLICE_321 \enabler.SLICE_321 ( 
    .DI1(\enabler.twoAgoCE.sig_043.FeedThruLUT ), .D1(\enabler.twoAgoCE ), 
    .D0(lastCE), .C0(makingMusic_c), .B0(ce_c), .CLK(int_osc), .Q1(lastCE), 
    .F0(\enabler.flattenedMCUout_39__N_41 ), 
    .F1(\enabler.twoAgoCE.sig_043.FeedThruLUT ));
  enabler_SLICE_322 \enabler.SLICE_322 ( .DI1(n3342), .D1(nextstate_5__N_124), 
    .C1(nextstate_5__N_121), .B1(stopCountFlag), .A1(nextstate_5__N_126), 
    .D0(nextstate_5__N_121), .C0(nextstate_5__N_124), .B0(nextstate_5__N_126), 
    .A0(stopCountFlag), .CLK(int_osc), .Q1(stopCountFlag), .F0(n2169), 
    .F1(n3342));
  SLICE_323 SLICE_323( .F0(VCC_net));
  tuner_SLICE_324 \tuner.SLICE_324 ( .D0(\tuner.n3836 ), .C0(\tuner.n3691 ), 
    .B0(\tuner.n424[1] ), .A0(nextstate_5__N_121), .F0(n1971));
  spi_newFlattenedMCUout_i0 \spi.newFlattenedMCUout_i0 ( .PADDI(sdi_c), 
    .INCLK(sck_c), .DI0(\newFlattenedMCUout[0] ));
  hf_osc hf_osc( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(int_osc));
  ce ce_I( .PADDI(ce_c), .ce(ce));
  sdi sdi_I( .PADDI(sdi_c), .sdi(sdi));
  sck sck_I( .PADDI(sck_c), .sck(sck));
  reset reset_I( .PADDI(reset_c), .reset(reset));
  makingMusic makingMusic_I( .PADDO(makingMusic_c), .makingMusic(makingMusic));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module tuner_pitch_SLICE_0 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module tuner_pitch_SLICE_1 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_pitch_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/pitch/counter_147_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/pitch/counter_147__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/pitch/counter_147__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_17 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_20 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_21 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_22 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_23 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_31 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/howLong/counter_146__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_howLong_SLICE_33 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \tuner/howLong/counter_146_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/howLong/counter_146__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module spi_SLICE_34 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_34_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_34_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_36 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 SLICE_36_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i39 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_37_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_37_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i37 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i38 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_39 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_39_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_39_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i35 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i36 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_41 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_41_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_41_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i33 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i34 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_43 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_43_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_43_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_45 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_45_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_45_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_47 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_47_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_47_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_49 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_49_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_49_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_51 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_51_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_51_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_53 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_53_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_53_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_55 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_55_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_55_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_57 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_57_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_57_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_59 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_59_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_59_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_61 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_61_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_61_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_63 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_63_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_63_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_65 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_65_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_65_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_67 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_67_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_67_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_68 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_68_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_68_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_70 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_70_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_70_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module tuner_SLICE_73 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \tuner/n4310_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \tuner/n4304_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_74 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 \tuner/i2_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \tuner/i1374_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20007 \tuner/state_FSM_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF3F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20007 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_76 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 SLICE_76_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_76_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \tuner/state_FSM_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module tuner_SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \tuner/n4358_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 \tuner.i2748_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i14 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i15 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x555C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \tuner/n4376_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \tuner/n4370_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i12 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i13 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \tuner/n4400_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 \tuner/n4394_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i10 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i11 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFC22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_86 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \tuner/n4382_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \tuner/n4388_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xEE30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 \tuner/n4352_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \tuner/n4364_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module tuner_SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40012 \tuner.i2769_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 \tuner/n4346_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x555C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_92 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \tuner/n4322_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \tuner/n4328_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/freqThreshold_i0_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/freqThreshold_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_95 ( input DI0, D0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40014 \tuner/i170_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/counter__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i1482_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i1483_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i1480_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 i1481_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_100 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i1478_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i1479_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_102 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i1476_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i1477_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_104 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i1474_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i1475_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_106 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40018 i1472_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i1473_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \tuner/durThreshold_i0_i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_108 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 i1463_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \tuner/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \enabler/start_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/makingMusic ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x00DC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x1110") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI0, D0, C0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40016 i1470_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/durThreshold_i0_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module tuner_SLICE_111 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40022 \tuner.i2766_3_lut$r0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \tuner/n4334_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i18 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/durThreshold_i0_i19 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x10FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_114 ( input DI0, D0, C0, B0, A0, CLK, output Q0, F0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40023 \tuner/pitch/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \tuner/pitch/pwm ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_117_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_117_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_120 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_120_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_120_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i33 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i34 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_122 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_122_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_122_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i31 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i32 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_124 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_124_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_124_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i29 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i30 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_126 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_126_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_126_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i27 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i28 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_128 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_128_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_128_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i25 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i26 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_130 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_130_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_130_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i23 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i24 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_132 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_132_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_132_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i21 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i22 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_134 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_134_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_134_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i19 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i20 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_136 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_136_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_136_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i17 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i18 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_138 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_138_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_138_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i16 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_140 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_140_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_140_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_142 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_142_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_142_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_144 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_144_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 SLICE_144_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_146_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_146_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_148 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_148_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_148_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_150 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_150_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_150_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \enabler/flattenedMCUout__0__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \enabler/flattenedMCUout__0__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_153 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 SLICE_153_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \enabler/twoAgoCE_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module tuner_SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40025 \tuner/n4340_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \tuner/n2011_bdd_4_lut_9 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xF4A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xDDA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 \tuner/n4316_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \tuner/n2011_bdd_4_lut_5 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xB8CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d2_SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40029 \tuner/n2011_bdd_4_lut_8 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \aD2DT/d2d2/i763_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xF388") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xCBD3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d2_SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40031 \tuner/n2011_bdd_4_lut_2 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \aD2DT/d2d2/Mux_740_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xE6A2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x342C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d2_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40033 \tuner/i2792_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \aD2DT/d2d2/i1780_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x0F44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFCEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d2_SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40033 \tuner/i2765_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \aD2DT/d2d2/i1784_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d1_SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40036 \aD2DT/d2d1/i1769_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 \aD2DT/d2d1/i1765_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_167 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40038 \tuner/i2791_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 \aD2DT/d2d0/i1809_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_169 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40040 \tuner/i2764_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 \aD2DT/d2d0/i1869_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_170 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2916_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \aT2FT/t2F3/i533_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x47DB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_172 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2906_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \aT2FT/t2F3/i1401_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x26AE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut_3 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \aT2FT/t2F2/i1392_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x1CDC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \aT2FT/t2F2/i383_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x35E7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut_18 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \aT2FT/t2F2/i382_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xDB26") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut_17 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \aT2FT/t2F2/i405_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFC7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut_16 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \aT2FT/t2F2/i406_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x3BE9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut_15 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40050 \aT2FT/t2F2/i367_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x1BD5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_186 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 \tuner/n2011_bdd_4_lut_14 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \aT2FT/t2F2/i366_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xE6C4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xAB90") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40053 \tuner/n2011_bdd_4_lut_13 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \aT2FT/t2F2/i426_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xF588") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xCB72") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_190 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 \tuner/n2011_bdd_4_lut_12 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \aT2FT/t2F2/i350_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xE26B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_192 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 \tuner/n2011_bdd_4_lut_11 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \aT2FT/t2F2/i427_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x1DB2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 \tuner/n2011_bdd_4_lut_10 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \aT2FT/t2F2/i439_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x3522") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_196 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40058 \tuner/i2768_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \tuner/i1331_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x3530") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F2_SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40060 \aT2FT/t2F2/i475_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \aT2FT/t2F2/i440_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x1E3E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFF9E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_198 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40018 \tuner/i2767_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \aT2FT/t2F0/i1043_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xEBFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_200 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2914_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \aT2FT/t2F3/i625_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x07FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_202 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 \tuner/i2747_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \tuner/i2943_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x2272") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x0AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_204 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40066 \tuner/i2746_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \aT2FT/t2F0/i1877_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xAAFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \tuner/n2011_bdd_4_lut_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \aT2FT/t2F2/i2757_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xDC34") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_208 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 \tuner/n2011_bdd_4_lut_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \aT2FT/t2F2/i461_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x1508") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_210 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2924_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \enabler/i1_4_lut_adj_14 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_212 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40071 \tuner/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 \tuner/counter_1__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xB380") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_215 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40073 \tuner/n2011_bdd_4_lut_4 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \tuner/i37_1_lut_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xDA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x000F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_216 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2928_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \aT2FT/t2F3/i611_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x0720") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_218 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2958_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \aT2FT/t2F3/i2772_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xAE46") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_220 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2957_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \enabler/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xADB5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_222 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2935_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \enabler/i1_4_lut_adj_15 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_224 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2947_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \aT2FT/t2F3/i589_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x3252") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_226 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \tuner/i2929_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \aT2FT/t2F3/i577_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x27D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_228 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2954_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \aT2FT/t2F3/i500_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xD879") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_230 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40080 \tuner/i2946_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \aT2FT/t2F3/i576_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xB95C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_232 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2905_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \enabler/i1622_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x324C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_234 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2953_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \aT2FT/t2F3/i516_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xA98C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_236 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2948_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \aT2FT/t2F3/i517_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x1DB5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_238 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2949_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \aT2FT/t2F3/i556_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x7E59") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_240 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2952_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \aT2FT/t2F3/i555_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xEE7E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_242 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \tuner/i2962_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \aT2FT/t2F3/i532_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xBD52") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_244 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40090 \tuner/pitch/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \tuner/pitch/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_246 ( input D0, C0, B0, A0, output F0 );

  lut40092 \tuner/pitch/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_247 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40093 \tuner/pitch/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40094 \tuner/pitch/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40095 \tuner/pitch/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \tuner/pitch/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_249 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40097 \tuner/pitch/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \tuner/pitch/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40099 \tuner/howLong/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \tuner/howLong/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_252 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40095 \tuner/howLong/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \tuner/howLong/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40097 \tuner/howLong/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \tuner/howLong/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_254 ( input D0, C0, B0, A0, output F0 );

  lut40096 \tuner/howLong/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_255 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40101 \tuner/howLong/i3056_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40094 \tuner/howLong/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_256 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40102 \tuner/howLong/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \tuner/howLong/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_258 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40104 \tuner.howLong.SLICE_258_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40105 \tuner/howLong/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/howLong/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d1_SLICE_260 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40106 \aD2DT/d2d1/Mux_639_i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40107 \aD2DT/d2d1/i662_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x524A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xCDB3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aD2DT_d2d0_SLICE_264 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40108 \aD2DT/d2d0/i1115_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40109 \aD2DT/d2d0/Mux_1092_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xCDB3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0x524A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_266 ( input DI1, C1, D0, C0, B0, A0, CE, LSR, CLK, output 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40002 \tuner.SLICE_266_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \tuner/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/state_FSM_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40111 \tuner.i2766_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40112 \tuner.i2_3_lut_4_lut_adj_16 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0x10FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_268 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40113 \aT2FT/t2F1/i1947_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40114 \aT2FT/t2F1/i1383_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0x3F50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_269 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40115 \aT2FT/t2F1/i325_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 \aT2FT/t2F1/i2754_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0x5676") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xCD70") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_271 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40117 \aT2FT/t2F1/i311_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40118 \aT2FT/t2F1/i233_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0x0262") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0x35E7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_273 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40119 \aT2FT/t2F1/i289_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 \aT2FT/t2F1/i232_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0x0B4C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xC96E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_275 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40121 \aT2FT/t2F1/i277_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 \aT2FT/t2F1/i216_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0x47A6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xC9D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40123 \aT2FT/t2F1/i276_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \aT2FT/t2F1/i290_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0xB58E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_279 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40124 \aT2FT/t2F1/i256_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40125 \aT2FT/t2F1/i217_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0x5ECB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0x385F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F1_SLICE_281 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40126 \aT2FT/t2F1/i255_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 \aT2FT/t2F1/i200_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0xBFF4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xD2AB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40128 \aT2FT/t2F0/i1410_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40129 \aT2FT/t2F0/i1008_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0x5F30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0xDFF2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_284 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40130 \aT2FT/t2F0/i1009_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40131 \aT2FT/t2F0/i986_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0x3EAD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x53E7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_286 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40132 \aT2FT/t2F0/i1029_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40133 \aT2FT/t2F0/i985_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xE52E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xE17A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40134 \aT2FT/t2F0/i1030_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40135 \aT2FT/t2F0/i970_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  LUT4 #("0x2C76") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  LUT4 #("0x538F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_290 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40136 \aT2FT/t2F0/i1042_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 \aT2FT/t2F0/i969_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  LUT4 #("0x02DA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  LUT4 #("0xF182") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_292 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40138 \aT2FT/t2F0/i1064_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40139 \aT2FT/t2F0/i953_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  LUT4 #("0x0464") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  LUT4 #("0xB4CD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F0_SLICE_294 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40140 \aT2FT/t2F0/i1078_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40141 \aT2FT/t2F0/i2775_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  LUT4 #("0x5766") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  LUT4 #("0xC7D0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F2_SLICE_297 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40142 \aT2FT/t2F2/i1945_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  LUT4 #("0xFAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_301 ( input D0, C0, B0, A0, output F0 );

  lut40143 \tuner/pitch/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_303 ( input D0, C0, B0, A0, output F0 );

  lut40092 \tuner/pitch/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_304 ( input D0, C0, B0, A0, output F0 );

  lut40096 \tuner/pitch/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_308 ( input D0, C0, B0, A0, output F0 );

  lut40144 \tuner/pitch/i3053_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  LUT4 #("0x5557") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_309 ( input D0, C0, B0, A0, output F0 );

  lut40098 \tuner/pitch/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_310 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40145 \tuner/howLong/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40146 \tuner/howLong/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_312 ( input DI1, D1, C1, B1, C0, A0, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40147 \tuner/i1_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40148 i1485_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \tuner/state_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_pitch_SLICE_314 ( input D0, C0, B0, A0, output F0 );

  lut40091 \tuner/pitch/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_pitch_SLICE_315 ( input D0, C0, B0, A0, output F0 );

  lut40092 \tuner/pitch/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tuner_howLong_SLICE_316 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40149 \tuner/n4298_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40150 \tuner/howLong/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/durThreshold_i0_i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_howLong_SLICE_318 ( input D0, C0, B0, A0, output F0 );

  lut40151 \tuner/howLong/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2FT_t2F3_SLICE_319 ( input D0, C0, B0, A0, output F0 );

  lut40152 \aT2FT/t2F3/i590_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  LUT4 #("0xFFB6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module enabler_SLICE_320 ( input DI1, D1, C1, B1, A1, D0, C0, B0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40153 \enabler/i1642_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40154 \enabler/i1639_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \tuner/counter__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  LUT4 #("0x7466") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module enabler_SLICE_321 ( input DI1, D1, D0, C0, B0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut4 \enabler.SLICE_321_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40155 \enabler/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \enabler/lastCE_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module enabler_SLICE_322 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40156 \enabler/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40157 \enabler/i1_4_lut_adj_13 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \tuner/stopCountFlag_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  LUT4 #("0x8D8C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  LUT4 #("0xCCDC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_323 ( output F0 );
  wire   GNDI;

  lut40158 i3402( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module tuner_SLICE_324 ( input D0, C0, B0, A0, output F0 );

  lut40159 \tuner.i2793_3_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  LUT4 #("0x10FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module spi_newFlattenedMCUout_i0 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \spi/newFlattenedMCUout_i0 ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module hf_osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hf_osc( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b01";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module ce ( output PADDI, input ce );
  wire   GNDI;

  BB_B_B \ce_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(ce));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (ce => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module sdi ( output PADDI, input sdi );
  wire   GNDI;

  BB_B_B \sdi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sdi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sck ( output PADDI, input sck );
  wire   GNDI;

  BB_B_B \sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module reset ( output PADDI, input reset );
  wire   GNDI;

  BB_B_B \reset_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(reset));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (reset => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module makingMusic ( input PADDO, output makingMusic );
  wire   VCCI;

  BB_B_B \makingMusic_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(makingMusic));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => makingMusic) = (0:0:0,0:0:0);
  endspecify

endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule
