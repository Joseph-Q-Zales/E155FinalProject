
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Thu Dec  1 18:13:33 2022
// Netlist written on Thu Dec  1 18:13:41 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( ce, sdi, sck, pwm, clk );
  input  ce, sdi, sck, clk;
  output pwm;
  wire   \makeMusic.pitch.n8368 , \makeMusic.pitch.n5958 , VCC_net, 
         \makeMusic.pitch.threshold_31__N_326[31] , 
         \makeMusic.pitch.threshold[31] , \makeMusic.pitch.n8365 , 
         \makeMusic.pitch.n5956 , \makeMusic.pitch.threshold[28] , 
         \makeMusic.pitch.threshold[30] , \makeMusic.pitch.n8362 , 
         \makeMusic.pitch.n5954 , \makeMusic.pitch.threshold[26] , 
         \makeMusic.pitch.threshold[27] , \makeMusic.pitch.n133[12] , 
         \makeMusic.pitch.n133[11] , \makeMusic.pitch.n8392 , 
         \makeMusic.pitch.counter[12] , \makeMusic.pitch.n5897 , 
         \makeMusic.pitch.counter[11] , \makeMusic.pitch.n5282 , int_osc, 
         \makeMusic.pitch.n5899 , \makeMusic.pitch.n133[10] , 
         \makeMusic.pitch.n133[9] , \makeMusic.pitch.n8389 , 
         \makeMusic.pitch.counter[10] , \makeMusic.pitch.n5895 , 
         \makeMusic.pitch.counter[9] , \makeMusic.pitch.n8359 , 
         \makeMusic.pitch.n5952 , \makeMusic.pitch.threshold[24] , 
         \makeMusic.pitch.threshold[25] , \makeMusic.pitch.n8356 , 
         \makeMusic.pitch.n5950 , \makeMusic.pitch.threshold[20] , 
         \makeMusic.pitch.threshold[23] , \makeMusic.pitch.n8353 , 
         \makeMusic.pitch.n5948 , \makeMusic.pitch.threshold[18] , 
         \makeMusic.pitch.threshold[19] , \makeMusic.pitch.n8350 , 
         \makeMusic.pitch.n5946 , \makeMusic.pitch.threshold[16] , 
         \makeMusic.pitch.threshold[17] , \makeMusic.pitch.n8347 , 
         \makeMusic.pitch.n5944 , \makeMusic.pitch.threshold[13] , 
         \makeMusic.pitch.threshold[15] , \makeMusic.pitch.n8344 , 
         \makeMusic.pitch.n5942 , \makeMusic.pitch.threshold[11] , 
         \makeMusic.pitch.threshold[12] , \makeMusic.pitch.n133[8] , 
         \makeMusic.pitch.n133[7] , \makeMusic.pitch.n8386 , 
         \makeMusic.pitch.counter[8] , \makeMusic.pitch.n5893 , 
         \makeMusic.pitch.counter[7] , \makeMusic.pitch.n8341 , 
         \makeMusic.pitch.threshold[10] , \makeMusic.pitch.n133[31] , 
         \makeMusic.pitch.n8422 , \makeMusic.pitch.n5917 , 
         \makeMusic.pitch.counter[31] , \makeMusic.pitch.n133[30] , 
         \makeMusic.pitch.n133[29] , \makeMusic.pitch.n8419 , 
         \makeMusic.pitch.counter[30] , \makeMusic.pitch.n5915 , 
         \makeMusic.pitch.counter[29] , \makeMusic.pitch.n133[28] , 
         \makeMusic.pitch.n133[27] , \makeMusic.pitch.n8416 , 
         \makeMusic.pitch.counter[28] , \makeMusic.pitch.n5913 , 
         \makeMusic.pitch.counter[27] , \makeMusic.pitch.n133[26] , 
         \makeMusic.pitch.n133[25] , \makeMusic.pitch.n8413 , 
         \makeMusic.pitch.counter[26] , \makeMusic.pitch.n5911 , 
         \makeMusic.pitch.counter[25] , \makeMusic.pitch.n133[24] , 
         \makeMusic.pitch.n133[23] , \makeMusic.pitch.n8410 , 
         \makeMusic.pitch.counter[24] , \makeMusic.pitch.n5909 , 
         \makeMusic.pitch.counter[23] , \makeMusic.pitch.n133[22] , 
         \makeMusic.pitch.n133[21] , \makeMusic.pitch.n8407 , 
         \makeMusic.pitch.counter[22] , \makeMusic.pitch.n5907 , 
         \makeMusic.pitch.counter[21] , \makeMusic.pitch.n133[20] , 
         \makeMusic.pitch.n133[19] , \makeMusic.pitch.n8404 , 
         \makeMusic.pitch.counter[20] , \makeMusic.pitch.n5905 , 
         \makeMusic.pitch.counter[19] , \makeMusic.pitch.n133[18] , 
         \makeMusic.pitch.n133[17] , \makeMusic.pitch.n8401 , 
         \makeMusic.pitch.counter[18] , \makeMusic.pitch.n5903 , 
         \makeMusic.pitch.counter[17] , \makeMusic.pitch.n133[0] , 
         \makeMusic.pitch.n8374 , \makeMusic.pitch.counter[0] , 
         \makeMusic.pitch.n5887 , \makeMusic.pitch.n133[2] , 
         \makeMusic.pitch.n133[1] , \makeMusic.pitch.n8377 , 
         \makeMusic.pitch.counter[2] , \makeMusic.pitch.counter[1] , 
         \makeMusic.pitch.n5889 , \makeMusic.pitch.n133[4] , 
         \makeMusic.pitch.n133[3] , \makeMusic.pitch.n8380 , 
         \makeMusic.pitch.counter[4] , \makeMusic.pitch.counter[3] , 
         \makeMusic.pitch.n5891 , \makeMusic.pitch.n133[6] , 
         \makeMusic.pitch.n133[5] , \makeMusic.pitch.n8383 , 
         \makeMusic.pitch.counter[6] , \makeMusic.pitch.counter[5] , 
         \makeMusic.pitch.n133[16] , \makeMusic.pitch.n133[15] , 
         \makeMusic.pitch.n8398 , \makeMusic.pitch.counter[16] , 
         \makeMusic.pitch.n5901 , \makeMusic.pitch.counter[15] , 
         \makeMusic.pitch.n133[14] , \makeMusic.pitch.n133[13] , 
         \makeMusic.pitch.n8395 , \makeMusic.pitch.counter[14] , 
         \makeMusic.pitch.counter[13] , \makeMusic.howLong.n8302 , 
         \makeMusic.howLong.n982[9] , \makeMusic.howLong.n632[9] , 
         \makeMusic.howLong.n5839 , \makeMusic.howLong.n982[8] , 
         \makeMusic.howLong.n632[8] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[19] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[20] , 
         \makeMusic.howLong.n5841 , \makeMusic.howLong.n8329 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[29] , 
         \makeMusic.howLong.n5936 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[28] , 
         \makeMusic.howLong.THRESHOLD[28] , \makeMusic.howLong.THRESHOLD[29] , 
         \makeMusic.howLong.n5938 , \makeMusic.howLong.n8332 , 
         \makeMusic.howLong.n632[19] , \makeMusic.howLong.n5849 , 
         \makeMusic.howLong.n632[18] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[30] , 
         \makeMusic.howLong.n5851 , \makeMusic.howLong.n8323 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[27] , 
         \makeMusic.howLong.n5934 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[26] , 
         \makeMusic.howLong.THRESHOLD[26] , \makeMusic.howLong.THRESHOLD[27] , 
         \makeMusic.howLong.n8308 , \makeMusic.howLong.n982[11] , 
         \makeMusic.howLong.n632[11] , \makeMusic.howLong.n982[10] , 
         \makeMusic.howLong.n632[10] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[21] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[22] , 
         \makeMusic.howLong.n5843 , \makeMusic.howLong.n8338 , 
         \makeMusic.howLong.n632[20] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[31] , 
         \makeMusic.howLong.n8317 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[25] , 
         \makeMusic.howLong.n5932 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[24] , 
         \makeMusic.howLong.THRESHOLD[24] , \makeMusic.howLong.THRESHOLD[25] , 
         \makeMusic.howLong.n8296 , \makeMusic.howLong.n982[7] , 
         \makeMusic.howLong.n632[7] , \makeMusic.howLong.n5837 , 
         \makeMusic.howLong.n982[6] , \makeMusic.howLong.n632[6] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[17] , 
         \makeMusic.howLong.THRESHOLD_31__N_133[18] , 
         \makeMusic.howLong.n8311 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[23] , 
         \makeMusic.howLong.n5930 , \makeMusic.howLong.THRESHOLD[22] , 
         \makeMusic.howLong.THRESHOLD[23] , \makeMusic.howLong.n8305 , 
         \makeMusic.howLong.n5928 , \makeMusic.howLong.THRESHOLD[20] , 
         \makeMusic.howLong.THRESHOLD[21] , \makeMusic.howLong.n8299 , 
         \makeMusic.howLong.n5926 , \makeMusic.howLong.THRESHOLD[18] , 
         \makeMusic.howLong.THRESHOLD[19] , \makeMusic.howLong.n8290 , 
         \makeMusic.howLong.n5924 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[16] , 
         \makeMusic.howLong.THRESHOLD[16] , \makeMusic.howLong.THRESHOLD[17] , 
         \makeMusic.howLong.n8293 , \makeMusic.howLong.n982[5] , 
         \makeMusic.howLong.n632[5] , \makeMusic.howLong.n8335 , 
         \makeMusic.howLong.THRESHOLD[30] , \makeMusic.howLong.THRESHOLD[31] , 
         \makeMusic.howLong.n8287 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[15] , 
         \makeMusic.howLong.n5922 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[14] , 
         \makeMusic.howLong.THRESHOLD[14] , \makeMusic.howLong.THRESHOLD[15] , 
         \makeMusic.howLong.n8284 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[13] , 
         \makeMusic.howLong.n5920 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[12] , 
         \makeMusic.howLong.THRESHOLD[12] , \makeMusic.howLong.THRESHOLD[13] , 
         \makeMusic.howLong.n8314 , \makeMusic.howLong.n632[13] , 
         \makeMusic.howLong.n982[12] , \makeMusic.howLong.n632[12] , 
         \makeMusic.howLong.n5845 , \makeMusic.howLong.n8281 , 
         \makeMusic.howLong.THRESHOLD_31__N_133[11] , 
         \makeMusic.howLong.THRESHOLD[11] , \makeMusic.howLong.n8320 , 
         \makeMusic.howLong.n632[15] , \makeMusic.howLong.n632[14] , 
         \makeMusic.howLong.n5847 , \makeMusic.howLong.n8326 , 
         \makeMusic.howLong.n632[17] , \makeMusic.howLong.n632[16] , 
         \makeMusic.howLong.n133[0] , \makeMusic.howLong.n8371 , 
         \makeMusic.howLong.counter[0] , \makeMusic.howLong.counter_31__N_293 , 
         \makeMusic.howLong.n5854 , \makeMusic.howLong.n133[2] , 
         \makeMusic.howLong.n133[1] , \makeMusic.howLong.n8425 , 
         \makeMusic.howLong.counter[2] , \makeMusic.howLong.counter[1] , 
         \makeMusic.howLong.n5856 , \makeMusic.howLong.n133[4] , 
         \makeMusic.howLong.n133[3] , \makeMusic.howLong.n8428 , 
         \makeMusic.howLong.counter[4] , \makeMusic.howLong.counter[3] , 
         \makeMusic.howLong.n5858 , \makeMusic.howLong.n133[6] , 
         \makeMusic.howLong.n133[5] , \makeMusic.howLong.n8431 , 
         \makeMusic.howLong.counter[6] , \makeMusic.howLong.counter[5] , 
         \makeMusic.howLong.n5860 , \makeMusic.howLong.n133[8] , 
         \makeMusic.howLong.n133[7] , \makeMusic.howLong.n8434 , 
         \makeMusic.howLong.counter[8] , \makeMusic.howLong.counter[7] , 
         \makeMusic.howLong.n5862 , \makeMusic.howLong.n133[10] , 
         \makeMusic.howLong.n133[9] , \makeMusic.howLong.n8437 , 
         \makeMusic.howLong.counter[10] , \makeMusic.howLong.counter[9] , 
         \makeMusic.howLong.n5864 , \makeMusic.howLong.n133[12] , 
         \makeMusic.howLong.n133[11] , \makeMusic.howLong.n8440 , 
         \makeMusic.howLong.counter[12] , \makeMusic.howLong.counter[11] , 
         \makeMusic.howLong.n5866 , \makeMusic.howLong.n133[14] , 
         \makeMusic.howLong.n133[13] , \makeMusic.howLong.n8443 , 
         \makeMusic.howLong.counter[14] , \makeMusic.howLong.counter[13] , 
         \makeMusic.howLong.n5868 , \makeMusic.howLong.n133[16] , 
         \makeMusic.howLong.n133[15] , \makeMusic.howLong.n8446 , 
         \makeMusic.howLong.counter[16] , \makeMusic.howLong.counter[15] , 
         \makeMusic.howLong.n5870 , \makeMusic.howLong.n133[18] , 
         \makeMusic.howLong.n133[17] , \makeMusic.howLong.n8449 , 
         \makeMusic.howLong.counter[18] , \makeMusic.howLong.counter[17] , 
         \makeMusic.howLong.n5872 , \makeMusic.howLong.n133[20] , 
         \makeMusic.howLong.n133[19] , \makeMusic.howLong.n8452 , 
         \makeMusic.howLong.counter[20] , \makeMusic.howLong.counter[19] , 
         \makeMusic.howLong.n5874 , \makeMusic.howLong.n133[22] , 
         \makeMusic.howLong.n133[21] , \makeMusic.howLong.n8455 , 
         \makeMusic.howLong.counter[22] , \makeMusic.howLong.counter[21] , 
         \makeMusic.howLong.n5876 , \makeMusic.howLong.n133[24] , 
         \makeMusic.howLong.n133[23] , \makeMusic.howLong.n8458 , 
         \makeMusic.howLong.counter[24] , \makeMusic.howLong.counter[23] , 
         \makeMusic.howLong.n5878 , \makeMusic.howLong.n133[26] , 
         \makeMusic.howLong.n133[25] , \makeMusic.howLong.n8461 , 
         \makeMusic.howLong.counter[26] , \makeMusic.howLong.counter[25] , 
         \makeMusic.howLong.n5880 , \makeMusic.howLong.n133[28] , 
         \makeMusic.howLong.n133[27] , \makeMusic.howLong.n8464 , 
         \makeMusic.howLong.counter[28] , \makeMusic.howLong.counter[27] , 
         \makeMusic.howLong.n5882 , \makeMusic.howLong.n133[30] , 
         \makeMusic.howLong.n133[29] , \makeMusic.howLong.n8467 , 
         \makeMusic.howLong.counter[30] , \makeMusic.howLong.counter[29] , 
         \makeMusic.howLong.n5884 , \makeMusic.howLong.n133[31] , 
         \makeMusic.howLong.n8470 , \makeMusic.howLong.counter[31] , 
         \newFlattenedMCUout[10].sig_021.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_000.FeedThruLUT , 
         \newFlattenedMCUout[10] , \newFlattenedMCUout[11] , n5264, ce_c, 
         \flattenedMCUout[11] , \flattenedMCUout[10] , 
         \newFlattenedMCUout[13].sig_002.FeedThruLUT , 
         \newFlattenedMCUout[12].sig_001.FeedThruLUT , 
         \newFlattenedMCUout[13] , \newFlattenedMCUout[12] , 
         \flattenedMCUout[12] , \flattenedMCUout[13] , 
         \newFlattenedMCUout[15].sig_004.FeedThruLUT , 
         \newFlattenedMCUout[14].sig_003.FeedThruLUT , 
         \newFlattenedMCUout[15] , \newFlattenedMCUout[14] , 
         \flattenedMCUout[14] , \flattenedMCUout[15] , 
         \newFlattenedMCUout[1].sig_064.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_005.FeedThruLUT , \newFlattenedMCUout[1] , 
         \newFlattenedMCUout[0] , \flattenedMCUout[0] , \flattenedMCUout[1] , 
         \newFlattenedMCUout[17].sig_007.FeedThruLUT , 
         \newFlattenedMCUout[16].sig_006.FeedThruLUT , 
         \newFlattenedMCUout[17] , \newFlattenedMCUout[16] , 
         \flattenedMCUout[16] , \flattenedMCUout[17] , 
         \newFlattenedMCUout[19].sig_009.FeedThruLUT , 
         \newFlattenedMCUout[18].sig_008.FeedThruLUT , 
         \newFlattenedMCUout[19] , \newFlattenedMCUout[18] , 
         \flattenedMCUout[18] , \flattenedMCUout[19] , 
         \newFlattenedMCUout[21].sig_011.FeedThruLUT , 
         \newFlattenedMCUout[20].sig_010.FeedThruLUT , 
         \newFlattenedMCUout[21] , \newFlattenedMCUout[20] , 
         \flattenedMCUout[20] , \flattenedMCUout[21] , 
         \newFlattenedMCUout[23].sig_013.FeedThruLUT , 
         \newFlattenedMCUout[22].sig_012.FeedThruLUT , 
         \newFlattenedMCUout[23] , \newFlattenedMCUout[22] , 
         \flattenedMCUout[22] , \flattenedMCUout[23] , 
         \newFlattenedMCUout[25].sig_015.FeedThruLUT , 
         \newFlattenedMCUout[24].sig_014.FeedThruLUT , 
         \newFlattenedMCUout[25] , \newFlattenedMCUout[24] , 
         \flattenedMCUout[24] , \flattenedMCUout[25] , 
         \newFlattenedMCUout[27].sig_017.FeedThruLUT , 
         \newFlattenedMCUout[26].sig_016.FeedThruLUT , 
         \newFlattenedMCUout[27] , \newFlattenedMCUout[26] , 
         \flattenedMCUout[26] , \flattenedMCUout[27] , 
         \newFlattenedMCUout[29].sig_020.FeedThruLUT , 
         \newFlattenedMCUout[28].sig_018.FeedThruLUT , 
         \newFlattenedMCUout[29] , \newFlattenedMCUout[28] , 
         \flattenedMCUout[28] , \flattenedMCUout[29] , 
         \newFlattenedMCUout[8].sig_061.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_019.FeedThruLUT , \newFlattenedMCUout[8] , 
         \newFlattenedMCUout[9] , \flattenedMCUout[9] , \flattenedMCUout[8] , 
         \makeMusic.n5284 , \makeMusic.nextstate[0] , \makeMusic.state[0] , 
         \makeMusic.state[1] , \makeMusic.state[2] , \makeMusic.done , 
         \makeMusic.makingMusic , \makeMusic.n619[1] , \makeMusic.n619[3] , 
         \makeMusic.n5 , \makeMusic.n7250 , \makeMusic.n660[1] , \dur3[3] , 
         \makeMusic.n660[3] , \makeMusic.n5265 , \makeMusic.dur[3] , 
         \makeMusic.dur[1] , \makeMusic.n13[1] , \makeMusic.n6406 , 
         \makeMusic.counter[1] , \makeMusic.counter[0] , \makeMusic.n719[7] , 
         \makeMusic.n719[8] , \makeMusic.n770[7] , \freq3[7] , 
         \makeMusic.n770[8] , \freq3[8] , \makeMusic.freq[8] , 
         \makeMusic.freq[7] , \makeMusic.n719[5] , \makeMusic.n719[6] , 
         \makeMusic.n770[5] , \freq3[5] , \freq3[6] , \makeMusic.n770[6] , 
         \makeMusic.freq[6] , \makeMusic.freq[5] , \makeMusic.n719[3] , 
         \makeMusic.n719[4] , \freq3[3] , \makeMusic.n770[3] , 
         \makeMusic.n770[4] , \freq3[4] , \makeMusic.freq[4] , 
         \makeMusic.freq[3] , \makeMusic.n719[1] , \makeMusic.n719[2] , 
         \makeMusic.n770[1] , \freq3[1] , \makeMusic.n770[2] , \freq3[2] , 
         \makeMusic.freq[2] , \makeMusic.freq[1] , \makeMusic.en_N_98 , 
         \makeMusic.nextstate[2] , \makeMusic.n5454 , \makeMusic.n4 , 
         \makeMusic.en , n8_adj_501, n8_adj_502, \dur[5] , \dur[2] , n8, 
         n8_adj_503, \dur[7] , \dur[6] , 
         \newFlattenedMCUout[36].sig_023.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_022.FeedThruLUT , 
         \newFlattenedMCUout[36] , \newFlattenedMCUout[37] , sck_c, 
         \newFlattenedMCUout[38] , 
         \newFlattenedMCUout[34].sig_025.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_024.FeedThruLUT , 
         \newFlattenedMCUout[34] , \newFlattenedMCUout[35] , 
         \newFlattenedMCUout[32].sig_027.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_026.FeedThruLUT , 
         \newFlattenedMCUout[32] , \newFlattenedMCUout[33] , 
         \newFlattenedMCUout[30].sig_029.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_028.FeedThruLUT , 
         \newFlattenedMCUout[30] , \newFlattenedMCUout[31] , 
         \newFlattenedMCUout[28].sig_031.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_030.FeedThruLUT , 
         \newFlattenedMCUout[26].sig_033.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_032.FeedThruLUT , 
         \newFlattenedMCUout[24].sig_035.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_034.FeedThruLUT , 
         \newFlattenedMCUout[22].sig_037.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_036.FeedThruLUT , 
         \newFlattenedMCUout[20].sig_039.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_038.FeedThruLUT , 
         \newFlattenedMCUout[18].sig_041.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_040.FeedThruLUT , 
         \newFlattenedMCUout[16].sig_043.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_042.FeedThruLUT , 
         \newFlattenedMCUout[14].sig_045.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_044.FeedThruLUT , 
         \newFlattenedMCUout[12].sig_047.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_046.FeedThruLUT , 
         \newFlattenedMCUout[10].sig_049.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_048.FeedThruLUT , 
         \newFlattenedMCUout[8].sig_051.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_050.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_059.FeedThruLUT , 
         \spi.newFlattenedMCUout[7]_2.sig_052.FeedThruLUT , 
         \spi.newFlattenedMCUout[7]_2 , 
         \spi.newFlattenedMCUout[6]_2.sig_053.FeedThruLUT , 
         \spi.newFlattenedMCUout[6]_2 , 
         \spi.newFlattenedMCUout[4]_2.sig_055.FeedThruLUT , 
         \spi.newFlattenedMCUout[5]_2.sig_054.FeedThruLUT , 
         \spi.newFlattenedMCUout[4]_2 , \spi.newFlattenedMCUout[5]_2 , 
         \spi.newFlattenedMCUout[2]_2.sig_057.FeedThruLUT , 
         \spi.newFlattenedMCUout[3]_2.sig_056.FeedThruLUT , 
         \spi.newFlattenedMCUout[2]_2 , \spi.newFlattenedMCUout[3]_2 , 
         \newFlattenedMCUout[1].sig_058.FeedThruLUT , 
         \newFlattenedMCUout[38].sig_060.FeedThruLUT , 
         \newFlattenedMCUout[39] , 
         \newFlattenedMCUout[38].sig_063.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_062.FeedThruLUT , \flattenedMCUout[39] , 
         \flattenedMCUout[38] , \newFlattenedMCUout[36].sig_066.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_065.FeedThruLUT , \flattenedMCUout[37] , 
         \flattenedMCUout[36] , \newFlattenedMCUout[34].sig_068.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_067.FeedThruLUT , \flattenedMCUout[35] , 
         \flattenedMCUout[34] , \newFlattenedMCUout[32].sig_070.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_069.FeedThruLUT , \flattenedMCUout[33] , 
         \flattenedMCUout[32] , \newFlattenedMCUout[30].sig_072.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_071.FeedThruLUT , \flattenedMCUout[31] , 
         \flattenedMCUout[30] , \makeMusic.n2 , \freq0[6] , \freq1[6] , 
         \freq2[6] , \makeMusic.n2_adj_487 , \freq0[7] , \freq2[7] , 
         \freq1[7] , \makeMusic.n2_adj_488 , \freq0[8] , \freq1[8] , 
         \freq2[8] , \makeMusic.n2_adj_489 , \makeMusic.n7227 , 
         \makeMusic.n7229 , n4700, \makeMusic.n770[9] , \makeMusic.n2_adj_490 , 
         \makeMusic.n7219 , \makeMusic.n7224 , \makeMusic.n7222 , 
         \makeMusic.n2_adj_491 , \freq0[1] , \freq1[1] , \freq2[1] , 
         \makeMusic.n2_adj_492 , \freq0[2] , \freq1[2] , \freq2[2] , 
         \makeMusic.n2_adj_493 , \dur0[3] , \dur2[3] , \dur1[3] , 
         \makeMusic.n2_adj_494 , \freq0[3] , \freq1[3] , \freq2[3] , 
         \makeMusic.n2_adj_495 , \makeMusic.n7211 , \makeMusic.n7216 , 
         \makeMusic.n7214 , \makeMusic.n660[4] , \makeMusic.n2_adj_496 , 
         \freq0[4] , \freq1[4] , \freq2[4] , \makeMusic.n2_adj_497 , 
         \freq0[5] , \freq1[5] , \freq2[5] , \makeMusic.rep , 
         \makeMusic.pitch.n15 , \makeMusic.pitch.n14 , \makeMusic.freq[9] , 
         \makeMusic.pitch.n40 , \makeMusic.pitch.n41 , \makeMusic.pitch.n38 , 
         \makeMusic.pitch.n37 , \makeMusic.pitch.n39 , \makeMusic.pitch.n58 , 
         \makeMusic.pitch.n42 , \makeMusic.pitch.n44 , \makeMusic.pitch.n43 , 
         \makeMusic.pitch.n59 , \makeMusic.pitch.n34 , \makeMusic.pitch.n49 , 
         \makeMusic.pitch.n36 , \makeMusic.pitch.n35 , \makeMusic.pitch.n61 , 
         \makeMusic.howLong.n38 , \makeMusic.howLong.n37 , 
         \makeMusic.howLong.n40 , \makeMusic.howLong.n39 , 
         \makeMusic.howLong.n58 , \makeMusic.howLong.n42 , 
         \makeMusic.howLong.n44 , \makeMusic.howLong.n43 , 
         \makeMusic.howLong.n41 , \makeMusic.howLong.n59 , 
         \makeMusic.howLong.n34 , \makeMusic.howLong.n49 , 
         \makeMusic.howLong.n36 , \makeMusic.howLong.n35 , 
         \makeMusic.howLong.n61 , \makeMusic.howLong.counter_31__N_293$n0 , 
         \makeMusic.howLong.n6952 , \makeMusic.howLong.n6946 , 
         \makeMusic.n719[9] , \makeMusic.n7253 , \makeMusic.n3 , 
         \makeMusic.pitch.n6948 , \makeMusic.pitch.n6950 , \makeMusic.n619[4] , 
         \makeMusic.n7246 , \makeMusic.dur[4] , 
         \makeMusic.pitch.clkStrobe_N_486 , pwm_c, sdi_c;

  makeMusic_pitch_SLICE_0 \makeMusic.pitch.SLICE_0 ( 
    .D1(\makeMusic.pitch.n8368 ), .D0(\makeMusic.pitch.n5958 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .CIN0(\makeMusic.pitch.n5958 ), .CIN1(\makeMusic.pitch.n8368 ), 
    .F0(\makeMusic.pitch.threshold[31] ), .COUT0(\makeMusic.pitch.n8368 ));
  makeMusic_pitch_SLICE_1 \makeMusic.pitch.SLICE_1 ( 
    .D1(\makeMusic.pitch.n8365 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .D0(\makeMusic.pitch.n5956 ), .C0(VCC_net), .CIN0(\makeMusic.pitch.n5956 ), 
    .CIN1(\makeMusic.pitch.n8365 ), .F0(\makeMusic.pitch.threshold[28] ), 
    .F1(\makeMusic.pitch.threshold[30] ), .COUT1(\makeMusic.pitch.n5958 ), 
    .COUT0(\makeMusic.pitch.n8365 ));
  makeMusic_pitch_SLICE_2 \makeMusic.pitch.SLICE_2 ( 
    .D1(\makeMusic.pitch.n8362 ), .C1(VCC_net), .D0(\makeMusic.pitch.n5954 ), 
    .C0(VCC_net), .B0(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .CIN0(\makeMusic.pitch.n5954 ), .CIN1(\makeMusic.pitch.n8362 ), 
    .F0(\makeMusic.pitch.threshold[26] ), .F1(\makeMusic.pitch.threshold[27] ), 
    .COUT1(\makeMusic.pitch.n5956 ), .COUT0(\makeMusic.pitch.n8362 ));
  makeMusic_pitch_SLICE_3 \makeMusic.pitch.SLICE_3 ( 
    .DI1(\makeMusic.pitch.n133[12] ), .DI0(\makeMusic.pitch.n133[11] ), 
    .D1(\makeMusic.pitch.n8392 ), .C1(\makeMusic.pitch.counter[12] ), 
    .D0(\makeMusic.pitch.n5897 ), .C0(\makeMusic.pitch.counter[11] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5897 ), .CIN1(\makeMusic.pitch.n8392 ), 
    .Q0(\makeMusic.pitch.counter[11] ), .Q1(\makeMusic.pitch.counter[12] ), 
    .F0(\makeMusic.pitch.n133[11] ), .F1(\makeMusic.pitch.n133[12] ), 
    .COUT1(\makeMusic.pitch.n5899 ), .COUT0(\makeMusic.pitch.n8392 ));
  makeMusic_pitch_SLICE_4 \makeMusic.pitch.SLICE_4 ( 
    .DI1(\makeMusic.pitch.n133[10] ), .DI0(\makeMusic.pitch.n133[9] ), 
    .D1(\makeMusic.pitch.n8389 ), .C1(\makeMusic.pitch.counter[10] ), 
    .D0(\makeMusic.pitch.n5895 ), .C0(\makeMusic.pitch.counter[9] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5895 ), .CIN1(\makeMusic.pitch.n8389 ), 
    .Q0(\makeMusic.pitch.counter[9] ), .Q1(\makeMusic.pitch.counter[10] ), 
    .F0(\makeMusic.pitch.n133[9] ), .F1(\makeMusic.pitch.n133[10] ), 
    .COUT1(\makeMusic.pitch.n5897 ), .COUT0(\makeMusic.pitch.n8389 ));
  makeMusic_pitch_SLICE_5 \makeMusic.pitch.SLICE_5 ( 
    .D1(\makeMusic.pitch.n8359 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .D0(\makeMusic.pitch.n5952 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .CIN0(\makeMusic.pitch.n5952 ), .CIN1(\makeMusic.pitch.n8359 ), 
    .F0(\makeMusic.pitch.threshold[24] ), .F1(\makeMusic.pitch.threshold[25] ), 
    .COUT1(\makeMusic.pitch.n5954 ), .COUT0(\makeMusic.pitch.n8359 ));
  makeMusic_pitch_SLICE_6 \makeMusic.pitch.SLICE_6 ( 
    .D1(\makeMusic.pitch.n8356 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .D0(\makeMusic.pitch.n5950 ), .C0(VCC_net), .CIN0(\makeMusic.pitch.n5950 ), 
    .CIN1(\makeMusic.pitch.n8356 ), .F0(\makeMusic.pitch.threshold[20] ), 
    .F1(\makeMusic.pitch.threshold[23] ), .COUT1(\makeMusic.pitch.n5952 ), 
    .COUT0(\makeMusic.pitch.n8356 ));
  makeMusic_pitch_SLICE_7 \makeMusic.pitch.SLICE_7 ( 
    .D1(\makeMusic.pitch.n8353 ), .C1(VCC_net), .D0(\makeMusic.pitch.n5948 ), 
    .C0(VCC_net), .B0(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .CIN0(\makeMusic.pitch.n5948 ), .CIN1(\makeMusic.pitch.n8353 ), 
    .F0(\makeMusic.pitch.threshold[18] ), .F1(\makeMusic.pitch.threshold[19] ), 
    .COUT1(\makeMusic.pitch.n5950 ), .COUT0(\makeMusic.pitch.n8353 ));
  makeMusic_pitch_SLICE_8 \makeMusic.pitch.SLICE_8 ( 
    .D1(\makeMusic.pitch.n8350 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .D0(\makeMusic.pitch.n5946 ), .C0(VCC_net), .CIN0(\makeMusic.pitch.n5946 ), 
    .CIN1(\makeMusic.pitch.n8350 ), .F0(\makeMusic.pitch.threshold[16] ), 
    .F1(\makeMusic.pitch.threshold[17] ), .COUT1(\makeMusic.pitch.n5948 ), 
    .COUT0(\makeMusic.pitch.n8350 ));
  makeMusic_pitch_SLICE_9 \makeMusic.pitch.SLICE_9 ( 
    .D1(\makeMusic.pitch.n8347 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .D0(\makeMusic.pitch.n5944 ), .C0(VCC_net), .CIN0(\makeMusic.pitch.n5944 ), 
    .CIN1(\makeMusic.pitch.n8347 ), .F0(\makeMusic.pitch.threshold[13] ), 
    .F1(\makeMusic.pitch.threshold[15] ), .COUT1(\makeMusic.pitch.n5946 ), 
    .COUT0(\makeMusic.pitch.n8347 ));
  makeMusic_pitch_SLICE_10 \makeMusic.pitch.SLICE_10 ( 
    .D1(\makeMusic.pitch.n8344 ), .C1(VCC_net), .D0(\makeMusic.pitch.n5942 ), 
    .C0(VCC_net), .B0(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .CIN0(\makeMusic.pitch.n5942 ), .CIN1(\makeMusic.pitch.n8344 ), 
    .F0(\makeMusic.pitch.threshold[11] ), .F1(\makeMusic.pitch.threshold[12] ), 
    .COUT1(\makeMusic.pitch.n5944 ), .COUT0(\makeMusic.pitch.n8344 ));
  makeMusic_pitch_SLICE_11 \makeMusic.pitch.SLICE_11 ( 
    .DI1(\makeMusic.pitch.n133[8] ), .DI0(\makeMusic.pitch.n133[7] ), 
    .D1(\makeMusic.pitch.n8386 ), .C1(\makeMusic.pitch.counter[8] ), 
    .D0(\makeMusic.pitch.n5893 ), .C0(\makeMusic.pitch.counter[7] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5893 ), .CIN1(\makeMusic.pitch.n8386 ), 
    .Q0(\makeMusic.pitch.counter[7] ), .Q1(\makeMusic.pitch.counter[8] ), 
    .F0(\makeMusic.pitch.n133[7] ), .F1(\makeMusic.pitch.n133[8] ), 
    .COUT1(\makeMusic.pitch.n5895 ), .COUT0(\makeMusic.pitch.n8386 ));
  makeMusic_pitch_SLICE_12 \makeMusic.pitch.SLICE_12 ( 
    .D1(\makeMusic.pitch.n8341 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_326[31] ), 
    .CIN1(\makeMusic.pitch.n8341 ), .F1(\makeMusic.pitch.threshold[10] ), 
    .COUT1(\makeMusic.pitch.n5942 ), .COUT0(\makeMusic.pitch.n8341 ));
  makeMusic_pitch_SLICE_13 \makeMusic.pitch.SLICE_13 ( 
    .DI0(\makeMusic.pitch.n133[31] ), .D1(\makeMusic.pitch.n8422 ), 
    .D0(\makeMusic.pitch.n5917 ), .C0(\makeMusic.pitch.counter[31] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5917 ), .CIN1(\makeMusic.pitch.n8422 ), 
    .Q0(\makeMusic.pitch.counter[31] ), .F0(\makeMusic.pitch.n133[31] ), 
    .COUT0(\makeMusic.pitch.n8422 ));
  makeMusic_pitch_SLICE_14 \makeMusic.pitch.SLICE_14 ( 
    .DI1(\makeMusic.pitch.n133[30] ), .DI0(\makeMusic.pitch.n133[29] ), 
    .D1(\makeMusic.pitch.n8419 ), .C1(\makeMusic.pitch.counter[30] ), 
    .D0(\makeMusic.pitch.n5915 ), .C0(\makeMusic.pitch.counter[29] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5915 ), .CIN1(\makeMusic.pitch.n8419 ), 
    .Q0(\makeMusic.pitch.counter[29] ), .Q1(\makeMusic.pitch.counter[30] ), 
    .F0(\makeMusic.pitch.n133[29] ), .F1(\makeMusic.pitch.n133[30] ), 
    .COUT1(\makeMusic.pitch.n5917 ), .COUT0(\makeMusic.pitch.n8419 ));
  makeMusic_pitch_SLICE_15 \makeMusic.pitch.SLICE_15 ( 
    .DI1(\makeMusic.pitch.n133[28] ), .DI0(\makeMusic.pitch.n133[27] ), 
    .D1(\makeMusic.pitch.n8416 ), .C1(\makeMusic.pitch.counter[28] ), 
    .D0(\makeMusic.pitch.n5913 ), .C0(\makeMusic.pitch.counter[27] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5913 ), .CIN1(\makeMusic.pitch.n8416 ), 
    .Q0(\makeMusic.pitch.counter[27] ), .Q1(\makeMusic.pitch.counter[28] ), 
    .F0(\makeMusic.pitch.n133[27] ), .F1(\makeMusic.pitch.n133[28] ), 
    .COUT1(\makeMusic.pitch.n5915 ), .COUT0(\makeMusic.pitch.n8416 ));
  makeMusic_pitch_SLICE_16 \makeMusic.pitch.SLICE_16 ( 
    .DI1(\makeMusic.pitch.n133[26] ), .DI0(\makeMusic.pitch.n133[25] ), 
    .D1(\makeMusic.pitch.n8413 ), .C1(\makeMusic.pitch.counter[26] ), 
    .D0(\makeMusic.pitch.n5911 ), .C0(\makeMusic.pitch.counter[25] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5911 ), .CIN1(\makeMusic.pitch.n8413 ), 
    .Q0(\makeMusic.pitch.counter[25] ), .Q1(\makeMusic.pitch.counter[26] ), 
    .F0(\makeMusic.pitch.n133[25] ), .F1(\makeMusic.pitch.n133[26] ), 
    .COUT1(\makeMusic.pitch.n5913 ), .COUT0(\makeMusic.pitch.n8413 ));
  makeMusic_pitch_SLICE_17 \makeMusic.pitch.SLICE_17 ( 
    .DI1(\makeMusic.pitch.n133[24] ), .DI0(\makeMusic.pitch.n133[23] ), 
    .D1(\makeMusic.pitch.n8410 ), .C1(\makeMusic.pitch.counter[24] ), 
    .D0(\makeMusic.pitch.n5909 ), .C0(\makeMusic.pitch.counter[23] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5909 ), .CIN1(\makeMusic.pitch.n8410 ), 
    .Q0(\makeMusic.pitch.counter[23] ), .Q1(\makeMusic.pitch.counter[24] ), 
    .F0(\makeMusic.pitch.n133[23] ), .F1(\makeMusic.pitch.n133[24] ), 
    .COUT1(\makeMusic.pitch.n5911 ), .COUT0(\makeMusic.pitch.n8410 ));
  makeMusic_pitch_SLICE_18 \makeMusic.pitch.SLICE_18 ( 
    .DI1(\makeMusic.pitch.n133[22] ), .DI0(\makeMusic.pitch.n133[21] ), 
    .D1(\makeMusic.pitch.n8407 ), .C1(\makeMusic.pitch.counter[22] ), 
    .D0(\makeMusic.pitch.n5907 ), .C0(\makeMusic.pitch.counter[21] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5907 ), .CIN1(\makeMusic.pitch.n8407 ), 
    .Q0(\makeMusic.pitch.counter[21] ), .Q1(\makeMusic.pitch.counter[22] ), 
    .F0(\makeMusic.pitch.n133[21] ), .F1(\makeMusic.pitch.n133[22] ), 
    .COUT1(\makeMusic.pitch.n5909 ), .COUT0(\makeMusic.pitch.n8407 ));
  makeMusic_pitch_SLICE_19 \makeMusic.pitch.SLICE_19 ( 
    .DI1(\makeMusic.pitch.n133[20] ), .DI0(\makeMusic.pitch.n133[19] ), 
    .D1(\makeMusic.pitch.n8404 ), .C1(\makeMusic.pitch.counter[20] ), 
    .D0(\makeMusic.pitch.n5905 ), .C0(\makeMusic.pitch.counter[19] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5905 ), .CIN1(\makeMusic.pitch.n8404 ), 
    .Q0(\makeMusic.pitch.counter[19] ), .Q1(\makeMusic.pitch.counter[20] ), 
    .F0(\makeMusic.pitch.n133[19] ), .F1(\makeMusic.pitch.n133[20] ), 
    .COUT1(\makeMusic.pitch.n5907 ), .COUT0(\makeMusic.pitch.n8404 ));
  makeMusic_pitch_SLICE_20 \makeMusic.pitch.SLICE_20 ( 
    .DI1(\makeMusic.pitch.n133[18] ), .DI0(\makeMusic.pitch.n133[17] ), 
    .D1(\makeMusic.pitch.n8401 ), .C1(\makeMusic.pitch.counter[18] ), 
    .D0(\makeMusic.pitch.n5903 ), .C0(\makeMusic.pitch.counter[17] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5903 ), .CIN1(\makeMusic.pitch.n8401 ), 
    .Q0(\makeMusic.pitch.counter[17] ), .Q1(\makeMusic.pitch.counter[18] ), 
    .F0(\makeMusic.pitch.n133[17] ), .F1(\makeMusic.pitch.n133[18] ), 
    .COUT1(\makeMusic.pitch.n5905 ), .COUT0(\makeMusic.pitch.n8401 ));
  makeMusic_pitch_SLICE_21 \makeMusic.pitch.SLICE_21 ( 
    .DI1(\makeMusic.pitch.n133[0] ), .D1(\makeMusic.pitch.n8374 ), 
    .C1(\makeMusic.pitch.counter[0] ), .B1(VCC_net), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN1(\makeMusic.pitch.n8374 ), .Q1(\makeMusic.pitch.counter[0] ), 
    .F1(\makeMusic.pitch.n133[0] ), .COUT1(\makeMusic.pitch.n5887 ), 
    .COUT0(\makeMusic.pitch.n8374 ));
  makeMusic_pitch_SLICE_22 \makeMusic.pitch.SLICE_22 ( 
    .DI1(\makeMusic.pitch.n133[2] ), .DI0(\makeMusic.pitch.n133[1] ), 
    .D1(\makeMusic.pitch.n8377 ), .C1(\makeMusic.pitch.counter[2] ), 
    .D0(\makeMusic.pitch.n5887 ), .C0(\makeMusic.pitch.counter[1] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5887 ), .CIN1(\makeMusic.pitch.n8377 ), 
    .Q0(\makeMusic.pitch.counter[1] ), .Q1(\makeMusic.pitch.counter[2] ), 
    .F0(\makeMusic.pitch.n133[1] ), .F1(\makeMusic.pitch.n133[2] ), 
    .COUT1(\makeMusic.pitch.n5889 ), .COUT0(\makeMusic.pitch.n8377 ));
  makeMusic_pitch_SLICE_23 \makeMusic.pitch.SLICE_23 ( 
    .DI1(\makeMusic.pitch.n133[4] ), .DI0(\makeMusic.pitch.n133[3] ), 
    .D1(\makeMusic.pitch.n8380 ), .C1(\makeMusic.pitch.counter[4] ), 
    .D0(\makeMusic.pitch.n5889 ), .C0(\makeMusic.pitch.counter[3] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5889 ), .CIN1(\makeMusic.pitch.n8380 ), 
    .Q0(\makeMusic.pitch.counter[3] ), .Q1(\makeMusic.pitch.counter[4] ), 
    .F0(\makeMusic.pitch.n133[3] ), .F1(\makeMusic.pitch.n133[4] ), 
    .COUT1(\makeMusic.pitch.n5891 ), .COUT0(\makeMusic.pitch.n8380 ));
  makeMusic_pitch_SLICE_24 \makeMusic.pitch.SLICE_24 ( 
    .DI1(\makeMusic.pitch.n133[6] ), .DI0(\makeMusic.pitch.n133[5] ), 
    .D1(\makeMusic.pitch.n8383 ), .C1(\makeMusic.pitch.counter[6] ), 
    .D0(\makeMusic.pitch.n5891 ), .C0(\makeMusic.pitch.counter[5] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5891 ), .CIN1(\makeMusic.pitch.n8383 ), 
    .Q0(\makeMusic.pitch.counter[5] ), .Q1(\makeMusic.pitch.counter[6] ), 
    .F0(\makeMusic.pitch.n133[5] ), .F1(\makeMusic.pitch.n133[6] ), 
    .COUT1(\makeMusic.pitch.n5893 ), .COUT0(\makeMusic.pitch.n8383 ));
  makeMusic_pitch_SLICE_25 \makeMusic.pitch.SLICE_25 ( 
    .DI1(\makeMusic.pitch.n133[16] ), .DI0(\makeMusic.pitch.n133[15] ), 
    .D1(\makeMusic.pitch.n8398 ), .C1(\makeMusic.pitch.counter[16] ), 
    .D0(\makeMusic.pitch.n5901 ), .C0(\makeMusic.pitch.counter[15] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5901 ), .CIN1(\makeMusic.pitch.n8398 ), 
    .Q0(\makeMusic.pitch.counter[15] ), .Q1(\makeMusic.pitch.counter[16] ), 
    .F0(\makeMusic.pitch.n133[15] ), .F1(\makeMusic.pitch.n133[16] ), 
    .COUT1(\makeMusic.pitch.n5903 ), .COUT0(\makeMusic.pitch.n8398 ));
  makeMusic_pitch_SLICE_26 \makeMusic.pitch.SLICE_26 ( 
    .DI1(\makeMusic.pitch.n133[14] ), .DI0(\makeMusic.pitch.n133[13] ), 
    .D1(\makeMusic.pitch.n8395 ), .C1(\makeMusic.pitch.counter[14] ), 
    .D0(\makeMusic.pitch.n5899 ), .C0(\makeMusic.pitch.counter[13] ), 
    .LSR(\makeMusic.pitch.n5282 ), .CLK(int_osc), 
    .CIN0(\makeMusic.pitch.n5899 ), .CIN1(\makeMusic.pitch.n8395 ), 
    .Q0(\makeMusic.pitch.counter[13] ), .Q1(\makeMusic.pitch.counter[14] ), 
    .F0(\makeMusic.pitch.n133[13] ), .F1(\makeMusic.pitch.n133[14] ), 
    .COUT1(\makeMusic.pitch.n5901 ), .COUT0(\makeMusic.pitch.n8395 ));
  makeMusic_howLong_SLICE_27 \makeMusic.howLong.SLICE_27 ( 
    .D1(\makeMusic.howLong.n8302 ), .C1(\makeMusic.howLong.n982[9] ), 
    .B1(\makeMusic.howLong.n632[9] ), .D0(\makeMusic.howLong.n5839 ), 
    .C0(\makeMusic.howLong.n982[8] ), .B0(\makeMusic.howLong.n632[8] ), 
    .CIN0(\makeMusic.howLong.n5839 ), .CIN1(\makeMusic.howLong.n8302 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[19] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[20] ), 
    .COUT1(\makeMusic.howLong.n5841 ), .COUT0(\makeMusic.howLong.n8302 ));
  makeMusic_howLong_SLICE_28 \makeMusic.howLong.SLICE_28 ( 
    .D1(\makeMusic.howLong.n8329 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[29] ), 
    .D0(\makeMusic.howLong.n5936 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[28] ), 
    .CIN0(\makeMusic.howLong.n5936 ), .CIN1(\makeMusic.howLong.n8329 ), 
    .F0(\makeMusic.howLong.THRESHOLD[28] ), 
    .F1(\makeMusic.howLong.THRESHOLD[29] ), .COUT1(\makeMusic.howLong.n5938 ), 
    .COUT0(\makeMusic.howLong.n8329 ));
  makeMusic_howLong_SLICE_29 \makeMusic.howLong.SLICE_29 ( 
    .D1(\makeMusic.howLong.n8332 ), .B1(\makeMusic.howLong.n632[19] ), 
    .D0(\makeMusic.howLong.n5849 ), .B0(\makeMusic.howLong.n632[18] ), 
    .CIN0(\makeMusic.howLong.n5849 ), .CIN1(\makeMusic.howLong.n8332 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[29] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[30] ), 
    .COUT1(\makeMusic.howLong.n5851 ), .COUT0(\makeMusic.howLong.n8332 ));
  makeMusic_howLong_SLICE_30 \makeMusic.howLong.SLICE_30 ( 
    .D1(\makeMusic.howLong.n8323 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[27] ), 
    .D0(\makeMusic.howLong.n5934 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[26] ), 
    .CIN0(\makeMusic.howLong.n5934 ), .CIN1(\makeMusic.howLong.n8323 ), 
    .F0(\makeMusic.howLong.THRESHOLD[26] ), 
    .F1(\makeMusic.howLong.THRESHOLD[27] ), .COUT1(\makeMusic.howLong.n5936 ), 
    .COUT0(\makeMusic.howLong.n8323 ));
  makeMusic_howLong_SLICE_31 \makeMusic.howLong.SLICE_31 ( 
    .D1(\makeMusic.howLong.n8308 ), .C1(\makeMusic.howLong.n982[11] ), 
    .B1(\makeMusic.howLong.n632[11] ), .D0(\makeMusic.howLong.n5841 ), 
    .C0(\makeMusic.howLong.n982[10] ), .B0(\makeMusic.howLong.n632[10] ), 
    .CIN0(\makeMusic.howLong.n5841 ), .CIN1(\makeMusic.howLong.n8308 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[21] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[22] ), 
    .COUT1(\makeMusic.howLong.n5843 ), .COUT0(\makeMusic.howLong.n8308 ));
  makeMusic_howLong_SLICE_32 \makeMusic.howLong.SLICE_32 ( 
    .D1(\makeMusic.howLong.n8338 ), .D0(\makeMusic.howLong.n5851 ), 
    .B0(\makeMusic.howLong.n632[20] ), .CIN0(\makeMusic.howLong.n5851 ), 
    .CIN1(\makeMusic.howLong.n8338 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[31] ), 
    .COUT0(\makeMusic.howLong.n8338 ));
  makeMusic_howLong_SLICE_33 \makeMusic.howLong.SLICE_33 ( 
    .D1(\makeMusic.howLong.n8317 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[25] ), 
    .D0(\makeMusic.howLong.n5932 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[24] ), 
    .CIN0(\makeMusic.howLong.n5932 ), .CIN1(\makeMusic.howLong.n8317 ), 
    .F0(\makeMusic.howLong.THRESHOLD[24] ), 
    .F1(\makeMusic.howLong.THRESHOLD[25] ), .COUT1(\makeMusic.howLong.n5934 ), 
    .COUT0(\makeMusic.howLong.n8317 ));
  makeMusic_howLong_SLICE_34 \makeMusic.howLong.SLICE_34 ( 
    .D1(\makeMusic.howLong.n8296 ), .C1(\makeMusic.howLong.n982[7] ), 
    .B1(\makeMusic.howLong.n632[7] ), .D0(\makeMusic.howLong.n5837 ), 
    .C0(\makeMusic.howLong.n982[6] ), .B0(\makeMusic.howLong.n632[6] ), 
    .CIN0(\makeMusic.howLong.n5837 ), .CIN1(\makeMusic.howLong.n8296 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[17] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[18] ), 
    .COUT1(\makeMusic.howLong.n5839 ), .COUT0(\makeMusic.howLong.n8296 ));
  makeMusic_howLong_SLICE_35 \makeMusic.howLong.SLICE_35 ( 
    .D1(\makeMusic.howLong.n8311 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[23] ), 
    .D0(\makeMusic.howLong.n5930 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[22] ), 
    .CIN0(\makeMusic.howLong.n5930 ), .CIN1(\makeMusic.howLong.n8311 ), 
    .F0(\makeMusic.howLong.THRESHOLD[22] ), 
    .F1(\makeMusic.howLong.THRESHOLD[23] ), .COUT1(\makeMusic.howLong.n5932 ), 
    .COUT0(\makeMusic.howLong.n8311 ));
  makeMusic_howLong_SLICE_36 \makeMusic.howLong.SLICE_36 ( 
    .D1(\makeMusic.howLong.n8305 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[21] ), 
    .D0(\makeMusic.howLong.n5928 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[20] ), 
    .CIN0(\makeMusic.howLong.n5928 ), .CIN1(\makeMusic.howLong.n8305 ), 
    .F0(\makeMusic.howLong.THRESHOLD[20] ), 
    .F1(\makeMusic.howLong.THRESHOLD[21] ), .COUT1(\makeMusic.howLong.n5930 ), 
    .COUT0(\makeMusic.howLong.n8305 ));
  makeMusic_howLong_SLICE_37 \makeMusic.howLong.SLICE_37 ( 
    .D1(\makeMusic.howLong.n8299 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[19] ), 
    .D0(\makeMusic.howLong.n5926 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[18] ), 
    .CIN0(\makeMusic.howLong.n5926 ), .CIN1(\makeMusic.howLong.n8299 ), 
    .F0(\makeMusic.howLong.THRESHOLD[18] ), 
    .F1(\makeMusic.howLong.THRESHOLD[19] ), .COUT1(\makeMusic.howLong.n5928 ), 
    .COUT0(\makeMusic.howLong.n8299 ));
  makeMusic_howLong_SLICE_38 \makeMusic.howLong.SLICE_38 ( 
    .D1(\makeMusic.howLong.n8290 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[17] ), 
    .D0(\makeMusic.howLong.n5924 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[16] ), 
    .CIN0(\makeMusic.howLong.n5924 ), .CIN1(\makeMusic.howLong.n8290 ), 
    .F0(\makeMusic.howLong.THRESHOLD[16] ), 
    .F1(\makeMusic.howLong.THRESHOLD[17] ), .COUT1(\makeMusic.howLong.n5926 ), 
    .COUT0(\makeMusic.howLong.n8290 ));
  makeMusic_howLong_SLICE_39 \makeMusic.howLong.SLICE_39 ( 
    .D1(\makeMusic.howLong.n8293 ), .C1(\makeMusic.howLong.n982[5] ), 
    .B1(\makeMusic.howLong.n632[5] ), .CIN1(\makeMusic.howLong.n8293 ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[16] ), 
    .COUT1(\makeMusic.howLong.n5837 ), .COUT0(\makeMusic.howLong.n8293 ));
  makeMusic_howLong_SLICE_40 \makeMusic.howLong.SLICE_40 ( 
    .D1(\makeMusic.howLong.n8335 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[31] ), 
    .D0(\makeMusic.howLong.n5938 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[30] ), 
    .CIN0(\makeMusic.howLong.n5938 ), .CIN1(\makeMusic.howLong.n8335 ), 
    .F0(\makeMusic.howLong.THRESHOLD[30] ), 
    .F1(\makeMusic.howLong.THRESHOLD[31] ), .COUT0(\makeMusic.howLong.n8335 ));
  makeMusic_howLong_SLICE_41 \makeMusic.howLong.SLICE_41 ( 
    .D1(\makeMusic.howLong.n8287 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[15] ), 
    .D0(\makeMusic.howLong.n5922 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[14] ), 
    .CIN0(\makeMusic.howLong.n5922 ), .CIN1(\makeMusic.howLong.n8287 ), 
    .F0(\makeMusic.howLong.THRESHOLD[14] ), 
    .F1(\makeMusic.howLong.THRESHOLD[15] ), .COUT1(\makeMusic.howLong.n5924 ), 
    .COUT0(\makeMusic.howLong.n8287 ));
  makeMusic_howLong_SLICE_42 \makeMusic.howLong.SLICE_42 ( 
    .D1(\makeMusic.howLong.n8284 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[13] ), 
    .D0(\makeMusic.howLong.n5920 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_133[12] ), 
    .CIN0(\makeMusic.howLong.n5920 ), .CIN1(\makeMusic.howLong.n8284 ), 
    .F0(\makeMusic.howLong.THRESHOLD[12] ), 
    .F1(\makeMusic.howLong.THRESHOLD[13] ), .COUT1(\makeMusic.howLong.n5922 ), 
    .COUT0(\makeMusic.howLong.n8284 ));
  makeMusic_howLong_SLICE_43 \makeMusic.howLong.SLICE_43 ( 
    .D1(\makeMusic.howLong.n8314 ), .B1(\makeMusic.howLong.n632[13] ), 
    .D0(\makeMusic.howLong.n5843 ), .C0(\makeMusic.howLong.n982[12] ), 
    .B0(\makeMusic.howLong.n632[12] ), .CIN0(\makeMusic.howLong.n5843 ), 
    .CIN1(\makeMusic.howLong.n8314 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[23] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[24] ), 
    .COUT1(\makeMusic.howLong.n5845 ), .COUT0(\makeMusic.howLong.n8314 ));
  makeMusic_howLong_SLICE_44 \makeMusic.howLong.SLICE_44 ( 
    .D1(\makeMusic.howLong.n8281 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_133[11] ), 
    .CIN1(\makeMusic.howLong.n8281 ), .F1(\makeMusic.howLong.THRESHOLD[11] ), 
    .COUT1(\makeMusic.howLong.n5920 ), .COUT0(\makeMusic.howLong.n8281 ));
  makeMusic_howLong_SLICE_45 \makeMusic.howLong.SLICE_45 ( 
    .D1(\makeMusic.howLong.n8320 ), .B1(\makeMusic.howLong.n632[15] ), 
    .D0(\makeMusic.howLong.n5845 ), .B0(\makeMusic.howLong.n632[14] ), 
    .CIN0(\makeMusic.howLong.n5845 ), .CIN1(\makeMusic.howLong.n8320 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[25] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[26] ), 
    .COUT1(\makeMusic.howLong.n5847 ), .COUT0(\makeMusic.howLong.n8320 ));
  makeMusic_howLong_SLICE_46 \makeMusic.howLong.SLICE_46 ( 
    .D1(\makeMusic.howLong.n8326 ), .B1(\makeMusic.howLong.n632[17] ), 
    .D0(\makeMusic.howLong.n5847 ), .B0(\makeMusic.howLong.n632[16] ), 
    .CIN0(\makeMusic.howLong.n5847 ), .CIN1(\makeMusic.howLong.n8326 ), 
    .F0(\makeMusic.howLong.THRESHOLD_31__N_133[27] ), 
    .F1(\makeMusic.howLong.THRESHOLD_31__N_133[28] ), 
    .COUT1(\makeMusic.howLong.n5849 ), .COUT0(\makeMusic.howLong.n8326 ));
  makeMusic_howLong_SLICE_47 \makeMusic.howLong.SLICE_47 ( 
    .DI1(\makeMusic.howLong.n133[0] ), .D1(\makeMusic.howLong.n8371 ), 
    .C1(\makeMusic.howLong.counter[0] ), .B1(VCC_net), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN1(\makeMusic.howLong.n8371 ), .Q1(\makeMusic.howLong.counter[0] ), 
    .F1(\makeMusic.howLong.n133[0] ), .COUT1(\makeMusic.howLong.n5854 ), 
    .COUT0(\makeMusic.howLong.n8371 ));
  makeMusic_howLong_SLICE_48 \makeMusic.howLong.SLICE_48 ( 
    .DI1(\makeMusic.howLong.n133[2] ), .DI0(\makeMusic.howLong.n133[1] ), 
    .D1(\makeMusic.howLong.n8425 ), .C1(\makeMusic.howLong.counter[2] ), 
    .D0(\makeMusic.howLong.n5854 ), .C0(\makeMusic.howLong.counter[1] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5854 ), .CIN1(\makeMusic.howLong.n8425 ), 
    .Q0(\makeMusic.howLong.counter[1] ), .Q1(\makeMusic.howLong.counter[2] ), 
    .F0(\makeMusic.howLong.n133[1] ), .F1(\makeMusic.howLong.n133[2] ), 
    .COUT1(\makeMusic.howLong.n5856 ), .COUT0(\makeMusic.howLong.n8425 ));
  makeMusic_howLong_SLICE_49 \makeMusic.howLong.SLICE_49 ( 
    .DI1(\makeMusic.howLong.n133[4] ), .DI0(\makeMusic.howLong.n133[3] ), 
    .D1(\makeMusic.howLong.n8428 ), .C1(\makeMusic.howLong.counter[4] ), 
    .D0(\makeMusic.howLong.n5856 ), .C0(\makeMusic.howLong.counter[3] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5856 ), .CIN1(\makeMusic.howLong.n8428 ), 
    .Q0(\makeMusic.howLong.counter[3] ), .Q1(\makeMusic.howLong.counter[4] ), 
    .F0(\makeMusic.howLong.n133[3] ), .F1(\makeMusic.howLong.n133[4] ), 
    .COUT1(\makeMusic.howLong.n5858 ), .COUT0(\makeMusic.howLong.n8428 ));
  makeMusic_howLong_SLICE_50 \makeMusic.howLong.SLICE_50 ( 
    .DI1(\makeMusic.howLong.n133[6] ), .DI0(\makeMusic.howLong.n133[5] ), 
    .D1(\makeMusic.howLong.n8431 ), .C1(\makeMusic.howLong.counter[6] ), 
    .D0(\makeMusic.howLong.n5858 ), .C0(\makeMusic.howLong.counter[5] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5858 ), .CIN1(\makeMusic.howLong.n8431 ), 
    .Q0(\makeMusic.howLong.counter[5] ), .Q1(\makeMusic.howLong.counter[6] ), 
    .F0(\makeMusic.howLong.n133[5] ), .F1(\makeMusic.howLong.n133[6] ), 
    .COUT1(\makeMusic.howLong.n5860 ), .COUT0(\makeMusic.howLong.n8431 ));
  makeMusic_howLong_SLICE_51 \makeMusic.howLong.SLICE_51 ( 
    .DI1(\makeMusic.howLong.n133[8] ), .DI0(\makeMusic.howLong.n133[7] ), 
    .D1(\makeMusic.howLong.n8434 ), .C1(\makeMusic.howLong.counter[8] ), 
    .D0(\makeMusic.howLong.n5860 ), .C0(\makeMusic.howLong.counter[7] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5860 ), .CIN1(\makeMusic.howLong.n8434 ), 
    .Q0(\makeMusic.howLong.counter[7] ), .Q1(\makeMusic.howLong.counter[8] ), 
    .F0(\makeMusic.howLong.n133[7] ), .F1(\makeMusic.howLong.n133[8] ), 
    .COUT1(\makeMusic.howLong.n5862 ), .COUT0(\makeMusic.howLong.n8434 ));
  makeMusic_howLong_SLICE_52 \makeMusic.howLong.SLICE_52 ( 
    .DI1(\makeMusic.howLong.n133[10] ), .DI0(\makeMusic.howLong.n133[9] ), 
    .D1(\makeMusic.howLong.n8437 ), .C1(\makeMusic.howLong.counter[10] ), 
    .D0(\makeMusic.howLong.n5862 ), .C0(\makeMusic.howLong.counter[9] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5862 ), .CIN1(\makeMusic.howLong.n8437 ), 
    .Q0(\makeMusic.howLong.counter[9] ), .Q1(\makeMusic.howLong.counter[10] ), 
    .F0(\makeMusic.howLong.n133[9] ), .F1(\makeMusic.howLong.n133[10] ), 
    .COUT1(\makeMusic.howLong.n5864 ), .COUT0(\makeMusic.howLong.n8437 ));
  makeMusic_howLong_SLICE_53 \makeMusic.howLong.SLICE_53 ( 
    .DI1(\makeMusic.howLong.n133[12] ), .DI0(\makeMusic.howLong.n133[11] ), 
    .D1(\makeMusic.howLong.n8440 ), .C1(\makeMusic.howLong.counter[12] ), 
    .D0(\makeMusic.howLong.n5864 ), .C0(\makeMusic.howLong.counter[11] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5864 ), .CIN1(\makeMusic.howLong.n8440 ), 
    .Q0(\makeMusic.howLong.counter[11] ), .Q1(\makeMusic.howLong.counter[12] ), 
    .F0(\makeMusic.howLong.n133[11] ), .F1(\makeMusic.howLong.n133[12] ), 
    .COUT1(\makeMusic.howLong.n5866 ), .COUT0(\makeMusic.howLong.n8440 ));
  makeMusic_howLong_SLICE_54 \makeMusic.howLong.SLICE_54 ( 
    .DI1(\makeMusic.howLong.n133[14] ), .DI0(\makeMusic.howLong.n133[13] ), 
    .D1(\makeMusic.howLong.n8443 ), .C1(\makeMusic.howLong.counter[14] ), 
    .D0(\makeMusic.howLong.n5866 ), .C0(\makeMusic.howLong.counter[13] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5866 ), .CIN1(\makeMusic.howLong.n8443 ), 
    .Q0(\makeMusic.howLong.counter[13] ), .Q1(\makeMusic.howLong.counter[14] ), 
    .F0(\makeMusic.howLong.n133[13] ), .F1(\makeMusic.howLong.n133[14] ), 
    .COUT1(\makeMusic.howLong.n5868 ), .COUT0(\makeMusic.howLong.n8443 ));
  makeMusic_howLong_SLICE_55 \makeMusic.howLong.SLICE_55 ( 
    .DI1(\makeMusic.howLong.n133[16] ), .DI0(\makeMusic.howLong.n133[15] ), 
    .D1(\makeMusic.howLong.n8446 ), .C1(\makeMusic.howLong.counter[16] ), 
    .D0(\makeMusic.howLong.n5868 ), .C0(\makeMusic.howLong.counter[15] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5868 ), .CIN1(\makeMusic.howLong.n8446 ), 
    .Q0(\makeMusic.howLong.counter[15] ), .Q1(\makeMusic.howLong.counter[16] ), 
    .F0(\makeMusic.howLong.n133[15] ), .F1(\makeMusic.howLong.n133[16] ), 
    .COUT1(\makeMusic.howLong.n5870 ), .COUT0(\makeMusic.howLong.n8446 ));
  makeMusic_howLong_SLICE_56 \makeMusic.howLong.SLICE_56 ( 
    .DI1(\makeMusic.howLong.n133[18] ), .DI0(\makeMusic.howLong.n133[17] ), 
    .D1(\makeMusic.howLong.n8449 ), .C1(\makeMusic.howLong.counter[18] ), 
    .D0(\makeMusic.howLong.n5870 ), .C0(\makeMusic.howLong.counter[17] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5870 ), .CIN1(\makeMusic.howLong.n8449 ), 
    .Q0(\makeMusic.howLong.counter[17] ), .Q1(\makeMusic.howLong.counter[18] ), 
    .F0(\makeMusic.howLong.n133[17] ), .F1(\makeMusic.howLong.n133[18] ), 
    .COUT1(\makeMusic.howLong.n5872 ), .COUT0(\makeMusic.howLong.n8449 ));
  makeMusic_howLong_SLICE_57 \makeMusic.howLong.SLICE_57 ( 
    .DI1(\makeMusic.howLong.n133[20] ), .DI0(\makeMusic.howLong.n133[19] ), 
    .D1(\makeMusic.howLong.n8452 ), .C1(\makeMusic.howLong.counter[20] ), 
    .D0(\makeMusic.howLong.n5872 ), .C0(\makeMusic.howLong.counter[19] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5872 ), .CIN1(\makeMusic.howLong.n8452 ), 
    .Q0(\makeMusic.howLong.counter[19] ), .Q1(\makeMusic.howLong.counter[20] ), 
    .F0(\makeMusic.howLong.n133[19] ), .F1(\makeMusic.howLong.n133[20] ), 
    .COUT1(\makeMusic.howLong.n5874 ), .COUT0(\makeMusic.howLong.n8452 ));
  makeMusic_howLong_SLICE_58 \makeMusic.howLong.SLICE_58 ( 
    .DI1(\makeMusic.howLong.n133[22] ), .DI0(\makeMusic.howLong.n133[21] ), 
    .D1(\makeMusic.howLong.n8455 ), .C1(\makeMusic.howLong.counter[22] ), 
    .D0(\makeMusic.howLong.n5874 ), .C0(\makeMusic.howLong.counter[21] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5874 ), .CIN1(\makeMusic.howLong.n8455 ), 
    .Q0(\makeMusic.howLong.counter[21] ), .Q1(\makeMusic.howLong.counter[22] ), 
    .F0(\makeMusic.howLong.n133[21] ), .F1(\makeMusic.howLong.n133[22] ), 
    .COUT1(\makeMusic.howLong.n5876 ), .COUT0(\makeMusic.howLong.n8455 ));
  makeMusic_howLong_SLICE_59 \makeMusic.howLong.SLICE_59 ( 
    .DI1(\makeMusic.howLong.n133[24] ), .DI0(\makeMusic.howLong.n133[23] ), 
    .D1(\makeMusic.howLong.n8458 ), .C1(\makeMusic.howLong.counter[24] ), 
    .D0(\makeMusic.howLong.n5876 ), .C0(\makeMusic.howLong.counter[23] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5876 ), .CIN1(\makeMusic.howLong.n8458 ), 
    .Q0(\makeMusic.howLong.counter[23] ), .Q1(\makeMusic.howLong.counter[24] ), 
    .F0(\makeMusic.howLong.n133[23] ), .F1(\makeMusic.howLong.n133[24] ), 
    .COUT1(\makeMusic.howLong.n5878 ), .COUT0(\makeMusic.howLong.n8458 ));
  makeMusic_howLong_SLICE_60 \makeMusic.howLong.SLICE_60 ( 
    .DI1(\makeMusic.howLong.n133[26] ), .DI0(\makeMusic.howLong.n133[25] ), 
    .D1(\makeMusic.howLong.n8461 ), .C1(\makeMusic.howLong.counter[26] ), 
    .D0(\makeMusic.howLong.n5878 ), .C0(\makeMusic.howLong.counter[25] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5878 ), .CIN1(\makeMusic.howLong.n8461 ), 
    .Q0(\makeMusic.howLong.counter[25] ), .Q1(\makeMusic.howLong.counter[26] ), 
    .F0(\makeMusic.howLong.n133[25] ), .F1(\makeMusic.howLong.n133[26] ), 
    .COUT1(\makeMusic.howLong.n5880 ), .COUT0(\makeMusic.howLong.n8461 ));
  makeMusic_howLong_SLICE_61 \makeMusic.howLong.SLICE_61 ( 
    .DI1(\makeMusic.howLong.n133[28] ), .DI0(\makeMusic.howLong.n133[27] ), 
    .D1(\makeMusic.howLong.n8464 ), .C1(\makeMusic.howLong.counter[28] ), 
    .D0(\makeMusic.howLong.n5880 ), .C0(\makeMusic.howLong.counter[27] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5880 ), .CIN1(\makeMusic.howLong.n8464 ), 
    .Q0(\makeMusic.howLong.counter[27] ), .Q1(\makeMusic.howLong.counter[28] ), 
    .F0(\makeMusic.howLong.n133[27] ), .F1(\makeMusic.howLong.n133[28] ), 
    .COUT1(\makeMusic.howLong.n5882 ), .COUT0(\makeMusic.howLong.n8464 ));
  makeMusic_howLong_SLICE_62 \makeMusic.howLong.SLICE_62 ( 
    .DI1(\makeMusic.howLong.n133[30] ), .DI0(\makeMusic.howLong.n133[29] ), 
    .D1(\makeMusic.howLong.n8467 ), .C1(\makeMusic.howLong.counter[30] ), 
    .D0(\makeMusic.howLong.n5882 ), .C0(\makeMusic.howLong.counter[29] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5882 ), .CIN1(\makeMusic.howLong.n8467 ), 
    .Q0(\makeMusic.howLong.counter[29] ), .Q1(\makeMusic.howLong.counter[30] ), 
    .F0(\makeMusic.howLong.n133[29] ), .F1(\makeMusic.howLong.n133[30] ), 
    .COUT1(\makeMusic.howLong.n5884 ), .COUT0(\makeMusic.howLong.n8467 ));
  makeMusic_howLong_SLICE_63 \makeMusic.howLong.SLICE_63 ( 
    .DI0(\makeMusic.howLong.n133[31] ), .D1(\makeMusic.howLong.n8470 ), 
    .D0(\makeMusic.howLong.n5884 ), .C0(\makeMusic.howLong.counter[31] ), 
    .LSR(\makeMusic.howLong.counter_31__N_293 ), .CLK(int_osc), 
    .CIN0(\makeMusic.howLong.n5884 ), .CIN1(\makeMusic.howLong.n8470 ), 
    .Q0(\makeMusic.howLong.counter[31] ), .F0(\makeMusic.howLong.n133[31] ), 
    .COUT0(\makeMusic.howLong.n8470 ));
  SLICE_64 SLICE_64( .DI1(\newFlattenedMCUout[10].sig_021.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_000.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[11] ), .Q1(\flattenedMCUout[10] ), 
    .F0(\newFlattenedMCUout[11].sig_000.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_021.FeedThruLUT ));
  SLICE_65 SLICE_65( .DI1(\newFlattenedMCUout[13].sig_002.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[12].sig_001.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[13] ), .D0(\newFlattenedMCUout[12] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[12] ), .Q1(\flattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[12].sig_001.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[13].sig_002.FeedThruLUT ));
  SLICE_67 SLICE_67( .DI1(\newFlattenedMCUout[15].sig_004.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[14].sig_003.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[15] ), .D0(\newFlattenedMCUout[14] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[14] ), .Q1(\flattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[14].sig_003.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[15].sig_004.FeedThruLUT ));
  SLICE_69 SLICE_69( .DI1(\newFlattenedMCUout[1].sig_064.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_005.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[1] ), .D0(\newFlattenedMCUout[0] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[0] ), .Q1(\flattenedMCUout[1] ), 
    .F0(\newFlattenedMCUout[0].sig_005.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_064.FeedThruLUT ));
  SLICE_70 SLICE_70( .DI1(\newFlattenedMCUout[17].sig_007.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[16].sig_006.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[17] ), .C0(\newFlattenedMCUout[16] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[16] ), .Q1(\flattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[16].sig_006.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[17].sig_007.FeedThruLUT ));
  SLICE_72 SLICE_72( .DI1(\newFlattenedMCUout[19].sig_009.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[18].sig_008.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[19] ), .D0(\newFlattenedMCUout[18] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[18] ), .Q1(\flattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[18].sig_008.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[19].sig_009.FeedThruLUT ));
  SLICE_74 SLICE_74( .DI1(\newFlattenedMCUout[21].sig_011.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[20].sig_010.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[21] ), .D0(\newFlattenedMCUout[20] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[20] ), .Q1(\flattenedMCUout[21] ), 
    .F0(\newFlattenedMCUout[20].sig_010.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[21].sig_011.FeedThruLUT ));
  SLICE_76 SLICE_76( .DI1(\newFlattenedMCUout[23].sig_013.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[22].sig_012.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[23] ), .D0(\newFlattenedMCUout[22] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[22] ), .Q1(\flattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[22].sig_012.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[23].sig_013.FeedThruLUT ));
  SLICE_78 SLICE_78( .DI1(\newFlattenedMCUout[25].sig_015.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[24].sig_014.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[25] ), .D0(\newFlattenedMCUout[24] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[24] ), .Q1(\flattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[24].sig_014.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[25].sig_015.FeedThruLUT ));
  SLICE_80 SLICE_80( .DI1(\newFlattenedMCUout[27].sig_017.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[26].sig_016.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[27] ), .D0(\newFlattenedMCUout[26] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[26] ), .Q1(\flattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[26].sig_016.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[27].sig_017.FeedThruLUT ));
  SLICE_82 SLICE_82( .DI1(\newFlattenedMCUout[29].sig_020.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[28].sig_018.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[29] ), .C0(\newFlattenedMCUout[28] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[28] ), .Q1(\flattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[28].sig_018.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[29].sig_020.FeedThruLUT ));
  SLICE_83 SLICE_83( .DI1(\newFlattenedMCUout[8].sig_061.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_019.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[9] ), .Q1(\flattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[9].sig_019.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_061.FeedThruLUT ));
  makeMusic_SLICE_86 \makeMusic.SLICE_86 ( .DI1(\makeMusic.n5284 ), 
    .DI0(\makeMusic.nextstate[0] ), .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.state[1] ), .B1(\makeMusic.state[2] ), 
    .D0(\makeMusic.done ), .C0(\makeMusic.state[0] ), 
    .B0(\makeMusic.state[1] ), .A0(\makeMusic.state[2] ), .CLK(int_osc), 
    .Q0(\makeMusic.state[0] ), .Q1(\makeMusic.makingMusic ), 
    .F0(\makeMusic.nextstate[0] ), .F1(\makeMusic.n5284 ));
  makeMusic_SLICE_88 \makeMusic.SLICE_88 ( .DI1(\makeMusic.n619[1] ), 
    .DI0(\makeMusic.n619[3] ), .D1(\makeMusic.state[2] ), .C1(\makeMusic.n5 ), 
    .B1(\makeMusic.n7250 ), .A1(\makeMusic.n660[1] ), .D0(\makeMusic.n5 ), 
    .C0(\makeMusic.state[2] ), .B0(\dur3[3] ), .A0(\makeMusic.n660[3] ), 
    .CE(\makeMusic.n5265 ), .CLK(int_osc), .Q0(\makeMusic.dur[3] ), 
    .Q1(\makeMusic.dur[1] ), .F0(\makeMusic.n619[3] ), 
    .F1(\makeMusic.n619[1] ));
  makeMusic_SLICE_90 \makeMusic.SLICE_90 ( .DI1(\makeMusic.n13[1] ), 
    .DI0(\makeMusic.n6406 ), .D1(\makeMusic.counter[1] ), 
    .C1(\makeMusic.counter[0] ), .B1(\makeMusic.n5 ), 
    .D0(\makeMusic.counter[0] ), .C0(\makeMusic.state[0] ), 
    .B0(\makeMusic.state[1] ), .A0(\makeMusic.state[2] ), .CLK(int_osc), 
    .Q0(\makeMusic.counter[0] ), .Q1(\makeMusic.counter[1] ), 
    .F0(\makeMusic.n6406 ), .F1(\makeMusic.n13[1] ));
  makeMusic_SLICE_93 \makeMusic.SLICE_93 ( .DI1(\makeMusic.n719[7] ), 
    .DI0(\makeMusic.n719[8] ), .D1(\makeMusic.state[2] ), .C1(\makeMusic.n5 ), 
    .B1(\makeMusic.n770[7] ), .A1(\freq3[7] ), .D0(\makeMusic.n5 ), 
    .C0(\makeMusic.state[2] ), .B0(\makeMusic.n770[8] ), .A0(\freq3[8] ), 
    .CE(\makeMusic.n5265 ), .CLK(int_osc), .Q0(\makeMusic.freq[8] ), 
    .Q1(\makeMusic.freq[7] ), .F0(\makeMusic.n719[8] ), 
    .F1(\makeMusic.n719[7] ));
  makeMusic_SLICE_95 \makeMusic.SLICE_95 ( .DI1(\makeMusic.n719[5] ), 
    .DI0(\makeMusic.n719[6] ), .D1(\makeMusic.state[2] ), .C1(\makeMusic.n5 ), 
    .B1(\makeMusic.n770[5] ), .A1(\freq3[5] ), .D0(\freq3[6] ), 
    .C0(\makeMusic.state[2] ), .B0(\makeMusic.n5 ), .A0(\makeMusic.n770[6] ), 
    .CE(\makeMusic.n5265 ), .CLK(int_osc), .Q0(\makeMusic.freq[6] ), 
    .Q1(\makeMusic.freq[5] ), .F0(\makeMusic.n719[6] ), 
    .F1(\makeMusic.n719[5] ));
  makeMusic_SLICE_97 \makeMusic.SLICE_97 ( .DI1(\makeMusic.n719[3] ), 
    .DI0(\makeMusic.n719[4] ), .D1(\makeMusic.state[2] ), .C1(\makeMusic.n5 ), 
    .B1(\freq3[3] ), .A1(\makeMusic.n770[3] ), .D0(\makeMusic.n5 ), 
    .C0(\makeMusic.state[2] ), .B0(\makeMusic.n770[4] ), .A0(\freq3[4] ), 
    .CE(\makeMusic.n5265 ), .CLK(int_osc), .Q0(\makeMusic.freq[4] ), 
    .Q1(\makeMusic.freq[3] ), .F0(\makeMusic.n719[4] ), 
    .F1(\makeMusic.n719[3] ));
  makeMusic_SLICE_99 \makeMusic.SLICE_99 ( .DI1(\makeMusic.n719[1] ), 
    .DI0(\makeMusic.n719[2] ), .D1(\makeMusic.state[2] ), .C1(\makeMusic.n5 ), 
    .B1(\makeMusic.n770[1] ), .A1(\freq3[1] ), .D0(\makeMusic.n5 ), 
    .C0(\makeMusic.state[2] ), .B0(\makeMusic.n770[2] ), .A0(\freq3[2] ), 
    .CE(\makeMusic.n5265 ), .CLK(int_osc), .Q0(\makeMusic.freq[2] ), 
    .Q1(\makeMusic.freq[1] ), .F0(\makeMusic.n719[2] ), 
    .F1(\makeMusic.n719[1] ));
  makeMusic_SLICE_101 \makeMusic.SLICE_101 ( .DI1(\makeMusic.en_N_98 ), 
    .DI0(\makeMusic.nextstate[2] ), .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.state[1] ), .B1(\makeMusic.state[2] ), 
    .D0(\makeMusic.n5454 ), .C0(\makeMusic.n4 ), .B0(\makeMusic.state[1] ), 
    .A0(\makeMusic.state[2] ), .CLK(int_osc), .Q0(\makeMusic.state[2] ), 
    .Q1(\makeMusic.en ), .F0(\makeMusic.nextstate[2] ), 
    .F1(\makeMusic.en_N_98 ));
  SLICE_103 SLICE_103( .DI1(n8_adj_501), .DI0(n8_adj_502), .D1(\dur[5] ), 
    .C1(\makeMusic.state[0] ), .B1(\makeMusic.state[1] ), 
    .A1(\makeMusic.state[2] ), .D0(\makeMusic.state[2] ), 
    .C0(\makeMusic.state[1] ), .B0(\makeMusic.state[0] ), .A0(\dur[2] ), 
    .CLK(int_osc), .Q0(\dur[2] ), .Q1(\dur[5] ), .F0(n8_adj_502), 
    .F1(n8_adj_501));
  SLICE_105 SLICE_105( .DI1(n8), .DI0(n8_adj_503), .D1(\dur[7] ), 
    .C1(\makeMusic.state[0] ), .B1(\makeMusic.state[1] ), 
    .A1(\makeMusic.state[2] ), .D0(\makeMusic.state[2] ), 
    .C0(\makeMusic.state[1] ), .B0(\makeMusic.state[0] ), .A0(\dur[6] ), 
    .CLK(int_osc), .Q0(\dur[6] ), .Q1(\dur[7] ), .F0(n8_adj_503), .F1(n8));
  SLICE_111 SLICE_111( .DI1(\newFlattenedMCUout[36].sig_023.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_022.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[38] ), .Q1(\newFlattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[37].sig_022.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_023.FeedThruLUT ));
  SLICE_113 SLICE_113( .DI1(\newFlattenedMCUout[34].sig_025.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_024.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[36] ), .Q1(\newFlattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[35].sig_024.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_025.FeedThruLUT ));
  SLICE_115 SLICE_115( .DI1(\newFlattenedMCUout[32].sig_027.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_026.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[34] ), .Q1(\newFlattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[33].sig_026.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_027.FeedThruLUT ));
  SLICE_117 SLICE_117( .DI1(\newFlattenedMCUout[30].sig_029.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_028.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[32] ), .Q1(\newFlattenedMCUout[31] ), 
    .F0(\newFlattenedMCUout[31].sig_028.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_029.FeedThruLUT ));
  SLICE_119 SLICE_119( .DI1(\newFlattenedMCUout[28].sig_031.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_030.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[30] ), .Q1(\newFlattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[29].sig_030.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_031.FeedThruLUT ));
  SLICE_121 SLICE_121( .DI1(\newFlattenedMCUout[26].sig_033.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_032.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[28] ), .Q1(\newFlattenedMCUout[27] ), 
    .F0(\newFlattenedMCUout[27].sig_032.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_033.FeedThruLUT ));
  SLICE_123 SLICE_123( .DI1(\newFlattenedMCUout[24].sig_035.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_034.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[26] ), .Q1(\newFlattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[25].sig_034.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_035.FeedThruLUT ));
  SLICE_125 SLICE_125( .DI1(\newFlattenedMCUout[22].sig_037.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_036.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[24] ), .Q1(\newFlattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[23].sig_036.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_037.FeedThruLUT ));
  SLICE_127 SLICE_127( .DI1(\newFlattenedMCUout[20].sig_039.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_038.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[22] ), .Q1(\newFlattenedMCUout[21] ), 
    .F0(\newFlattenedMCUout[21].sig_038.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_039.FeedThruLUT ));
  SLICE_129 SLICE_129( .DI1(\newFlattenedMCUout[18].sig_041.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_040.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[20] ), .Q1(\newFlattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[19].sig_040.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_041.FeedThruLUT ));
  SLICE_131 SLICE_131( .DI1(\newFlattenedMCUout[16].sig_043.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_042.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[18] ), .Q1(\newFlattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[17].sig_042.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_043.FeedThruLUT ));
  SLICE_133 SLICE_133( .DI1(\newFlattenedMCUout[14].sig_045.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_044.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[16] ), .Q1(\newFlattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[15].sig_044.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_045.FeedThruLUT ));
  SLICE_135 SLICE_135( .DI1(\newFlattenedMCUout[12].sig_047.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_046.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[14] ), .Q1(\newFlattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[13].sig_046.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_047.FeedThruLUT ));
  SLICE_137 SLICE_137( .DI1(\newFlattenedMCUout[10].sig_049.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_048.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[12] ), .Q1(\newFlattenedMCUout[11] ), 
    .F0(\newFlattenedMCUout[11].sig_048.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_049.FeedThruLUT ));
  SLICE_139 SLICE_139( .DI1(\newFlattenedMCUout[8].sig_051.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_050.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[10] ), .Q1(\newFlattenedMCUout[9] ), 
    .F0(\newFlattenedMCUout[9].sig_050.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_051.FeedThruLUT ));
  spi_SLICE_141 \spi.SLICE_141 ( 
    .DI1(\newFlattenedMCUout[0].sig_059.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[7]_2.sig_052.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[0] ), .D0(\spi.newFlattenedMCUout[7]_2 ), 
    .CLK(sck_c), .Q0(\newFlattenedMCUout[8] ), .Q1(\newFlattenedMCUout[1] ), 
    .F0(\spi.newFlattenedMCUout[7]_2.sig_052.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[0].sig_059.FeedThruLUT ));
  spi_SLICE_142 \spi.SLICE_142 ( 
    .DI0(\spi.newFlattenedMCUout[6]_2.sig_053.FeedThruLUT ), 
    .D0(\spi.newFlattenedMCUout[6]_2 ), .CLK(sck_c), 
    .Q0(\spi.newFlattenedMCUout[7]_2 ), 
    .F0(\spi.newFlattenedMCUout[6]_2.sig_053.FeedThruLUT ));
  spi_SLICE_143 \spi.SLICE_143 ( 
    .DI1(\spi.newFlattenedMCUout[4]_2.sig_055.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[5]_2.sig_054.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[4]_2 ), .D0(\spi.newFlattenedMCUout[5]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[6]_2 ), 
    .Q1(\spi.newFlattenedMCUout[5]_2 ), 
    .F0(\spi.newFlattenedMCUout[5]_2.sig_054.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[4]_2.sig_055.FeedThruLUT ));
  spi_SLICE_145 \spi.SLICE_145 ( 
    .DI1(\spi.newFlattenedMCUout[2]_2.sig_057.FeedThruLUT ), 
    .DI0(\spi.newFlattenedMCUout[3]_2.sig_056.FeedThruLUT ), 
    .D1(\spi.newFlattenedMCUout[2]_2 ), .D0(\spi.newFlattenedMCUout[3]_2 ), 
    .CLK(sck_c), .Q0(\spi.newFlattenedMCUout[4]_2 ), 
    .Q1(\spi.newFlattenedMCUout[3]_2 ), 
    .F0(\spi.newFlattenedMCUout[3]_2.sig_056.FeedThruLUT ), 
    .F1(\spi.newFlattenedMCUout[2]_2.sig_057.FeedThruLUT ));
  SLICE_147 SLICE_147( .DI0(\newFlattenedMCUout[1].sig_058.FeedThruLUT ), 
    .D0(\newFlattenedMCUout[1] ), .CLK(sck_c), 
    .Q0(\spi.newFlattenedMCUout[2]_2 ), 
    .F0(\newFlattenedMCUout[1].sig_058.FeedThruLUT ));
  SLICE_149 SLICE_149( .DI0(\newFlattenedMCUout[38].sig_060.FeedThruLUT ), 
    .D0(\newFlattenedMCUout[38] ), .CLK(sck_c), .Q0(\newFlattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[38].sig_060.FeedThruLUT ));
  SLICE_151 SLICE_151( .DI1(\newFlattenedMCUout[38].sig_063.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_062.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[38] ), .D0(\newFlattenedMCUout[39] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[39] ), .Q1(\flattenedMCUout[38] ), 
    .F0(\newFlattenedMCUout[39].sig_062.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_063.FeedThruLUT ));
  SLICE_154 SLICE_154( .DI1(\newFlattenedMCUout[36].sig_066.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_065.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[37] ), .Q1(\flattenedMCUout[36] ), 
    .F0(\newFlattenedMCUout[37].sig_065.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_066.FeedThruLUT ));
  SLICE_156 SLICE_156( .DI1(\newFlattenedMCUout[34].sig_068.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_067.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[35] ), .Q1(\flattenedMCUout[34] ), 
    .F0(\newFlattenedMCUout[35].sig_067.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_068.FeedThruLUT ));
  SLICE_158 SLICE_158( .DI1(\newFlattenedMCUout[32].sig_070.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_069.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[33] ), .Q1(\flattenedMCUout[32] ), 
    .F0(\newFlattenedMCUout[33].sig_069.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_070.FeedThruLUT ));
  SLICE_160 SLICE_160( .DI1(\newFlattenedMCUout[30].sig_072.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_071.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CE(n5264), 
    .CLK(ce_c), .Q0(\flattenedMCUout[31] ), .Q1(\flattenedMCUout[30] ), 
    .F0(\newFlattenedMCUout[31].sig_071.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_072.FeedThruLUT ));
  makeMusic_SLICE_162 \makeMusic.SLICE_162 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2 ), .B1(\freq0[6] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq1[6] ), .C0(\makeMusic.state[0] ), .B0(\freq2[6] ), 
    .F0(\makeMusic.n2 ), .F1(\makeMusic.n770[6] ));
  makeMusic_SLICE_164 \makeMusic.SLICE_164 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_487 ), .B1(\freq0[7] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq2[7] ), .C0(\freq1[7] ), .A0(\makeMusic.state[0] ), 
    .F0(\makeMusic.n2_adj_487 ), .F1(\makeMusic.n770[7] ));
  makeMusic_SLICE_166 \makeMusic.SLICE_166 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_488 ), .B1(\freq0[8] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq1[8] ), .C0(\makeMusic.state[0] ), .A0(\freq2[8] ), 
    .F0(\makeMusic.n2_adj_488 ), .F1(\makeMusic.n770[8] ));
  makeMusic_SLICE_168 \makeMusic.SLICE_168 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_489 ), .B1(\makeMusic.n7227 ), 
    .A1(\makeMusic.state[1] ), .D0(\makeMusic.n7229 ), 
    .C0(\makeMusic.state[0] ), .B0(\flattenedMCUout[31] ), .A0(n4700), 
    .F0(\makeMusic.n2_adj_489 ), .F1(\makeMusic.n770[9] ));
  makeMusic_SLICE_170 \makeMusic.SLICE_170 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_490 ), .B1(\makeMusic.n7219 ), 
    .A1(\makeMusic.state[1] ), .D0(\makeMusic.n7224 ), 
    .C0(\makeMusic.state[0] ), .B0(\makeMusic.n7222 ), 
    .A0(\flattenedMCUout[27] ), .F0(\makeMusic.n2_adj_490 ), 
    .F1(\makeMusic.n660[1] ));
  makeMusic_SLICE_172 \makeMusic.SLICE_172 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_491 ), .B1(\freq0[1] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq1[1] ), .C0(\makeMusic.state[0] ), .B0(\freq2[1] ), 
    .F0(\makeMusic.n2_adj_491 ), .F1(\makeMusic.n770[1] ));
  makeMusic_SLICE_174 \makeMusic.SLICE_174 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_492 ), .B1(\freq0[2] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq1[2] ), .C0(\makeMusic.state[0] ), .B0(\freq2[2] ), 
    .F0(\makeMusic.n2_adj_492 ), .F1(\makeMusic.n770[2] ));
  makeMusic_SLICE_176 \makeMusic.SLICE_176 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_493 ), .B1(\dur0[3] ), .A1(\makeMusic.state[1] ), 
    .D0(\dur2[3] ), .C0(\makeMusic.state[0] ), .B0(\dur1[3] ), 
    .F0(\makeMusic.n2_adj_493 ), .F1(\makeMusic.n660[3] ));
  makeMusic_SLICE_178 \makeMusic.SLICE_178 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_494 ), .B1(\freq0[3] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq1[3] ), .C0(\makeMusic.state[0] ), .B0(\freq2[3] ), 
    .F0(\makeMusic.n2_adj_494 ), .F1(\makeMusic.n770[3] ));
  makeMusic_SLICE_180 \makeMusic.SLICE_180 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_495 ), .B1(\makeMusic.n7211 ), 
    .A1(\makeMusic.state[1] ), .D0(\makeMusic.n7216 ), 
    .C0(\makeMusic.state[0] ), .B0(\flattenedMCUout[27] ), 
    .A0(\makeMusic.n7214 ), .F0(\makeMusic.n2_adj_495 ), 
    .F1(\makeMusic.n660[4] ));
  makeMusic_SLICE_182 \makeMusic.SLICE_182 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_496 ), .B1(\makeMusic.state[1] ), .A1(\freq0[4] ), 
    .D0(\freq1[4] ), .C0(\makeMusic.state[0] ), .B0(\freq2[4] ), 
    .F0(\makeMusic.n2_adj_496 ), .F1(\makeMusic.n770[4] ));
  makeMusic_SLICE_184 \makeMusic.SLICE_184 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.n2_adj_497 ), .B1(\freq0[5] ), .A1(\makeMusic.state[1] ), 
    .D0(\freq1[5] ), .C0(\makeMusic.state[0] ), .B0(\freq2[5] ), 
    .F0(\makeMusic.n2_adj_497 ), .F1(\makeMusic.n770[5] ));
  makeMusic_SLICE_186 \makeMusic.SLICE_186 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.rep ), .B1(\makeMusic.done ), .A1(\makeMusic.state[1] ), 
    .D0(\makeMusic.counter[0] ), .C0(\makeMusic.counter[1] ), 
    .B0(\flattenedMCUout[0] ), .A0(\flattenedMCUout[1] ), .F0(\makeMusic.rep ), 
    .F1(\makeMusic.n5454 ));
  makeMusic_pitch_SLICE_188 \makeMusic.pitch.SLICE_188 ( 
    .D1(\makeMusic.pitch.n15 ), .C1(\makeMusic.pitch.n14 ), 
    .B1(\makeMusic.freq[5] ), .A1(\makeMusic.freq[1] ), 
    .D0(\makeMusic.freq[4] ), .C0(\makeMusic.freq[8] ), 
    .B0(\makeMusic.freq[9] ), .F0(\makeMusic.pitch.n14 ), 
    .F1(\makeMusic.pitch.threshold_31__N_326[31] ));
  makeMusic_pitch_SLICE_190 \makeMusic.pitch.SLICE_190 ( 
    .D1(\makeMusic.pitch.threshold[13] ), .C1(\makeMusic.pitch.threshold[11] ), 
    .B1(\makeMusic.pitch.counter[11] ), .A1(\makeMusic.pitch.counter[13] ), 
    .D0(\makeMusic.pitch.counter[19] ), .C0(\makeMusic.pitch.threshold[13] ), 
    .B0(\makeMusic.pitch.counter[14] ), .A0(\makeMusic.pitch.threshold[19] ), 
    .F0(\makeMusic.pitch.n40 ), .F1(\makeMusic.pitch.n41 ));
  makeMusic_pitch_SLICE_191 \makeMusic.pitch.SLICE_191 ( 
    .D1(\makeMusic.pitch.n38 ), .C1(\makeMusic.pitch.n37 ), 
    .B1(\makeMusic.pitch.n39 ), .A1(\makeMusic.pitch.n40 ), 
    .D0(\makeMusic.pitch.threshold[28] ), .C0(\makeMusic.pitch.threshold[10] ), 
    .B0(\makeMusic.pitch.counter[10] ), .A0(\makeMusic.pitch.counter[28] ), 
    .F0(\makeMusic.pitch.n37 ), .F1(\makeMusic.pitch.n58 ));
  makeMusic_pitch_SLICE_192 \makeMusic.pitch.SLICE_192 ( 
    .D1(\makeMusic.pitch.n42 ), .C1(\makeMusic.pitch.n44 ), 
    .B1(\makeMusic.pitch.n43 ), .A1(\makeMusic.pitch.n41 ), 
    .D0(\makeMusic.pitch.threshold[31] ), .C0(\makeMusic.pitch.counter[31] ), 
    .B0(\makeMusic.pitch.threshold[15] ), .A0(\makeMusic.pitch.counter[15] ), 
    .F0(\makeMusic.pitch.n44 ), .F1(\makeMusic.pitch.n59 ));
  makeMusic_pitch_SLICE_194 \makeMusic.pitch.SLICE_194 ( 
    .D1(\makeMusic.pitch.threshold[16] ), .C1(\makeMusic.pitch.n34 ), 
    .B1(\makeMusic.pitch.counter[0] ), .A1(\makeMusic.pitch.counter[16] ), 
    .D0(\makeMusic.pitch.threshold[24] ), .C0(\makeMusic.pitch.counter[8] ), 
    .B0(\makeMusic.pitch.counter[24] ), .F0(\makeMusic.pitch.n34 ), 
    .F1(\makeMusic.pitch.n49 ));
  makeMusic_pitch_SLICE_196 \makeMusic.pitch.SLICE_196 ( 
    .D0(\makeMusic.pitch.threshold[12] ), .C0(\makeMusic.pitch.threshold[17] ), 
    .B0(\makeMusic.pitch.counter[12] ), .A0(\makeMusic.pitch.counter[17] ), 
    .F0(\makeMusic.pitch.n36 ));
  makeMusic_pitch_SLICE_197 \makeMusic.pitch.SLICE_197 ( 
    .D1(\makeMusic.pitch.n58 ), .C1(\makeMusic.pitch.n35 ), 
    .B1(\makeMusic.pitch.n36 ), .A1(\makeMusic.pitch.n49 ), 
    .D0(\makeMusic.pitch.threshold[20] ), .C0(\makeMusic.pitch.counter[18] ), 
    .B0(\makeMusic.pitch.threshold[18] ), .A0(\makeMusic.pitch.counter[20] ), 
    .F0(\makeMusic.pitch.n35 ), .F1(\makeMusic.pitch.n61 ));
  makeMusic_howLong_SLICE_198 \makeMusic.howLong.SLICE_198 ( 
    .D1(\makeMusic.howLong.n38 ), .C1(\makeMusic.howLong.n37 ), 
    .B1(\makeMusic.howLong.n40 ), .A1(\makeMusic.howLong.n39 ), 
    .D0(\makeMusic.howLong.THRESHOLD[28] ), 
    .C0(\makeMusic.howLong.counter[28] ), .B0(\makeMusic.howLong.counter[10] ), 
    .F0(\makeMusic.howLong.n37 ), .F1(\makeMusic.howLong.n58 ));
  makeMusic_howLong_SLICE_200 \makeMusic.howLong.SLICE_200 ( 
    .D1(\makeMusic.howLong.n42 ), .C1(\makeMusic.howLong.n44 ), 
    .B1(\makeMusic.howLong.n43 ), .A1(\makeMusic.howLong.n41 ), 
    .D0(\makeMusic.howLong.counter[15] ), 
    .C0(\makeMusic.howLong.THRESHOLD[15] ), 
    .B0(\makeMusic.howLong.counter[31] ), 
    .A0(\makeMusic.howLong.THRESHOLD[31] ), .F0(\makeMusic.howLong.n44 ), 
    .F1(\makeMusic.howLong.n59 ));
  makeMusic_howLong_SLICE_202 \makeMusic.howLong.SLICE_202 ( 
    .D1(\makeMusic.howLong.THRESHOLD[16] ), .C1(\makeMusic.howLong.n34 ), 
    .B1(\makeMusic.howLong.counter[0] ), .A1(\makeMusic.howLong.counter[16] ), 
    .D0(\makeMusic.howLong.counter[8] ), 
    .C0(\makeMusic.howLong.THRESHOLD[24] ), 
    .B0(\makeMusic.howLong.counter[24] ), .F0(\makeMusic.howLong.n34 ), 
    .F1(\makeMusic.howLong.n49 ));
  makeMusic_howLong_SLICE_204 \makeMusic.howLong.SLICE_204 ( 
    .D1(\makeMusic.howLong.counter[11] ), 
    .C1(\makeMusic.howLong.THRESHOLD[13] ), 
    .B1(\makeMusic.howLong.counter[13] ), 
    .A1(\makeMusic.howLong.THRESHOLD[11] ), 
    .D0(\makeMusic.howLong.THRESHOLD[17] ), 
    .C0(\makeMusic.howLong.THRESHOLD[12] ), 
    .B0(\makeMusic.howLong.counter[12] ), .A0(\makeMusic.howLong.counter[17] ), 
    .F0(\makeMusic.howLong.n36 ), .F1(\makeMusic.howLong.n41 ));
  makeMusic_howLong_SLICE_205 \makeMusic.howLong.SLICE_205 ( 
    .D1(\makeMusic.howLong.n58 ), .C1(\makeMusic.howLong.n35 ), 
    .B1(\makeMusic.howLong.n49 ), .A1(\makeMusic.howLong.n36 ), 
    .D0(\makeMusic.howLong.THRESHOLD[20] ), 
    .C0(\makeMusic.howLong.THRESHOLD[18] ), 
    .B0(\makeMusic.howLong.counter[20] ), .A0(\makeMusic.howLong.counter[18] ), 
    .F0(\makeMusic.howLong.n35 ), .F1(\makeMusic.howLong.n61 ));
  makeMusic_howLong_SLICE_206 \makeMusic.howLong.SLICE_206 ( 
    .DI1(\makeMusic.howLong.counter_31__N_293$n0 ), 
    .D1(\makeMusic.howLong.n61 ), .C1(\makeMusic.howLong.n6952 ), 
    .B1(\makeMusic.howLong.n6946 ), .A1(\makeMusic.howLong.n59 ), 
    .D0(\makeMusic.howLong.counter[3] ), .C0(\makeMusic.howLong.counter[6] ), 
    .B0(\makeMusic.howLong.counter[5] ), .A0(\makeMusic.howLong.counter[7] ), 
    .CLK(int_osc), .Q1(\makeMusic.done ), .F0(\makeMusic.howLong.n6952 ), 
    .F1(\makeMusic.howLong.counter_31__N_293$n0 ));
  makeMusic_howLong_SLICE_207 \makeMusic.howLong.SLICE_207 ( 
    .D1(\makeMusic.howLong.n61 ), .C1(\makeMusic.howLong.n6946 ), 
    .B1(\makeMusic.howLong.n6952 ), .A1(\makeMusic.howLong.n59 ), 
    .D0(\makeMusic.howLong.counter[1] ), .C0(\makeMusic.howLong.counter[2] ), 
    .B0(\makeMusic.howLong.counter[4] ), .A0(\makeMusic.howLong.counter[9] ), 
    .F0(\makeMusic.howLong.n6946 ), .F1(\makeMusic.howLong.counter_31__N_293 ));
  aT2F_t2F3_SLICE_208 \aT2F.t2F3.SLICE_208 ( .D1(\flattenedMCUout[15] ), 
    .C1(\flattenedMCUout[14] ), .B1(\flattenedMCUout[13] ), 
    .A1(\flattenedMCUout[12] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freq3[4] ), .F1(\freq3[5] ));
  makeMusic_SLICE_209 \makeMusic.SLICE_209 ( .DI1(\makeMusic.n719[9] ), 
    .D1(\makeMusic.state[2] ), .C1(\makeMusic.n7253 ), 
    .B1(\makeMusic.n770[9] ), .A1(\makeMusic.n5 ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[13] ), .CE(\makeMusic.n5265 ), .CLK(int_osc), 
    .Q1(\makeMusic.freq[9] ), .F0(\makeMusic.n7253 ), .F1(\makeMusic.n719[9] ));
  aT2F_t2F3_SLICE_211 \aT2F.t2F3.SLICE_211 ( .D1(\flattenedMCUout[15] ), 
    .C1(\flattenedMCUout[14] ), .B1(\flattenedMCUout[13] ), 
    .A1(\flattenedMCUout[12] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freq3[6] ), .F1(\freq3[1] ));
  aT2F_t2F3_SLICE_213 \aT2F.t2F3.SLICE_213 ( .D1(\flattenedMCUout[15] ), 
    .C1(\flattenedMCUout[14] ), .B1(\flattenedMCUout[13] ), 
    .A1(\flattenedMCUout[12] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freq3[7] ), .F1(\freq3[2] ));
  aT2F_t2F3_SLICE_215 \aT2F.t2F3.SLICE_215 ( .D1(\flattenedMCUout[15] ), 
    .C1(\flattenedMCUout[14] ), .B1(\flattenedMCUout[13] ), 
    .A1(\flattenedMCUout[12] ), .D0(\flattenedMCUout[14] ), 
    .C0(\flattenedMCUout[15] ), .B0(\flattenedMCUout[12] ), 
    .A0(\flattenedMCUout[13] ), .F0(\freq3[8] ), .F1(\freq3[3] ));
  aT2F_t2F2_SLICE_216 \aT2F.t2F2.SLICE_216 ( .D1(\flattenedMCUout[23] ), 
    .C1(\flattenedMCUout[22] ), .B1(\flattenedMCUout[21] ), 
    .A1(\flattenedMCUout[20] ), .D0(\flattenedMCUout[22] ), 
    .C0(\flattenedMCUout[23] ), .B0(\flattenedMCUout[20] ), 
    .A0(\flattenedMCUout[21] ), .F0(\freq2[6] ), .F1(\freq2[5] ));
  makeMusic_SLICE_217 \makeMusic.SLICE_217 ( .D0(\flattenedMCUout[23] ), 
    .C0(\flattenedMCUout[22] ), .B0(\flattenedMCUout[21] ), 
    .A0(\flattenedMCUout[20] ), .F0(\makeMusic.n7229 ));
  aT2F_t2F2_SLICE_219 \aT2F.t2F2.SLICE_219 ( .D1(\flattenedMCUout[22] ), 
    .C1(\flattenedMCUout[23] ), .B1(\flattenedMCUout[20] ), 
    .A1(\flattenedMCUout[21] ), .D0(\flattenedMCUout[23] ), 
    .C0(\flattenedMCUout[22] ), .B0(\flattenedMCUout[21] ), 
    .A0(\flattenedMCUout[20] ), .F0(\freq2[1] ), .F1(\freq2[8] ));
  aT2F_t2F2_SLICE_221 \aT2F.t2F2.SLICE_221 ( .D1(\flattenedMCUout[23] ), 
    .C1(\flattenedMCUout[22] ), .B1(\flattenedMCUout[21] ), 
    .A1(\flattenedMCUout[20] ), .D0(\flattenedMCUout[22] ), 
    .C0(\flattenedMCUout[23] ), .B0(\flattenedMCUout[20] ), 
    .A0(\flattenedMCUout[21] ), .F0(\freq2[2] ), .F1(\freq2[7] ));
  aT2F_t2F2_SLICE_223 \aT2F.t2F2.SLICE_223 ( .D1(\flattenedMCUout[23] ), 
    .C1(\flattenedMCUout[22] ), .B1(\flattenedMCUout[21] ), 
    .A1(\flattenedMCUout[20] ), .D0(\flattenedMCUout[22] ), 
    .C0(\flattenedMCUout[23] ), .B0(\flattenedMCUout[20] ), 
    .A0(\flattenedMCUout[21] ), .F0(\freq2[3] ), .F1(\freq2[4] ));
  aT2F_t2F1_SLICE_224 \aT2F.t2F1.SLICE_224 ( .D1(\flattenedMCUout[30] ), 
    .C1(\flattenedMCUout[31] ), .B1(\flattenedMCUout[29] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[31] ), 
    .C0(\flattenedMCUout[30] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[29] ), .F0(\freq1[5] ), .F1(\freq1[6] ));
  aT2F_t2F1_SLICE_226 \aT2F.t2F1.SLICE_226 ( .D1(\flattenedMCUout[30] ), 
    .C1(\flattenedMCUout[31] ), .B1(\flattenedMCUout[29] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[31] ), 
    .C0(\flattenedMCUout[30] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[29] ), .F0(\freq1[4] ), .F1(\freq1[7] ));
  aT2F_t2F1_SLICE_228 \aT2F.t2F1.SLICE_228 ( .D1(\flattenedMCUout[31] ), 
    .C1(\flattenedMCUout[29] ), .B1(\flattenedMCUout[30] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[29] ), 
    .C0(\flattenedMCUout[31] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[30] ), .F0(\freq1[3] ), .F1(\freq1[8] ));
  aT2F_t2F1_SLICE_230 \aT2F.t2F1.SLICE_230 ( .D1(\flattenedMCUout[30] ), 
    .C1(\flattenedMCUout[31] ), .B1(\flattenedMCUout[29] ), 
    .A1(\flattenedMCUout[28] ), .D0(\flattenedMCUout[31] ), 
    .C0(\flattenedMCUout[30] ), .B0(\flattenedMCUout[28] ), 
    .A0(\flattenedMCUout[29] ), .F0(\freq1[2] ), .F1(\freq1[1] ));
  aT2F_t2F0_SLICE_232 \aT2F.t2F0.SLICE_232 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[36] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[38] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freq0[1] ), .F1(\freq0[2] ));
  makeMusic_SLICE_233 \makeMusic.SLICE_233 ( .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\makeMusic.n7227 ));
  aT2F_t2F0_SLICE_235 \aT2F.t2F0.SLICE_235 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[36] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[38] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freq0[8] ), .F1(\freq0[3] ));
  aT2F_t2F0_SLICE_237 \aT2F.t2F0.SLICE_237 ( .D1(\flattenedMCUout[37] ), 
    .C1(\flattenedMCUout[38] ), .B1(\flattenedMCUout[39] ), 
    .A1(\flattenedMCUout[36] ), .D0(\flattenedMCUout[36] ), 
    .C0(\flattenedMCUout[37] ), .B0(\flattenedMCUout[38] ), 
    .A0(\flattenedMCUout[39] ), .F0(\freq0[7] ), .F1(\freq0[4] ));
  aT2F_t2F0_SLICE_239 \aT2F.t2F0.SLICE_239 ( .D1(\flattenedMCUout[38] ), 
    .C1(\flattenedMCUout[37] ), .B1(\flattenedMCUout[36] ), 
    .A1(\flattenedMCUout[39] ), .D0(\flattenedMCUout[37] ), 
    .C0(\flattenedMCUout[38] ), .B0(\flattenedMCUout[39] ), 
    .A0(\flattenedMCUout[36] ), .F0(\freq0[6] ), .F1(\freq0[5] ));
  makeMusic_SLICE_240 \makeMusic.SLICE_240 ( .D1(\flattenedMCUout[19] ), 
    .C1(\flattenedMCUout[18] ), .B1(\flattenedMCUout[17] ), 
    .A1(\flattenedMCUout[16] ), .D0(\flattenedMCUout[18] ), 
    .C0(\flattenedMCUout[19] ), .B0(\flattenedMCUout[16] ), 
    .A0(\flattenedMCUout[17] ), .F0(\makeMusic.n7222 ), .F1(\makeMusic.n7214 ));
  ad2ds_d2d2_SLICE_241 \ad2ds.d2d2.SLICE_241 ( .D0(\flattenedMCUout[18] ), 
    .C0(\flattenedMCUout[19] ), .B0(\flattenedMCUout[16] ), 
    .A0(\flattenedMCUout[17] ), .F0(\dur2[3] ));
  makeMusic_SLICE_242 \makeMusic.SLICE_242 ( .D1(\flattenedMCUout[33] ), 
    .C1(\flattenedMCUout[34] ), .B1(\flattenedMCUout[35] ), 
    .A1(\flattenedMCUout[32] ), .D0(\flattenedMCUout[34] ), 
    .C0(\flattenedMCUout[33] ), .B0(\flattenedMCUout[32] ), 
    .A0(\flattenedMCUout[35] ), .F0(\makeMusic.n7219 ), .F1(\makeMusic.n7211 ));
  ad2ds_d2d0_SLICE_243 \ad2ds.d2d0.SLICE_243 ( .D0(\flattenedMCUout[34] ), 
    .C0(\flattenedMCUout[33] ), .B0(\flattenedMCUout[32] ), 
    .A0(\flattenedMCUout[35] ), .F0(\dur0[3] ));
  makeMusic_SLICE_244 \makeMusic.SLICE_244 ( .D1(\flattenedMCUout[8] ), 
    .C1(\flattenedMCUout[10] ), .B1(\flattenedMCUout[9] ), 
    .A1(\flattenedMCUout[11] ), .D0(\flattenedMCUout[10] ), 
    .C0(\flattenedMCUout[8] ), .B0(\flattenedMCUout[11] ), 
    .A0(\flattenedMCUout[9] ), .F0(\makeMusic.n7250 ), .F1(\dur3[3] ));
  makeMusic_SLICE_246 \makeMusic.SLICE_246 ( .D1(\flattenedMCUout[26] ), 
    .C1(\flattenedMCUout[25] ), .B1(\flattenedMCUout[24] ), 
    .D0(\flattenedMCUout[25] ), .C0(\flattenedMCUout[26] ), 
    .A0(\flattenedMCUout[24] ), .F0(\makeMusic.n7224 ), .F1(\makeMusic.n7216 ));
  ad2ds_d2d1_SLICE_247 \ad2ds.d2d1.SLICE_247 ( .D0(\flattenedMCUout[27] ), 
    .C0(\flattenedMCUout[26] ), .B0(\flattenedMCUout[25] ), 
    .A0(\flattenedMCUout[24] ), .F0(\dur1[3] ));
  makeMusic_SLICE_248 \makeMusic.SLICE_248 ( .DI1(\makeMusic.n3 ), 
    .D1(\makeMusic.state[1] ), .C1(\makeMusic.state[0] ), 
    .A1(\makeMusic.done ), .D0(\makeMusic.state[0] ), 
    .C0(\makeMusic.state[1] ), .A0(\makeMusic.state[2] ), 
    .LSR(\makeMusic.state[2] ), .CLK(int_osc), .Q1(\makeMusic.state[1] ), 
    .F0(\makeMusic.n5 ), .F1(\makeMusic.n3 ));
  makeMusic_SLICE_249 \makeMusic.SLICE_249 ( .D1(\makeMusic.state[0] ), 
    .C1(\makeMusic.done ), .C0(\makeMusic.state[0] ), 
    .B0(\makeMusic.state[1] ), .A0(\makeMusic.state[2] ), 
    .F0(\makeMusic.n5265 ), .F1(\makeMusic.n4 ));
  makeMusic_howLong_SLICE_250 \makeMusic.howLong.SLICE_250 ( 
    .D0(\makeMusic.howLong.THRESHOLD[22] ), 
    .C0(\makeMusic.howLong.THRESHOLD[21] ), 
    .B0(\makeMusic.howLong.counter[21] ), .A0(\makeMusic.howLong.counter[22] ), 
    .F0(\makeMusic.howLong.n39 ));
  makeMusic_howLong_SLICE_251 \makeMusic.howLong.SLICE_251 ( 
    .D0(\makeMusic.howLong.THRESHOLD[26] ), 
    .C0(\makeMusic.howLong.THRESHOLD[25] ), 
    .B0(\makeMusic.howLong.counter[25] ), .A0(\makeMusic.howLong.counter[26] ), 
    .F0(\makeMusic.howLong.n38 ));
  makeMusic_howLong_SLICE_253 \makeMusic.howLong.SLICE_253 ( 
    .D0(\makeMusic.howLong.THRESHOLD[23] ), 
    .C0(\makeMusic.howLong.THRESHOLD[27] ), 
    .B0(\makeMusic.howLong.counter[23] ), .A0(\makeMusic.howLong.counter[27] ), 
    .F0(\makeMusic.howLong.n43 ));
  makeMusic_pitch_SLICE_254 \makeMusic.pitch.SLICE_254 ( 
    .D0(\makeMusic.pitch.counter[1] ), .C0(\makeMusic.pitch.counter[2] ), 
    .B0(\makeMusic.pitch.counter[4] ), .A0(\makeMusic.pitch.counter[9] ), 
    .F0(\makeMusic.pitch.n6948 ));
  makeMusic_pitch_SLICE_255 \makeMusic.pitch.SLICE_255 ( 
    .D0(\makeMusic.pitch.counter[3] ), .C0(\makeMusic.pitch.counter[5] ), 
    .B0(\makeMusic.pitch.counter[6] ), .A0(\makeMusic.pitch.counter[7] ), 
    .F0(\makeMusic.pitch.n6950 ));
  makeMusic_pitch_SLICE_256 \makeMusic.pitch.SLICE_256 ( 
    .D0(\makeMusic.pitch.threshold[27] ), .C0(\makeMusic.pitch.threshold[23] ), 
    .B0(\makeMusic.pitch.counter[23] ), .A0(\makeMusic.pitch.counter[27] ), 
    .F0(\makeMusic.pitch.n43 ));
  makeMusic_pitch_SLICE_258 \makeMusic.pitch.SLICE_258 ( 
    .D1(\makeMusic.pitch.counter[21] ), .C1(\makeMusic.pitch.threshold[20] ), 
    .B1(\makeMusic.pitch.counter[22] ), .D0(\makeMusic.pitch.threshold[25] ), 
    .C0(\makeMusic.pitch.threshold[26] ), .B0(\makeMusic.pitch.counter[26] ), 
    .A0(\makeMusic.pitch.counter[25] ), .F0(\makeMusic.pitch.n38 ), 
    .F1(\makeMusic.pitch.n39 ));
  SLICE_264 SLICE_264( .F0(VCC_net));
  aT2F_t2F1_SLICE_266 \aT2F.t2F1.SLICE_266 ( .D0(\flattenedMCUout[28] ), 
    .C0(\flattenedMCUout[30] ), .A0(\flattenedMCUout[29] ), .F0(n4700));
  makeMusic_SLICE_268 \makeMusic.SLICE_268 ( .D0(\makeMusic.makingMusic ), 
    .F0(n5264));
  makeMusic_SLICE_270 \makeMusic.SLICE_270 ( .DI1(\makeMusic.n619[4] ), 
    .D1(\makeMusic.state[2] ), .C1(\makeMusic.n7246 ), 
    .B1(\makeMusic.n660[4] ), .A1(\makeMusic.n5 ), .D0(\flattenedMCUout[10] ), 
    .C0(\flattenedMCUout[8] ), .B0(\flattenedMCUout[11] ), 
    .A0(\flattenedMCUout[9] ), .CE(\makeMusic.n5265 ), .CLK(int_osc), 
    .Q1(\makeMusic.dur[4] ), .F0(\makeMusic.n7246 ), .F1(\makeMusic.n619[4] ));
  makeMusic_pitch_SLICE_271 \makeMusic.pitch.SLICE_271 ( 
    .DI1(\makeMusic.pitch.clkStrobe_N_486 ), .D1(\makeMusic.pitch.n61 ), 
    .C1(\makeMusic.pitch.n59 ), .B1(\makeMusic.pitch.n6948 ), 
    .A1(\makeMusic.pitch.n6950 ), .D0(\makeMusic.en ), .C0(pwm_c), 
    .CLK(int_osc), .Q1(pwm_c), .F0(\makeMusic.pitch.n5282 ), 
    .F1(\makeMusic.pitch.clkStrobe_N_486 ));
  makeMusic_pitch_SLICE_272 \makeMusic.pitch.SLICE_272 ( 
    .D0(\makeMusic.freq[2] ), .C0(\makeMusic.freq[3] ), 
    .B0(\makeMusic.freq[6] ), .A0(\makeMusic.freq[7] ), 
    .F0(\makeMusic.pitch.n15 ));
  makeMusic_pitch_SLICE_274 \makeMusic.pitch.SLICE_274 ( 
    .D0(\makeMusic.pitch.threshold[28] ), .C0(\makeMusic.pitch.threshold[30] ), 
    .B0(\makeMusic.pitch.counter[29] ), .A0(\makeMusic.pitch.counter[30] ), 
    .F0(\makeMusic.pitch.n42 ));
  makeMusic_howLong_SLICE_276 \makeMusic.howLong.SLICE_276 ( 
    .D0(\makeMusic.howLong.counter[30] ), 
    .C0(\makeMusic.howLong.THRESHOLD[29] ), 
    .B0(\makeMusic.howLong.counter[29] ), 
    .A0(\makeMusic.howLong.THRESHOLD[30] ), .F0(\makeMusic.howLong.n42 ));
  makeMusic_howLong_SLICE_279 \makeMusic.howLong.SLICE_279 ( 
    .D0(\makeMusic.howLong.THRESHOLD[19] ), 
    .C0(\makeMusic.howLong.THRESHOLD[14] ), 
    .B0(\makeMusic.howLong.counter[19] ), .A0(\makeMusic.howLong.counter[14] ), 
    .F0(\makeMusic.howLong.n40 ));
  hf_osc hf_osc( .CLKHFPU(VCC_net), .CLKHF(int_osc));
  makeMusic_howLong_mult_127 \makeMusic.howLong.mult_127 ( .A7(\dur[7] ), 
    .A6(\dur[6] ), .A5(\dur[5] ), .A4(\makeMusic.dur[4] ), 
    .A3(\makeMusic.dur[3] ), .A2(\dur[2] ), .A1(\makeMusic.dur[1] ), 
    .B1(VCC_net), .B0(VCC_net), .O12(\makeMusic.howLong.n982[12] ), 
    .O11(\makeMusic.howLong.n982[11] ), .O10(\makeMusic.howLong.n982[10] ), 
    .O9(\makeMusic.howLong.n982[9] ), .O8(\makeMusic.howLong.n982[8] ), 
    .O7(\makeMusic.howLong.n982[7] ), .O6(\makeMusic.howLong.n982[6] ), 
    .O5(\makeMusic.howLong.n982[5] ), 
    .O4(\makeMusic.howLong.THRESHOLD_31__N_133[15] ), 
    .O3(\makeMusic.howLong.THRESHOLD_31__N_133[14] ), 
    .O2(\makeMusic.howLong.THRESHOLD_31__N_133[13] ), 
    .O1(\makeMusic.howLong.THRESHOLD_31__N_133[12] ), 
    .O0(\makeMusic.howLong.THRESHOLD_31__N_133[11] ));
  makeMusic_howLong_mult_126 \makeMusic.howLong.mult_126 ( .A7(\dur[7] ), 
    .A6(\dur[6] ), .A5(\dur[5] ), .A4(\makeMusic.dur[4] ), 
    .A3(\makeMusic.dur[3] ), .A2(\dur[2] ), .A1(\makeMusic.dur[1] ), 
    .B15(VCC_net), .B11(VCC_net), .B10(VCC_net), .B9(VCC_net), .B8(VCC_net), 
    .B3(VCC_net), .B2(VCC_net), .B0(VCC_net), 
    .O15(\makeMusic.howLong.n632[20] ), .O14(\makeMusic.howLong.n632[19] ), 
    .O13(\makeMusic.howLong.n632[18] ), .O12(\makeMusic.howLong.n632[17] ), 
    .O11(\makeMusic.howLong.n632[16] ), .O10(\makeMusic.howLong.n632[15] ), 
    .O9(\makeMusic.howLong.n632[14] ), .O8(\makeMusic.howLong.n632[13] ), 
    .O7(\makeMusic.howLong.n632[12] ), .O6(\makeMusic.howLong.n632[11] ), 
    .O5(\makeMusic.howLong.n632[10] ), .O4(\makeMusic.howLong.n632[9] ), 
    .O3(\makeMusic.howLong.n632[8] ), .O2(\makeMusic.howLong.n632[7] ), 
    .O1(\makeMusic.howLong.n632[6] ), .O0(\makeMusic.howLong.n632[5] ));
  spi_newFlattenedMCUout_i0 \spi.newFlattenedMCUout_i0 ( .PADDI(sdi_c), 
    .INCLK(sck_c), .DI0(\newFlattenedMCUout[0] ));
  ce ce_I( .PADDI(ce_c), .ce(ce));
  sdi sdi_I( .PADDI(sdi_c), .sdi(sdi));
  sck sck_I( .PADDI(sck_c), .sck(sck));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module makeMusic_pitch_SLICE_0 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module makeMusic_pitch_SLICE_1 ( input D1, C1, B1, D0, C0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_2 ( input D1, C1, D0, C0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module makeMusic_pitch_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_5 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_6 ( input D1, C1, B1, D0, C0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_7 ( input D1, C1, D0, C0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_8 ( input D1, C1, B1, D0, C0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_9 ( input D1, C1, B1, D0, C0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_10 ( input D1, C1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_12 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/pitch/sub_17_sub_3_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_13 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_17 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_20 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_21 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_22 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_23 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_115_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_115__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_115__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_27 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_28 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_29 ( input D1, B1, D0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_30 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_31 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_32 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_33 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_34 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_35 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_36 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_37 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_38 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_39 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/howLong/add_157_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_40 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_41 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_42 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_43 ( input D1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_44 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/howLong/sub_14_sub_3_add_2_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_45 ( input D1, B1, D0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_46 ( input D1, B1, D0, B0, CIN0, CIN1, output 
    F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/add_157_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_47 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_48 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_49 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_50 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_51 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_52 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_53 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_54 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_55 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_56 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_57 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_58 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_59 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_60 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_61 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_62 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_113__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_63 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/howLong/counter_113_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_113__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_64 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_64_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_64_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i5( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i6( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_65 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_65_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_65_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i8( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_67 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_67_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_67_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i10( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i9( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_69 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_69_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_69_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i1( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_70 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_70_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_70_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout__i12( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i11( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_72 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_72_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_72_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i14( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i13( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_74 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_74_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_74_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i16( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i15( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_76_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_76_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i18( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i17( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_78_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_78_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i20( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i19( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_80 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_80_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_80_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i22( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i21( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_82 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_82_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_82_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout__i24( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i23( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_83 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_83_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_83_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i4( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_86 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 \makeMusic/i760_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \makeMusic/state_2__I_0_2_Mux_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \makeMusic/makingMusic_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/state_i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xF3FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x0751") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 \makeMusic/mux_81_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 \makeMusic/mux_81_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/dur_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/dur_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x0CAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x0ACC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_90 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 \makeMusic/i1301_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \makeMusic.i1_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/counter_112__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/counter_112__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xCF30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFD02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_93 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \makeMusic/mux_93_i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \makeMusic/mux_93_i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/freq_i0_i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x0ACA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0CAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_95 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \makeMusic/mux_93_i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \makeMusic/mux_93_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/freq_i0_i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x3B08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_97 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 \makeMusic/mux_93_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \makeMusic/mux_93_i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/freq_i0_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_99 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40010 \makeMusic/mux_93_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \makeMusic/mux_93_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/freq_i0_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/freq_i0_i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_101 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40013 \makeMusic/i2_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \makeMusic/state_2__I_0_2_Mux_2_i7_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \makeMusic/en_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/state_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x40EA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_103 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i2626_2_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 i2624_2_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/dur_i0_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/dur_i0_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFF56") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xABFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40015 i2630_2_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 i2628_2_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/dur_i0_i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/dur_i0_i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_111 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_111_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_111_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i37 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i38 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_113 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_113_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_113_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i35 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i36 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_115 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_115_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_115_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i33 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i34 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_117 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_117_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_117_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_119 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_119_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_119_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_121 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_121_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_121_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_123 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_123_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_123_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_125 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_125_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_125_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_127 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_127_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_127_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_129_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_129_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_131 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_131_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_131_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_133 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_133_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_133_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_135 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_135_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_135_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_137 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_137_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_137_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_139 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_139_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_139_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_141 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_141_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_141_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_142 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 \spi.SLICE_142_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_143 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_143_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_143_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module spi_SLICE_145 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \spi.SLICE_145_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \spi.SLICE_145_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_147 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 SLICE_147_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_149 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40001 SLICE_149_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \spi/newFlattenedMCUout_i39 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_151 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_151_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_151_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i33( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i34( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_154 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_154_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_154_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i31( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i32( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_156 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_156_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_156_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i29( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i30( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_158 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_158_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_158_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i27( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i28( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_160 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_160_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_160_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout__i25( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q1));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ffsre2 flattenedMCUout__i26( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_NOTIN), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_6_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/mux_94_Mux_6_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xE4A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xCFC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_164 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_7_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40019 \makeMusic/mux_94_Mux_7_i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_166 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_8_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 \makeMusic/mux_94_Mux_8_i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40017 \makeMusic/mux_94_Mux_9_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40021 \makeMusic/mux_94_Mux_9_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xF808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40017 \makeMusic/mux_82_Mux_1_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40022 \makeMusic/mux_82_Mux_1_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xCAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_172 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_1_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/mux_94_Mux_1_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_2_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/mux_94_Mux_2_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_82_Mux_3_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40023 \makeMusic/mux_82_Mux_3_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_3_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/mux_94_Mux_3_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40017 \makeMusic/mux_82_Mux_4_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \makeMusic/mux_82_Mux_4_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40025 \makeMusic/mux_94_Mux_4_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/mux_94_Mux_4_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xE2C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \makeMusic/mux_94_Mux_5_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/mux_94_Mux_5_i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_186 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40026 \makeMusic/i931_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40027 \makeMusic/counter_1__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40028 \makeMusic/pitch/i2611_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40029 \makeMusic/pitch/i5_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_190 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40030 \makeMusic/pitch/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \makeMusic/pitch/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40032 \makeMusic/pitch/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \makeMusic/pitch/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_192 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40034 \makeMusic/pitch/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \makeMusic/pitch/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40036 \makeMusic/pitch/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 \makeMusic/pitch/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x3FCF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_196 ( input D0, C0, B0, A0, output F0 );

  lut40038 \makeMusic/pitch/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40039 \makeMusic/pitch/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \makeMusic/pitch/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_198 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40041 \makeMusic/howLong/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40042 \makeMusic/howLong/i5_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x3FF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_200 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40034 \makeMusic/howLong/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \makeMusic/howLong/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40036 \makeMusic/howLong/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \makeMusic/howLong/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x3CFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40045 \makeMusic/howLong/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \makeMusic/howLong/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_205 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40047 \makeMusic/howLong/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40048 \makeMusic/howLong/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_206 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40049 \makeMusic.howLong.SLICE_206_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40050 \makeMusic/howLong/i2108_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/howLong/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_207 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40051 \makeMusic/howLong/i2622_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \makeMusic/howLong/i2102_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F3_SLICE_208 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40053 \aT2F/t2F3/i385_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \aT2F/t2F3/i386_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x518A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x7C85") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_209 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40055 \makeMusic/mux_93_i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40056 \makeMusic/i2391_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/freq_i0_i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x50D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x70E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F3_SLICE_211 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40057 \aT2F/t2F3/i412_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \aT2F/t2F3/i370_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x9F1E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x2535") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F3_SLICE_213 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40059 \aT2F/t2F3/i399_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 \aT2F/t2F3/i369_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x812F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x1A95") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F3_SLICE_215 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40061 \aT2F/t2F3/i398_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \aT2F/t2F3/i350_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x17F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xEF1A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F2_SLICE_216 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40053 \aT2F/t2F2/i306_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \aT2F/t2F2/i291_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_217 ( input D0, C0, B0, A0, output F0 );

  lut40063 \makeMusic/i2366_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x7E00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F2_SLICE_219 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40064 \aT2F/t2F2/i271_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \aT2F/t2F2/i333_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xEF1A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x9F1E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F2_SLICE_221 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40066 \aT2F/t2F2/i290_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \aT2F/t2F2/i320_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x19C3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x841F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F2_SLICE_223 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40068 \aT2F/t2F2/i307_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \aT2F/t2F2/i319_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x78A3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x1F71") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F1_SLICE_224 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40070 \aT2F/t2F1/i212_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \aT2F/t2F1/i227_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x4353") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x318C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F1_SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40072 \aT2F/t2F1/i211_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \aT2F/t2F1/i228_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x1C93") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x78C5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F1_SLICE_228 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40074 \aT2F/t2F1/i192_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \aT2F/t2F1/i240_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xC9FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x1A7B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F1_SLICE_230 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40076 \aT2F/t2F1/i254_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 \aT2F/t2F1/i241_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x91FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x814F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F0_SLICE_232 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40078 \aT2F/t2F0/i541_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 \aT2F/t2F0/i554_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x8327") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xB33E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_233 ( input D0, C0, B0, A0, output F0 );

  lut40080 \makeMusic/i2436_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x4CC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F0_SLICE_235 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40081 \aT2F/t2F0/i540_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \aT2F/t2F0/i492_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x347D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xDCD6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F0_SLICE_237 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40083 \aT2F/t2F0/i528_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 \aT2F/t2F0/i511_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x68E3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x614B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F0_SLICE_239 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40085 \aT2F/t2F0/i527_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 \aT2F/t2F0/i512_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x6246") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x4437") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_240 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40087 \makeMusic/i2382_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 \makeMusic/i2384_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xFFE0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xF080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ad2ds_d2d2_SLICE_241 ( input D0, C0, B0, A0, output F0 );

  lut40089 \ad2ds/d2d2/Mux_445_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xF18F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_242 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40090 \makeMusic/i2417_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \makeMusic/i2437_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFCEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xAA80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ad2ds_d2d0_SLICE_243 ( input D0, C0, B0, A0, output F0 );

  lut40092 \ad2ds/d2d0/Mux_566_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xABD5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_244 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40093 \ad2ds/d2d3/Mux_466_i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40094 \makeMusic/i2425_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xADB5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xCC80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_246 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40095 \makeMusic/i2385_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \makeMusic/i2387_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ad2ds_d2d1_SLICE_247 ( input D0, C0, B0, A0, output F0 );

  lut40097 \ad2ds/d2d1/Mux_424_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xF81F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_248 ( input DI1, D1, C1, A1, D0, C0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40098 \makeMusic/i733_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \makeMusic/equal_20_i5_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \makeMusic/state_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x5FA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_249 ( input D1, C1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \makeMusic/i1_2_lut_adj_40 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \makeMusic.i2618_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x5656") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_250 ( input D0, C0, B0, A0, output F0 );

  lut40046 \makeMusic/howLong/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_251 ( input D0, C0, B0, A0, output F0 );

  lut40046 \makeMusic/howLong/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_253 ( input D0, C0, B0, A0, output F0 );

  lut40038 \makeMusic/howLong/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_254 ( input D0, C0, B0, A0, output F0 );

  lut40052 \makeMusic/pitch/i2104_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_255 ( input D0, C0, B0, A0, output F0 );

  lut40102 \makeMusic/pitch/i2106_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_256 ( input D0, C0, B0, A0, output F0 );

  lut40046 \makeMusic/pitch/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_258 ( input D1, C1, B1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40103 \makeMusic/pitch/i7_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \makeMusic/pitch/i6_4_lut_adj_39 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x3FFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_264 ( output F0 );
  wire   GNDI;

  lut40104 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module aT2F_t2F1_SLICE_266 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40105 \aT2F/t2F1/i187_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x5FFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_268 ( input D0, output F0 );
  wire   GNDI;

  lut40106 \makeMusic/i740_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_270 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CE, 
    CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40055 \makeMusic/mux_81_i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 \makeMusic/i2420_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \makeMusic/dur_i0_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_271 ( input DI1, D1, C1, B1, A1, D0, C0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40108 \makeMusic/pitch/i2614_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40109 \makeMusic/pitch/i2616_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_272 ( input D0, C0, B0, A0, output F0 );

  lut40110 \makeMusic/pitch/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_274 ( input D0, C0, B0, A0, output F0 );

  lut40038 \makeMusic/pitch/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_276 ( input D0, C0, B0, A0, output F0 );

  lut40031 \makeMusic/howLong/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_279 ( input D0, C0, B0, A0, output F0 );

  lut40048 \makeMusic/howLong/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module hf_osc ( input CLKHFPU, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hf_osc( .CLKHFPU(CLKHFPU), .CLKHFEN(GNDI), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b01";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module makeMusic_howLong_mult_127 ( input A7, A6, A5, A4, A3, A2, A1, B1, B0, 
    output O12, O11, O10, O9, O8, O7, O6, O5, O4, O3, O2, O1, O0 );
  wire   GNDI;

  MAC16_B \makeMusic/howLong/mult_127 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(GNDI), .B15(GNDI), 
    .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), .B9(GNDI), 
    .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), .B3(GNDI), 
    .B2(GNDI), .B1(B1), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), 
    .O15(), .O14(), .O13(), .O12(O12), .O11(O11), .O10(O10), .O9(O9), .O8(O8), 
    .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), .O2(O2), .O1(O1), .O0(O0), 
    .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A1 => O1) = (0:0:0,0:0:0);
    (B1 => O12) = (0:0:0,0:0:0);
    (B1 => O11) = (0:0:0,0:0:0);
    (B1 => O10) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B1 => O8) = (0:0:0,0:0:0);
    (B1 => O7) = (0:0:0,0:0:0);
    (B1 => O6) = (0:0:0,0:0:0);
    (B1 => O5) = (0:0:0,0:0:0);
    (B1 => O4) = (0:0:0,0:0:0);
    (B1 => O3) = (0:0:0,0:0:0);
    (B1 => O2) = (0:0:0,0:0:0);
    (B1 => O1) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
    (B0 => O1) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b10";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b10";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b1";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module makeMusic_howLong_mult_126 ( input A7, A6, A5, A4, A3, A2, A1, B15, B11, 
    B10, B9, B8, B3, B2, B0, output O15, O14, O13, O12, O11, O10, O9, O8, O7, 
    O6, O5, O4, O3, O2, O1, O0 );
  wire   GNDI;

  MAC160111 \makeMusic/howLong/mult_126 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(GNDI), .B15(B15), 
    .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(B11), .B10(B10), .B9(B9), .B8(B8), 
    .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), .B3(B3), .B2(B2), .B1(GNDI), 
    .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), .D11(GNDI), 
    .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), .D5(GNDI), 
    .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), .AHOLD(GNDI), 
    .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), .IRSTBOT(GNDI), 
    .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), .OLOADBOT(GNDI), 
    .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), 
    .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), 
    .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(), .O21(), .O20(), 
    .O19(), .O18(), .O17(), .O16(), .O15(O15), .O14(O14), .O13(O13), .O12(O12), 
    .O11(O11), .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), 
    .O3(O3), .O2(O2), .O1(O1), .O0(O0), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A7 => O15) = (0:0:0,0:0:0);
    (A7 => O14) = (0:0:0,0:0:0);
    (A7 => O13) = (0:0:0,0:0:0);
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O15) = (0:0:0,0:0:0);
    (A6 => O14) = (0:0:0,0:0:0);
    (A6 => O13) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O15) = (0:0:0,0:0:0);
    (A5 => O14) = (0:0:0,0:0:0);
    (A5 => O13) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O15) = (0:0:0,0:0:0);
    (A4 => O14) = (0:0:0,0:0:0);
    (A4 => O13) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O15) = (0:0:0,0:0:0);
    (A3 => O14) = (0:0:0,0:0:0);
    (A3 => O13) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O15) = (0:0:0,0:0:0);
    (A2 => O14) = (0:0:0,0:0:0);
    (A2 => O13) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O15) = (0:0:0,0:0:0);
    (A1 => O14) = (0:0:0,0:0:0);
    (A1 => O13) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A1 => O1) = (0:0:0,0:0:0);
    (B15 => O15) = (0:0:0,0:0:0);
    (B11 => O15) = (0:0:0,0:0:0);
    (B11 => O14) = (0:0:0,0:0:0);
    (B11 => O13) = (0:0:0,0:0:0);
    (B11 => O12) = (0:0:0,0:0:0);
    (B11 => O11) = (0:0:0,0:0:0);
    (B10 => O15) = (0:0:0,0:0:0);
    (B10 => O14) = (0:0:0,0:0:0);
    (B10 => O13) = (0:0:0,0:0:0);
    (B10 => O12) = (0:0:0,0:0:0);
    (B10 => O11) = (0:0:0,0:0:0);
    (B10 => O10) = (0:0:0,0:0:0);
    (B9 => O15) = (0:0:0,0:0:0);
    (B9 => O14) = (0:0:0,0:0:0);
    (B9 => O13) = (0:0:0,0:0:0);
    (B9 => O12) = (0:0:0,0:0:0);
    (B9 => O11) = (0:0:0,0:0:0);
    (B9 => O10) = (0:0:0,0:0:0);
    (B9 => O9) = (0:0:0,0:0:0);
    (B8 => O15) = (0:0:0,0:0:0);
    (B8 => O14) = (0:0:0,0:0:0);
    (B8 => O13) = (0:0:0,0:0:0);
    (B8 => O12) = (0:0:0,0:0:0);
    (B8 => O11) = (0:0:0,0:0:0);
    (B8 => O10) = (0:0:0,0:0:0);
    (B8 => O9) = (0:0:0,0:0:0);
    (B8 => O8) = (0:0:0,0:0:0);
    (B3 => O15) = (0:0:0,0:0:0);
    (B3 => O14) = (0:0:0,0:0:0);
    (B3 => O13) = (0:0:0,0:0:0);
    (B3 => O12) = (0:0:0,0:0:0);
    (B3 => O11) = (0:0:0,0:0:0);
    (B3 => O10) = (0:0:0,0:0:0);
    (B3 => O9) = (0:0:0,0:0:0);
    (B3 => O8) = (0:0:0,0:0:0);
    (B3 => O7) = (0:0:0,0:0:0);
    (B3 => O6) = (0:0:0,0:0:0);
    (B3 => O5) = (0:0:0,0:0:0);
    (B3 => O4) = (0:0:0,0:0:0);
    (B3 => O3) = (0:0:0,0:0:0);
    (B2 => O15) = (0:0:0,0:0:0);
    (B2 => O14) = (0:0:0,0:0:0);
    (B2 => O13) = (0:0:0,0:0:0);
    (B2 => O12) = (0:0:0,0:0:0);
    (B2 => O11) = (0:0:0,0:0:0);
    (B2 => O10) = (0:0:0,0:0:0);
    (B2 => O9) = (0:0:0,0:0:0);
    (B2 => O8) = (0:0:0,0:0:0);
    (B2 => O7) = (0:0:0,0:0:0);
    (B2 => O6) = (0:0:0,0:0:0);
    (B2 => O5) = (0:0:0,0:0:0);
    (B2 => O4) = (0:0:0,0:0:0);
    (B2 => O3) = (0:0:0,0:0:0);
    (B2 => O2) = (0:0:0,0:0:0);
    (B0 => O15) = (0:0:0,0:0:0);
    (B0 => O14) = (0:0:0,0:0:0);
    (B0 => O13) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
    (B0 => O1) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC160111 ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module spi_newFlattenedMCUout_i0 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \spi/newFlattenedMCUout_i0 ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module ce ( output PADDI, input ce );
  wire   GNDI;

  BB_B_B \ce_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(ce));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (ce => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module sdi ( output PADDI, input sdi );
  wire   GNDI;

  BB_B_B \sdi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sdi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sck ( output PADDI, input sck );
  wire   GNDI;

  BB_B_B \sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule
