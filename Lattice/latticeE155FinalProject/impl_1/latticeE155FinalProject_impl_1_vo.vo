
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o latticeE155FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui latticeE155FinalProject_impl_1.udb 
// Netlist created on Mon Nov 21 20:43:40 2022
// Netlist written on Mon Nov 21 20:43:49 2022
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( sdi, sck, pwm, clk );
  input  sdi, sck, clk;
  output pwm;
  wire   \makeMusic.pitch.n133[4] , \makeMusic.pitch.n133[3] , 
         \makeMusic.pitch.n2447 , \makeMusic.pitch.counter[4] , 
         \makeMusic.pitch.n717 , \makeMusic.pitch.counter[3] , 
         \makeMusic.pitch.n568 , int_osc, \makeMusic.pitch.n719 , 
         \makeMusic.pitch.n133[12] , \makeMusic.pitch.n133[11] , 
         \makeMusic.pitch.n2459 , \makeMusic.pitch.counter[12] , 
         \makeMusic.pitch.n725 , \makeMusic.pitch.counter[11] , 
         \makeMusic.pitch.n727 , \makeMusic.pitch.n133[10] , 
         \makeMusic.pitch.n133[9] , \makeMusic.pitch.n2456 , 
         \makeMusic.pitch.counter[10] , \makeMusic.pitch.n723 , 
         \makeMusic.pitch.counter[9] , \makeMusic.pitch.n133[14] , 
         \makeMusic.pitch.n133[13] , \makeMusic.pitch.n2462 , 
         \makeMusic.pitch.counter[14] , \makeMusic.pitch.counter[13] , 
         \makeMusic.pitch.n729 , \makeMusic.pitch.n133[8] , 
         \makeMusic.pitch.n133[7] , \makeMusic.pitch.n2453 , 
         \makeMusic.pitch.counter[8] , \makeMusic.pitch.n721 , 
         \makeMusic.pitch.counter[7] , \makeMusic.pitch.n133[0] , 
         \makeMusic.pitch.n2441 , \makeMusic.pitch.counter[0] , VCC_net, 
         \makeMusic.pitch.n715 , \makeMusic.pitch.n133[6] , 
         \makeMusic.pitch.n133[5] , \makeMusic.pitch.n2450 , 
         \makeMusic.pitch.counter[6] , \makeMusic.pitch.counter[5] , 
         \makeMusic.pitch.n133[2] , \makeMusic.pitch.n133[1] , 
         \makeMusic.pitch.n2444 , \makeMusic.pitch.counter[2] , 
         \makeMusic.pitch.counter[1] , \makeMusic.pitch.n133[16] , 
         \makeMusic.pitch.n133[15] , \makeMusic.pitch.n2465 , 
         \makeMusic.pitch.counter[16] , \makeMusic.pitch.counter[15] , 
         \makeMusic.pitch.n731 , \makeMusic.pitch.n133[18] , 
         \makeMusic.pitch.n133[17] , \makeMusic.pitch.n2468 , 
         \makeMusic.pitch.counter[18] , \makeMusic.pitch.counter[17] , 
         \makeMusic.pitch.n733 , \makeMusic.pitch.n133[20] , 
         \makeMusic.pitch.n133[19] , \makeMusic.pitch.n2471 , 
         \makeMusic.pitch.counter[20] , \makeMusic.pitch.counter[19] , 
         \makeMusic.pitch.n735 , \makeMusic.pitch.n133[22] , 
         \makeMusic.pitch.n133[21] , \makeMusic.pitch.n2474 , 
         \makeMusic.pitch.counter[22] , \makeMusic.pitch.counter[21] , 
         \makeMusic.pitch.n737 , \makeMusic.pitch.n133[24] , 
         \makeMusic.pitch.n133[23] , \makeMusic.pitch.n2477 , 
         \makeMusic.pitch.counter[24] , \makeMusic.pitch.counter[23] , 
         \makeMusic.pitch.n739 , \makeMusic.pitch.n133[26] , 
         \makeMusic.pitch.n133[25] , \makeMusic.pitch.n2480 , 
         \makeMusic.pitch.counter[26] , \makeMusic.pitch.counter[25] , 
         \makeMusic.pitch.n741 , \makeMusic.pitch.n133[28] , 
         \makeMusic.pitch.n133[27] , \makeMusic.pitch.n2483 , 
         \makeMusic.pitch.counter[28] , \makeMusic.pitch.counter[27] , 
         \makeMusic.pitch.n743 , \makeMusic.pitch.n133[30] , 
         \makeMusic.pitch.n133[29] , \makeMusic.pitch.n2486 , 
         \makeMusic.pitch.counter[30] , \makeMusic.pitch.counter[29] , 
         \makeMusic.pitch.n745 , \makeMusic.pitch.n133[31] , 
         \makeMusic.pitch.n2489 , \makeMusic.pitch.counter[31] , 
         \makeMusic.pitch.n2324 , \makeMusic.pitch.threshold_31__N_199[9] , 
         \makeMusic.pitch.threshold[8] , \makeMusic.pitch.n748 , 
         \makeMusic.pitch.n2327 , \makeMusic.pitch.threshold_31__N_199[11] , 
         \makeMusic.pitch.threshold_31__N_199[10] , 
         \makeMusic.pitch.threshold[9] , \makeMusic.pitch.threshold[10] , 
         \makeMusic.pitch.n750 , \makeMusic.pitch.n2330 , 
         \makeMusic.pitch.threshold_31__N_199[13] , 
         \makeMusic.pitch.threshold_31__N_199[12] , 
         \makeMusic.pitch.threshold[11] , \makeMusic.pitch.threshold[12] , 
         \makeMusic.pitch.n752 , \makeMusic.pitch.n2333 , 
         \makeMusic.pitch.threshold_31__N_199[15] , 
         \makeMusic.pitch.threshold_31__N_199[14] , 
         \makeMusic.pitch.threshold[13] , \makeMusic.pitch.threshold[14] , 
         \makeMusic.pitch.n754 , \makeMusic.pitch.n2336 , 
         \makeMusic.pitch.threshold_31__N_199[17] , 
         \makeMusic.pitch.threshold_31__N_199[16] , 
         \makeMusic.pitch.threshold[15] , \makeMusic.pitch.threshold[16] , 
         \makeMusic.pitch.n756 , \makeMusic.pitch.n2339 , 
         \makeMusic.pitch.threshold_31__N_199[19] , 
         \makeMusic.pitch.threshold_31__N_199[18] , 
         \makeMusic.pitch.threshold[17] , \makeMusic.pitch.threshold[18] , 
         \makeMusic.pitch.n758 , \makeMusic.pitch.n2342 , 
         \makeMusic.pitch.threshold_31__N_199[21] , 
         \makeMusic.pitch.threshold_31__N_199[20] , 
         \makeMusic.pitch.threshold[19] , \makeMusic.pitch.threshold[20] , 
         \makeMusic.pitch.n760 , \makeMusic.pitch.n2345 , 
         \makeMusic.pitch.threshold_31__N_199[23] , 
         \makeMusic.pitch.threshold_31__N_199[22] , 
         \makeMusic.pitch.threshold[21] , \makeMusic.pitch.threshold[22] , 
         \makeMusic.pitch.n762 , \makeMusic.pitch.n2348 , 
         \makeMusic.pitch.threshold_31__N_199[25] , 
         \makeMusic.pitch.threshold_31__N_199[24] , 
         \makeMusic.pitch.threshold[23] , \makeMusic.pitch.threshold[24] , 
         \makeMusic.pitch.n764 , \makeMusic.pitch.n2351 , 
         \makeMusic.pitch.threshold[31] , \makeMusic.howLong.n133[0] , 
         \makeMusic.howLong.n2390 , \makeMusic.howLong.counter[0] , 
         \makeMusic.howLong.n767 , \makeMusic.howLong.n133[2] , 
         \makeMusic.howLong.n133[1] , \makeMusic.howLong.n2393 , 
         \makeMusic.howLong.counter[2] , \makeMusic.howLong.counter[1] , 
         \makeMusic.howLong.n769 , \makeMusic.howLong.n133[4] , 
         \makeMusic.howLong.n133[3] , \makeMusic.howLong.n2396 , 
         \makeMusic.howLong.counter[4] , \makeMusic.howLong.counter[3] , 
         \makeMusic.howLong.n771 , \makeMusic.howLong.n133[6] , 
         \makeMusic.howLong.n133[5] , \makeMusic.howLong.n2399 , 
         \makeMusic.howLong.counter[6] , \makeMusic.howLong.counter[5] , 
         \makeMusic.howLong.n773 , \makeMusic.howLong.n133[8] , 
         \makeMusic.howLong.n133[7] , \makeMusic.howLong.n2402 , 
         \makeMusic.howLong.counter[8] , \makeMusic.howLong.counter[7] , 
         \makeMusic.howLong.n775 , \makeMusic.howLong.n133[10] , 
         \makeMusic.howLong.n133[9] , \makeMusic.howLong.n2405 , 
         \makeMusic.howLong.counter[10] , \makeMusic.howLong.counter[9] , 
         \makeMusic.howLong.n777 , \makeMusic.howLong.n133[12] , 
         \makeMusic.howLong.n133[11] , \makeMusic.howLong.n2408 , 
         \makeMusic.howLong.counter[12] , \makeMusic.howLong.counter[11] , 
         \makeMusic.howLong.n779 , \makeMusic.howLong.n133[14] , 
         \makeMusic.howLong.n133[13] , \makeMusic.howLong.n2411 , 
         \makeMusic.howLong.counter[14] , \makeMusic.howLong.counter[13] , 
         \makeMusic.howLong.n781 , \makeMusic.howLong.n133[16] , 
         \makeMusic.howLong.n133[15] , \makeMusic.howLong.n2414 , 
         \makeMusic.howLong.counter[16] , \makeMusic.howLong.counter[15] , 
         \makeMusic.howLong.n783 , \makeMusic.howLong.n133[18] , 
         \makeMusic.howLong.n133[17] , \makeMusic.howLong.n2417 , 
         \makeMusic.howLong.counter[18] , \makeMusic.howLong.counter[17] , 
         \makeMusic.howLong.n785 , \makeMusic.howLong.n133[20] , 
         \makeMusic.howLong.n133[19] , \makeMusic.howLong.n2420 , 
         \makeMusic.howLong.counter[20] , \makeMusic.howLong.counter[19] , 
         \makeMusic.howLong.n787 , \makeMusic.howLong.n133[22] , 
         \makeMusic.howLong.n133[21] , \makeMusic.howLong.n2423 , 
         \makeMusic.howLong.counter[22] , \makeMusic.howLong.counter[21] , 
         \makeMusic.howLong.n789 , \makeMusic.howLong.n133[24] , 
         \makeMusic.howLong.n133[23] , \makeMusic.howLong.n2426 , 
         \makeMusic.howLong.counter[24] , \makeMusic.howLong.counter[23] , 
         \makeMusic.howLong.n791 , \makeMusic.howLong.n133[26] , 
         \makeMusic.howLong.n133[25] , \makeMusic.howLong.n2429 , 
         \makeMusic.howLong.counter[26] , \makeMusic.howLong.counter[25] , 
         \makeMusic.howLong.n793 , \makeMusic.howLong.n133[28] , 
         \makeMusic.howLong.n133[27] , \makeMusic.howLong.n2432 , 
         \makeMusic.howLong.counter[28] , \makeMusic.howLong.counter[27] , 
         \makeMusic.howLong.n795 , \makeMusic.howLong.n133[30] , 
         \makeMusic.howLong.n133[29] , \makeMusic.howLong.n2435 , 
         \makeMusic.howLong.counter[30] , \makeMusic.howLong.counter[29] , 
         \makeMusic.howLong.n797 , \makeMusic.howLong.n133[31] , 
         \makeMusic.howLong.n2438 , \makeMusic.howLong.counter[31] , 
         \makeMusic.howLong.n2354 , \makeMusic.howLong.THRESHOLD_31__N_135[9] , 
         \makeMusic.howLong.THRESHOLD[9] , \makeMusic.howLong.n800 , 
         \makeMusic.howLong.n2357 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[11] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[10] , 
         \makeMusic.howLong.THRESHOLD[10] , \makeMusic.howLong.THRESHOLD[11] , 
         \makeMusic.howLong.n802 , \makeMusic.howLong.n2360 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[13] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[12] , 
         \makeMusic.howLong.THRESHOLD[12] , \makeMusic.howLong.THRESHOLD[13] , 
         \makeMusic.howLong.n804 , \makeMusic.howLong.n2363 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[15] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[14] , 
         \makeMusic.howLong.THRESHOLD[14] , \makeMusic.howLong.THRESHOLD[15] , 
         \makeMusic.howLong.n806 , \makeMusic.howLong.n2366 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[17] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[16] , 
         \makeMusic.howLong.THRESHOLD[16] , \makeMusic.howLong.THRESHOLD[17] , 
         \makeMusic.howLong.n808 , \makeMusic.howLong.n2369 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[19] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[18] , 
         \makeMusic.howLong.THRESHOLD[18] , \makeMusic.howLong.THRESHOLD[19] , 
         \makeMusic.howLong.n810 , \makeMusic.howLong.n2372 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[21] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[20] , 
         \makeMusic.howLong.THRESHOLD[20] , \makeMusic.howLong.THRESHOLD[21] , 
         \makeMusic.howLong.n812 , \makeMusic.howLong.n2375 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[23] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[22] , 
         \makeMusic.howLong.THRESHOLD[22] , \makeMusic.howLong.THRESHOLD[23] , 
         \makeMusic.howLong.n814 , \makeMusic.howLong.n2378 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[25] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[24] , 
         \makeMusic.howLong.THRESHOLD[24] , \makeMusic.howLong.THRESHOLD[25] , 
         \makeMusic.howLong.n816 , \makeMusic.howLong.n2381 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[27] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[26] , 
         \makeMusic.howLong.THRESHOLD[26] , \makeMusic.howLong.THRESHOLD[27] , 
         \makeMusic.howLong.n818 , \makeMusic.howLong.n2384 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[29] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[28] , 
         \makeMusic.howLong.THRESHOLD[28] , \makeMusic.howLong.THRESHOLD[29] , 
         \makeMusic.howLong.n820 , \makeMusic.howLong.n2387 , 
         \makeMusic.howLong.THRESHOLD_31__N_135[31] , 
         \makeMusic.howLong.THRESHOLD_31__N_135[30] , 
         \makeMusic.howLong.THRESHOLD[30] , \makeMusic.howLong.THRESHOLD[31] , 
         \newFlattenedMCUout[1].sig_047.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_000.FeedThruLUT , \newFlattenedMCUout[1] , 
         \newFlattenedMCUout[0] , flattenedMCUout_47__N_49, 
         \flattenedMCUout[0] , \flattenedMCUout[1] , 
         \newFlattenedMCUout[46].sig_002.FeedThruLUT , 
         \newFlattenedMCUout[47].sig_001.FeedThruLUT , 
         \newFlattenedMCUout[46] , \newFlattenedMCUout[47] , 
         \flattenedMCUout[47] , \flattenedMCUout[46] , 
         \newFlattenedMCUout[44].sig_004.FeedThruLUT , 
         \newFlattenedMCUout[45].sig_003.FeedThruLUT , 
         \newFlattenedMCUout[44] , \newFlattenedMCUout[45] , 
         \flattenedMCUout[45] , \flattenedMCUout[44] , 
         \newFlattenedMCUout[42].sig_006.FeedThruLUT , 
         \newFlattenedMCUout[43].sig_005.FeedThruLUT , 
         \newFlattenedMCUout[42] , \newFlattenedMCUout[43] , 
         \flattenedMCUout[43] , \flattenedMCUout[42] , 
         \newFlattenedMCUout[40].sig_008.FeedThruLUT , 
         \newFlattenedMCUout[41].sig_007.FeedThruLUT , 
         \newFlattenedMCUout[40] , \newFlattenedMCUout[41] , 
         \flattenedMCUout[41] , \flattenedMCUout[40] , 
         \newFlattenedMCUout[38].sig_010.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_009.FeedThruLUT , 
         \newFlattenedMCUout[38] , \newFlattenedMCUout[39] , 
         \flattenedMCUout[39] , \flattenedMCUout[38] , 
         \newFlattenedMCUout[36].sig_012.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_011.FeedThruLUT , 
         \newFlattenedMCUout[36] , \newFlattenedMCUout[37] , 
         \flattenedMCUout[37] , \flattenedMCUout[36] , 
         \newFlattenedMCUout[34].sig_014.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_013.FeedThruLUT , 
         \newFlattenedMCUout[34] , \newFlattenedMCUout[35] , 
         \flattenedMCUout[35] , \flattenedMCUout[34] , 
         \newFlattenedMCUout[32].sig_016.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_015.FeedThruLUT , 
         \newFlattenedMCUout[32] , \newFlattenedMCUout[33] , 
         \flattenedMCUout[33] , \flattenedMCUout[32] , 
         \newFlattenedMCUout[30].sig_018.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_017.FeedThruLUT , 
         \newFlattenedMCUout[30] , \newFlattenedMCUout[31] , 
         \flattenedMCUout[31] , \flattenedMCUout[30] , 
         \newFlattenedMCUout[28].sig_020.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_019.FeedThruLUT , 
         \newFlattenedMCUout[28] , \newFlattenedMCUout[29] , 
         \flattenedMCUout[29] , \flattenedMCUout[28] , 
         \newFlattenedMCUout[26].sig_022.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_021.FeedThruLUT , 
         \newFlattenedMCUout[26] , \newFlattenedMCUout[27] , 
         \flattenedMCUout[27] , \flattenedMCUout[26] , 
         \newFlattenedMCUout[24].sig_024.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_023.FeedThruLUT , 
         \newFlattenedMCUout[24] , \newFlattenedMCUout[25] , 
         \flattenedMCUout[25] , \flattenedMCUout[24] , 
         \newFlattenedMCUout[22].sig_026.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_025.FeedThruLUT , 
         \newFlattenedMCUout[22] , \newFlattenedMCUout[23] , 
         \flattenedMCUout[23] , \flattenedMCUout[22] , 
         \newFlattenedMCUout[20].sig_028.FeedThruLUT , 
         \newFlattenedMCUout[21].sig_027.FeedThruLUT , 
         \newFlattenedMCUout[20] , \newFlattenedMCUout[21] , 
         \flattenedMCUout[21] , \flattenedMCUout[20] , 
         \newFlattenedMCUout[18].sig_030.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_029.FeedThruLUT , 
         \newFlattenedMCUout[18] , \newFlattenedMCUout[19] , 
         \flattenedMCUout[19] , \flattenedMCUout[18] , 
         \newFlattenedMCUout[16].sig_032.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_031.FeedThruLUT , 
         \newFlattenedMCUout[16] , \newFlattenedMCUout[17] , 
         \flattenedMCUout[17] , \flattenedMCUout[16] , 
         \newFlattenedMCUout[14].sig_034.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_033.FeedThruLUT , 
         \newFlattenedMCUout[14] , \newFlattenedMCUout[15] , 
         \flattenedMCUout[15] , \flattenedMCUout[14] , 
         \newFlattenedMCUout[12].sig_036.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_035.FeedThruLUT , 
         \newFlattenedMCUout[12] , \newFlattenedMCUout[13] , 
         \flattenedMCUout[13] , \flattenedMCUout[12] , 
         \newFlattenedMCUout[10].sig_038.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_037.FeedThruLUT , 
         \newFlattenedMCUout[10] , \newFlattenedMCUout[11] , 
         \flattenedMCUout[11] , \flattenedMCUout[10] , 
         \newFlattenedMCUout[8].sig_040.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_039.FeedThruLUT , \newFlattenedMCUout[8] , 
         \newFlattenedMCUout[9] , \flattenedMCUout[9] , \flattenedMCUout[8] , 
         \newFlattenedMCUout[6].sig_042.FeedThruLUT , 
         \newFlattenedMCUout[7].sig_041.FeedThruLUT , \newFlattenedMCUout[6] , 
         \newFlattenedMCUout[7] , \flattenedMCUout[7] , \flattenedMCUout[6] , 
         \newFlattenedMCUout[4].sig_044.FeedThruLUT , 
         \newFlattenedMCUout[5].sig_043.FeedThruLUT , \newFlattenedMCUout[4] , 
         \newFlattenedMCUout[5] , \flattenedMCUout[5] , \flattenedMCUout[4] , 
         \newFlattenedMCUout[2].sig_046.FeedThruLUT , 
         \newFlattenedMCUout[3].sig_045.FeedThruLUT , \newFlattenedMCUout[2] , 
         \newFlattenedMCUout[3] , \flattenedMCUout[3] , \flattenedMCUout[2] , 
         \makeMusic.n13[1] , \makeMusic.n13[0] , \makeMusic.n532 , 
         \makeMusic.counter[1] , \makeMusic.counter[0] , \makeMusic.n293[3] , 
         \makeMusic.freq_9__N_86 , \makeMusic.n293[2] , 
         \makeMusic.freq_9__N_86.sig_049.FeedThruLUT , 
         \makeMusic.n293[2].sig_048.FeedThruLUT , n569, start, 
         \makeMusic.dur_7__N_52[6] , \makeMusic.dur_7__N_52[7] , 
         \makeMusic.dur_7__N_87[6] , \makeMusic.dur_7__N_87[7] , 
         \makeMusic.n554 , \makeMusic.dur[7] , \makeMusic.dur[6] , 
         \makeMusic.dur_7__N_52[4] , \makeMusic.dur_7__N_52[5] , 
         \makeMusic.dur_7__N_87[4] , \makeMusic.dur_7__N_87[5] , 
         \makeMusic.dur[5] , \makeMusic.dur[4] , \makeMusic.dur_7__N_52[2] , 
         \makeMusic.dur_7__N_52[3] , \makeMusic.dur_7__N_87[2] , 
         \makeMusic.dur_7__N_87[3] , \makeMusic.dur[3] , \makeMusic.dur[2] , 
         \makeMusic.dur_7__N_52[0] , \makeMusic.dur_7__N_52[1] , 
         \makeMusic.dur_7__N_87[0] , \makeMusic.dur_7__N_87[1] , 
         \makeMusic.dur[1] , \makeMusic.dur[0] , \makeMusic.freq_9__N_60[5] , 
         \makeMusic.freq_9__N_60[6] , \makeMusic.freq_9__N_76[5] , 
         \makeMusic.freq_9__N_76[6] , \makeMusic.freq[6] , \makeMusic.freq[5] , 
         \makeMusic.en_N_100 , \makeMusic.en_N_101 , \makeMusic.en , 
         \makeMusic.freq_9__N_60[3] , \makeMusic.freq_9__N_60[4] , 
         \makeMusic.freq_9__N_76[3] , \makeMusic.freq_9__N_76[4] , 
         \makeMusic.freq[4] , \makeMusic.freq[3] , \makeMusic.freq_9__N_60[1] , 
         \makeMusic.freq_9__N_60[2] , \makeMusic.freq_9__N_76[1] , 
         \makeMusic.freq_9__N_76[2] , \makeMusic.freq[2] , \makeMusic.freq[1] , 
         \newFlattenedMCUout[21].sig_096.FeedThruLUT , 
         \newFlattenedMCUout[20].sig_050.FeedThruLUT , sck_c, 
         \newFlattenedMCUout[22].sig_075.FeedThruLUT , 
         \newFlattenedMCUout[23].sig_051.FeedThruLUT , 
         \newFlattenedMCUout[18].sig_053.FeedThruLUT , 
         \newFlattenedMCUout[19].sig_052.FeedThruLUT , 
         \newFlattenedMCUout[16].sig_055.FeedThruLUT , 
         \newFlattenedMCUout[17].sig_054.FeedThruLUT , 
         \newFlattenedMCUout[14].sig_057.FeedThruLUT , 
         \newFlattenedMCUout[15].sig_056.FeedThruLUT , 
         \newFlattenedMCUout[12].sig_059.FeedThruLUT , 
         \newFlattenedMCUout[13].sig_058.FeedThruLUT , 
         \newFlattenedMCUout[10].sig_061.FeedThruLUT , 
         \newFlattenedMCUout[11].sig_060.FeedThruLUT , 
         \newFlattenedMCUout[8].sig_064.FeedThruLUT , 
         \newFlattenedMCUout[9].sig_062.FeedThruLUT , 
         \newFlattenedMCUout[24].sig_074.FeedThruLUT , 
         \newFlattenedMCUout[25].sig_063.FeedThruLUT , 
         \newFlattenedMCUout[27].sig_095.FeedThruLUT , 
         \newFlattenedMCUout[26].sig_065.FeedThruLUT , 
         \newFlattenedMCUout[1].sig_067.FeedThruLUT , 
         \newFlattenedMCUout[0].sig_066.FeedThruLUT , 
         \newFlattenedMCUout[3].sig_069.FeedThruLUT , 
         \newFlattenedMCUout[2].sig_068.FeedThruLUT , 
         \newFlattenedMCUout[5].sig_071.FeedThruLUT , 
         \newFlattenedMCUout[4].sig_070.FeedThruLUT , 
         \newFlattenedMCUout[7].sig_073.FeedThruLUT , 
         \newFlattenedMCUout[6].sig_072.FeedThruLUT , 
         \newFlattenedMCUout[44].sig_078.FeedThruLUT , 
         \newFlattenedMCUout[45].sig_077.FeedThruLUT , 
         \newFlattenedMCUout[42].sig_080.FeedThruLUT , 
         \newFlattenedMCUout[43].sig_079.FeedThruLUT , 
         \newFlattenedMCUout[40].sig_082.FeedThruLUT , 
         \newFlattenedMCUout[41].sig_081.FeedThruLUT , 
         \newFlattenedMCUout[38].sig_084.FeedThruLUT , 
         \newFlattenedMCUout[39].sig_083.FeedThruLUT , 
         \newFlattenedMCUout[36].sig_086.FeedThruLUT , 
         \newFlattenedMCUout[37].sig_085.FeedThruLUT , 
         \newFlattenedMCUout[34].sig_088.FeedThruLUT , 
         \newFlattenedMCUout[35].sig_087.FeedThruLUT , 
         \newFlattenedMCUout[32].sig_090.FeedThruLUT , 
         \newFlattenedMCUout[33].sig_089.FeedThruLUT , 
         \newFlattenedMCUout[30].sig_092.FeedThruLUT , 
         \newFlattenedMCUout[31].sig_091.FeedThruLUT , 
         \newFlattenedMCUout[28].sig_094.FeedThruLUT , 
         \newFlattenedMCUout[29].sig_093.FeedThruLUT , n52, n49, n51, n50, n85, 
         n68, n67, n65, n66, n89, n72, n69, n70, n71, n90, n54, n88, n87, n86, 
         n94, n64, n61, n63, n62, \nextstate_1__N_97[0] , 
         \makeMusic.howLong.n61 , \makeMusic.howLong.n59 , 
         \makeMusic.howLong.n1423 , \makeMusic.howLong.n55 , \makeMusic.n533 , 
         \makeMusic.pitch.n12 , \makeMusic.freq[7] , 
         \makeMusic.pitch.threshold_31__N_224[0] , \makeMusic.pitch.n40 , 
         \makeMusic.pitch.n44 , \makeMusic.pitch.n39 , \makeMusic.pitch.n38 , 
         \makeMusic.pitch.n37 , \makeMusic.pitch.n58 , \makeMusic.pitch.n1417 , 
         \makeMusic.pitch.n55 , \makeMusic.pitch.n42 , \makeMusic.pitch.n41 , 
         \makeMusic.pitch.n43 , \makeMusic.pitch.n59 , \makeMusic.pitch.n34 , 
         \makeMusic.pitch.n49 , \makeMusic.pitch.n36 , \makeMusic.pitch.n35 , 
         \makeMusic.pitch.n61 , \makeMusic.howLong.n40 , 
         \makeMusic.howLong.n36 , \makeMusic.howLong.n39 , 
         \makeMusic.howLong.n37 , \makeMusic.howLong.n38 , 
         \makeMusic.howLong.n58 , \makeMusic.howLong.n1411 , 
         \makeMusic.howLong.n44 , \makeMusic.howLong.n41 , 
         \makeMusic.howLong.n43 , \makeMusic.howLong.n42 , 
         \makeMusic.howLong.n34 , \makeMusic.howLong.n49 , 
         \makeMusic.howLong.n35 , n58, n57, n59, n60, n53, n55, n56, 
         \makeMusic.n1207 , \makeMusic.n4 , \makeMusic.n511 , \makeMusic.rep , 
         \flattenedMCUout_47__N_49$n0 , 
         \newFlattenedMCUout[46].sig_076.FeedThruLUT , 
         \makeMusic.freq_9__N_60[7] , \makeMusic.freq_9__N_76[7] , 
         \makeMusic.pitch.n1421 , \makeMusic.pitch.clkStrobe_N_257 , pwm_c, 
         sdi_c;

  makeMusic_pitch_SLICE_0 \makeMusic.pitch.SLICE_0 ( 
    .DI1(\makeMusic.pitch.n133[4] ), .DI0(\makeMusic.pitch.n133[3] ), 
    .D1(\makeMusic.pitch.n2447 ), .C1(\makeMusic.pitch.counter[4] ), 
    .D0(\makeMusic.pitch.n717 ), .C0(\makeMusic.pitch.counter[3] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n717 ), 
    .CIN1(\makeMusic.pitch.n2447 ), .Q0(\makeMusic.pitch.counter[3] ), 
    .Q1(\makeMusic.pitch.counter[4] ), .F0(\makeMusic.pitch.n133[3] ), 
    .F1(\makeMusic.pitch.n133[4] ), .COUT1(\makeMusic.pitch.n719 ), 
    .COUT0(\makeMusic.pitch.n2447 ));
  makeMusic_pitch_SLICE_1 \makeMusic.pitch.SLICE_1 ( 
    .DI1(\makeMusic.pitch.n133[12] ), .DI0(\makeMusic.pitch.n133[11] ), 
    .D1(\makeMusic.pitch.n2459 ), .C1(\makeMusic.pitch.counter[12] ), 
    .D0(\makeMusic.pitch.n725 ), .C0(\makeMusic.pitch.counter[11] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n725 ), 
    .CIN1(\makeMusic.pitch.n2459 ), .Q0(\makeMusic.pitch.counter[11] ), 
    .Q1(\makeMusic.pitch.counter[12] ), .F0(\makeMusic.pitch.n133[11] ), 
    .F1(\makeMusic.pitch.n133[12] ), .COUT1(\makeMusic.pitch.n727 ), 
    .COUT0(\makeMusic.pitch.n2459 ));
  makeMusic_pitch_SLICE_2 \makeMusic.pitch.SLICE_2 ( 
    .DI1(\makeMusic.pitch.n133[10] ), .DI0(\makeMusic.pitch.n133[9] ), 
    .D1(\makeMusic.pitch.n2456 ), .C1(\makeMusic.pitch.counter[10] ), 
    .D0(\makeMusic.pitch.n723 ), .C0(\makeMusic.pitch.counter[9] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n723 ), 
    .CIN1(\makeMusic.pitch.n2456 ), .Q0(\makeMusic.pitch.counter[9] ), 
    .Q1(\makeMusic.pitch.counter[10] ), .F0(\makeMusic.pitch.n133[9] ), 
    .F1(\makeMusic.pitch.n133[10] ), .COUT1(\makeMusic.pitch.n725 ), 
    .COUT0(\makeMusic.pitch.n2456 ));
  makeMusic_pitch_SLICE_3 \makeMusic.pitch.SLICE_3 ( 
    .DI1(\makeMusic.pitch.n133[14] ), .DI0(\makeMusic.pitch.n133[13] ), 
    .D1(\makeMusic.pitch.n2462 ), .C1(\makeMusic.pitch.counter[14] ), 
    .D0(\makeMusic.pitch.n727 ), .C0(\makeMusic.pitch.counter[13] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n727 ), 
    .CIN1(\makeMusic.pitch.n2462 ), .Q0(\makeMusic.pitch.counter[13] ), 
    .Q1(\makeMusic.pitch.counter[14] ), .F0(\makeMusic.pitch.n133[13] ), 
    .F1(\makeMusic.pitch.n133[14] ), .COUT1(\makeMusic.pitch.n729 ), 
    .COUT0(\makeMusic.pitch.n2462 ));
  makeMusic_pitch_SLICE_4 \makeMusic.pitch.SLICE_4 ( 
    .DI1(\makeMusic.pitch.n133[8] ), .DI0(\makeMusic.pitch.n133[7] ), 
    .D1(\makeMusic.pitch.n2453 ), .C1(\makeMusic.pitch.counter[8] ), 
    .D0(\makeMusic.pitch.n721 ), .C0(\makeMusic.pitch.counter[7] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n721 ), 
    .CIN1(\makeMusic.pitch.n2453 ), .Q0(\makeMusic.pitch.counter[7] ), 
    .Q1(\makeMusic.pitch.counter[8] ), .F0(\makeMusic.pitch.n133[7] ), 
    .F1(\makeMusic.pitch.n133[8] ), .COUT1(\makeMusic.pitch.n723 ), 
    .COUT0(\makeMusic.pitch.n2453 ));
  makeMusic_pitch_SLICE_5 \makeMusic.pitch.SLICE_5 ( 
    .DI1(\makeMusic.pitch.n133[0] ), .D1(\makeMusic.pitch.n2441 ), 
    .C1(\makeMusic.pitch.counter[0] ), .B1(VCC_net), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), 
    .CIN1(\makeMusic.pitch.n2441 ), .Q1(\makeMusic.pitch.counter[0] ), 
    .F1(\makeMusic.pitch.n133[0] ), .COUT1(\makeMusic.pitch.n715 ), 
    .COUT0(\makeMusic.pitch.n2441 ));
  makeMusic_pitch_SLICE_6 \makeMusic.pitch.SLICE_6 ( 
    .DI1(\makeMusic.pitch.n133[6] ), .DI0(\makeMusic.pitch.n133[5] ), 
    .D1(\makeMusic.pitch.n2450 ), .C1(\makeMusic.pitch.counter[6] ), 
    .D0(\makeMusic.pitch.n719 ), .C0(\makeMusic.pitch.counter[5] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n719 ), 
    .CIN1(\makeMusic.pitch.n2450 ), .Q0(\makeMusic.pitch.counter[5] ), 
    .Q1(\makeMusic.pitch.counter[6] ), .F0(\makeMusic.pitch.n133[5] ), 
    .F1(\makeMusic.pitch.n133[6] ), .COUT1(\makeMusic.pitch.n721 ), 
    .COUT0(\makeMusic.pitch.n2450 ));
  makeMusic_pitch_SLICE_7 \makeMusic.pitch.SLICE_7 ( 
    .DI1(\makeMusic.pitch.n133[2] ), .DI0(\makeMusic.pitch.n133[1] ), 
    .D1(\makeMusic.pitch.n2444 ), .C1(\makeMusic.pitch.counter[2] ), 
    .D0(\makeMusic.pitch.n715 ), .C0(\makeMusic.pitch.counter[1] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n715 ), 
    .CIN1(\makeMusic.pitch.n2444 ), .Q0(\makeMusic.pitch.counter[1] ), 
    .Q1(\makeMusic.pitch.counter[2] ), .F0(\makeMusic.pitch.n133[1] ), 
    .F1(\makeMusic.pitch.n133[2] ), .COUT1(\makeMusic.pitch.n717 ), 
    .COUT0(\makeMusic.pitch.n2444 ));
  makeMusic_pitch_SLICE_8 \makeMusic.pitch.SLICE_8 ( 
    .DI1(\makeMusic.pitch.n133[16] ), .DI0(\makeMusic.pitch.n133[15] ), 
    .D1(\makeMusic.pitch.n2465 ), .C1(\makeMusic.pitch.counter[16] ), 
    .D0(\makeMusic.pitch.n729 ), .C0(\makeMusic.pitch.counter[15] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n729 ), 
    .CIN1(\makeMusic.pitch.n2465 ), .Q0(\makeMusic.pitch.counter[15] ), 
    .Q1(\makeMusic.pitch.counter[16] ), .F0(\makeMusic.pitch.n133[15] ), 
    .F1(\makeMusic.pitch.n133[16] ), .COUT1(\makeMusic.pitch.n731 ), 
    .COUT0(\makeMusic.pitch.n2465 ));
  makeMusic_pitch_SLICE_9 \makeMusic.pitch.SLICE_9 ( 
    .DI1(\makeMusic.pitch.n133[18] ), .DI0(\makeMusic.pitch.n133[17] ), 
    .D1(\makeMusic.pitch.n2468 ), .C1(\makeMusic.pitch.counter[18] ), 
    .D0(\makeMusic.pitch.n731 ), .C0(\makeMusic.pitch.counter[17] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n731 ), 
    .CIN1(\makeMusic.pitch.n2468 ), .Q0(\makeMusic.pitch.counter[17] ), 
    .Q1(\makeMusic.pitch.counter[18] ), .F0(\makeMusic.pitch.n133[17] ), 
    .F1(\makeMusic.pitch.n133[18] ), .COUT1(\makeMusic.pitch.n733 ), 
    .COUT0(\makeMusic.pitch.n2468 ));
  makeMusic_pitch_SLICE_10 \makeMusic.pitch.SLICE_10 ( 
    .DI1(\makeMusic.pitch.n133[20] ), .DI0(\makeMusic.pitch.n133[19] ), 
    .D1(\makeMusic.pitch.n2471 ), .C1(\makeMusic.pitch.counter[20] ), 
    .D0(\makeMusic.pitch.n733 ), .C0(\makeMusic.pitch.counter[19] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n733 ), 
    .CIN1(\makeMusic.pitch.n2471 ), .Q0(\makeMusic.pitch.counter[19] ), 
    .Q1(\makeMusic.pitch.counter[20] ), .F0(\makeMusic.pitch.n133[19] ), 
    .F1(\makeMusic.pitch.n133[20] ), .COUT1(\makeMusic.pitch.n735 ), 
    .COUT0(\makeMusic.pitch.n2471 ));
  makeMusic_pitch_SLICE_11 \makeMusic.pitch.SLICE_11 ( 
    .DI1(\makeMusic.pitch.n133[22] ), .DI0(\makeMusic.pitch.n133[21] ), 
    .D1(\makeMusic.pitch.n2474 ), .C1(\makeMusic.pitch.counter[22] ), 
    .D0(\makeMusic.pitch.n735 ), .C0(\makeMusic.pitch.counter[21] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n735 ), 
    .CIN1(\makeMusic.pitch.n2474 ), .Q0(\makeMusic.pitch.counter[21] ), 
    .Q1(\makeMusic.pitch.counter[22] ), .F0(\makeMusic.pitch.n133[21] ), 
    .F1(\makeMusic.pitch.n133[22] ), .COUT1(\makeMusic.pitch.n737 ), 
    .COUT0(\makeMusic.pitch.n2474 ));
  makeMusic_pitch_SLICE_12 \makeMusic.pitch.SLICE_12 ( 
    .DI1(\makeMusic.pitch.n133[24] ), .DI0(\makeMusic.pitch.n133[23] ), 
    .D1(\makeMusic.pitch.n2477 ), .C1(\makeMusic.pitch.counter[24] ), 
    .D0(\makeMusic.pitch.n737 ), .C0(\makeMusic.pitch.counter[23] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n737 ), 
    .CIN1(\makeMusic.pitch.n2477 ), .Q0(\makeMusic.pitch.counter[23] ), 
    .Q1(\makeMusic.pitch.counter[24] ), .F0(\makeMusic.pitch.n133[23] ), 
    .F1(\makeMusic.pitch.n133[24] ), .COUT1(\makeMusic.pitch.n739 ), 
    .COUT0(\makeMusic.pitch.n2477 ));
  makeMusic_pitch_SLICE_13 \makeMusic.pitch.SLICE_13 ( 
    .DI1(\makeMusic.pitch.n133[26] ), .DI0(\makeMusic.pitch.n133[25] ), 
    .D1(\makeMusic.pitch.n2480 ), .C1(\makeMusic.pitch.counter[26] ), 
    .D0(\makeMusic.pitch.n739 ), .C0(\makeMusic.pitch.counter[25] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n739 ), 
    .CIN1(\makeMusic.pitch.n2480 ), .Q0(\makeMusic.pitch.counter[25] ), 
    .Q1(\makeMusic.pitch.counter[26] ), .F0(\makeMusic.pitch.n133[25] ), 
    .F1(\makeMusic.pitch.n133[26] ), .COUT1(\makeMusic.pitch.n741 ), 
    .COUT0(\makeMusic.pitch.n2480 ));
  makeMusic_pitch_SLICE_14 \makeMusic.pitch.SLICE_14 ( 
    .DI1(\makeMusic.pitch.n133[28] ), .DI0(\makeMusic.pitch.n133[27] ), 
    .D1(\makeMusic.pitch.n2483 ), .C1(\makeMusic.pitch.counter[28] ), 
    .D0(\makeMusic.pitch.n741 ), .C0(\makeMusic.pitch.counter[27] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n741 ), 
    .CIN1(\makeMusic.pitch.n2483 ), .Q0(\makeMusic.pitch.counter[27] ), 
    .Q1(\makeMusic.pitch.counter[28] ), .F0(\makeMusic.pitch.n133[27] ), 
    .F1(\makeMusic.pitch.n133[28] ), .COUT1(\makeMusic.pitch.n743 ), 
    .COUT0(\makeMusic.pitch.n2483 ));
  makeMusic_pitch_SLICE_15 \makeMusic.pitch.SLICE_15 ( 
    .DI1(\makeMusic.pitch.n133[30] ), .DI0(\makeMusic.pitch.n133[29] ), 
    .D1(\makeMusic.pitch.n2486 ), .C1(\makeMusic.pitch.counter[30] ), 
    .D0(\makeMusic.pitch.n743 ), .C0(\makeMusic.pitch.counter[29] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n743 ), 
    .CIN1(\makeMusic.pitch.n2486 ), .Q0(\makeMusic.pitch.counter[29] ), 
    .Q1(\makeMusic.pitch.counter[30] ), .F0(\makeMusic.pitch.n133[29] ), 
    .F1(\makeMusic.pitch.n133[30] ), .COUT1(\makeMusic.pitch.n745 ), 
    .COUT0(\makeMusic.pitch.n2486 ));
  makeMusic_pitch_SLICE_16 \makeMusic.pitch.SLICE_16 ( 
    .DI0(\makeMusic.pitch.n133[31] ), .D1(\makeMusic.pitch.n2489 ), 
    .D0(\makeMusic.pitch.n745 ), .C0(\makeMusic.pitch.counter[31] ), 
    .LSR(\makeMusic.pitch.n568 ), .CLK(int_osc), .CIN0(\makeMusic.pitch.n745 ), 
    .CIN1(\makeMusic.pitch.n2489 ), .Q0(\makeMusic.pitch.counter[31] ), 
    .F0(\makeMusic.pitch.n133[31] ), .COUT0(\makeMusic.pitch.n2489 ));
  makeMusic_pitch_SLICE_17 \makeMusic.pitch.SLICE_17 ( 
    .D1(\makeMusic.pitch.n2324 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[9] ), 
    .CIN1(\makeMusic.pitch.n2324 ), .F1(\makeMusic.pitch.threshold[8] ), 
    .COUT1(\makeMusic.pitch.n748 ), .COUT0(\makeMusic.pitch.n2324 ));
  makeMusic_pitch_SLICE_18 \makeMusic.pitch.SLICE_18 ( 
    .D1(\makeMusic.pitch.n2327 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[11] ), 
    .D0(\makeMusic.pitch.n748 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[10] ), 
    .CIN0(\makeMusic.pitch.n748 ), .CIN1(\makeMusic.pitch.n2327 ), 
    .F0(\makeMusic.pitch.threshold[9] ), .F1(\makeMusic.pitch.threshold[10] ), 
    .COUT1(\makeMusic.pitch.n750 ), .COUT0(\makeMusic.pitch.n2327 ));
  makeMusic_pitch_SLICE_19 \makeMusic.pitch.SLICE_19 ( 
    .D1(\makeMusic.pitch.n2330 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[13] ), 
    .D0(\makeMusic.pitch.n750 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[12] ), 
    .CIN0(\makeMusic.pitch.n750 ), .CIN1(\makeMusic.pitch.n2330 ), 
    .F0(\makeMusic.pitch.threshold[11] ), .F1(\makeMusic.pitch.threshold[12] ), 
    .COUT1(\makeMusic.pitch.n752 ), .COUT0(\makeMusic.pitch.n2330 ));
  makeMusic_pitch_SLICE_20 \makeMusic.pitch.SLICE_20 ( 
    .D1(\makeMusic.pitch.n2333 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[15] ), 
    .D0(\makeMusic.pitch.n752 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[14] ), 
    .CIN0(\makeMusic.pitch.n752 ), .CIN1(\makeMusic.pitch.n2333 ), 
    .F0(\makeMusic.pitch.threshold[13] ), .F1(\makeMusic.pitch.threshold[14] ), 
    .COUT1(\makeMusic.pitch.n754 ), .COUT0(\makeMusic.pitch.n2333 ));
  makeMusic_pitch_SLICE_21 \makeMusic.pitch.SLICE_21 ( 
    .D1(\makeMusic.pitch.n2336 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[17] ), 
    .D0(\makeMusic.pitch.n754 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[16] ), 
    .CIN0(\makeMusic.pitch.n754 ), .CIN1(\makeMusic.pitch.n2336 ), 
    .F0(\makeMusic.pitch.threshold[15] ), .F1(\makeMusic.pitch.threshold[16] ), 
    .COUT1(\makeMusic.pitch.n756 ), .COUT0(\makeMusic.pitch.n2336 ));
  makeMusic_pitch_SLICE_22 \makeMusic.pitch.SLICE_22 ( 
    .D1(\makeMusic.pitch.n2339 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[19] ), 
    .D0(\makeMusic.pitch.n756 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[18] ), 
    .CIN0(\makeMusic.pitch.n756 ), .CIN1(\makeMusic.pitch.n2339 ), 
    .F0(\makeMusic.pitch.threshold[17] ), .F1(\makeMusic.pitch.threshold[18] ), 
    .COUT1(\makeMusic.pitch.n758 ), .COUT0(\makeMusic.pitch.n2339 ));
  makeMusic_pitch_SLICE_23 \makeMusic.pitch.SLICE_23 ( 
    .D1(\makeMusic.pitch.n2342 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[21] ), 
    .D0(\makeMusic.pitch.n758 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[20] ), 
    .CIN0(\makeMusic.pitch.n758 ), .CIN1(\makeMusic.pitch.n2342 ), 
    .F0(\makeMusic.pitch.threshold[19] ), .F1(\makeMusic.pitch.threshold[20] ), 
    .COUT1(\makeMusic.pitch.n760 ), .COUT0(\makeMusic.pitch.n2342 ));
  makeMusic_pitch_SLICE_24 \makeMusic.pitch.SLICE_24 ( 
    .D1(\makeMusic.pitch.n2345 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[23] ), 
    .D0(\makeMusic.pitch.n760 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[22] ), 
    .CIN0(\makeMusic.pitch.n760 ), .CIN1(\makeMusic.pitch.n2345 ), 
    .F0(\makeMusic.pitch.threshold[21] ), .F1(\makeMusic.pitch.threshold[22] ), 
    .COUT1(\makeMusic.pitch.n762 ), .COUT0(\makeMusic.pitch.n2345 ));
  makeMusic_pitch_SLICE_25 \makeMusic.pitch.SLICE_25 ( 
    .D1(\makeMusic.pitch.n2348 ), .C1(VCC_net), 
    .B1(\makeMusic.pitch.threshold_31__N_199[25] ), 
    .D0(\makeMusic.pitch.n762 ), .C0(VCC_net), 
    .B0(\makeMusic.pitch.threshold_31__N_199[24] ), 
    .CIN0(\makeMusic.pitch.n762 ), .CIN1(\makeMusic.pitch.n2348 ), 
    .F0(\makeMusic.pitch.threshold[23] ), .F1(\makeMusic.pitch.threshold[24] ), 
    .COUT1(\makeMusic.pitch.n764 ), .COUT0(\makeMusic.pitch.n2348 ));
  makeMusic_pitch_SLICE_26 \makeMusic.pitch.SLICE_26 ( 
    .D1(\makeMusic.pitch.n2351 ), .D0(\makeMusic.pitch.n764 ), .C0(VCC_net), 
    .CIN0(\makeMusic.pitch.n764 ), .CIN1(\makeMusic.pitch.n2351 ), 
    .F0(\makeMusic.pitch.threshold[31] ), .COUT0(\makeMusic.pitch.n2351 ));
  makeMusic_howLong_SLICE_27 \makeMusic.howLong.SLICE_27 ( 
    .DI1(\makeMusic.howLong.n133[0] ), .D1(\makeMusic.howLong.n2390 ), 
    .C1(\makeMusic.howLong.counter[0] ), .B1(VCC_net), .CLK(int_osc), 
    .CIN1(\makeMusic.howLong.n2390 ), .Q1(\makeMusic.howLong.counter[0] ), 
    .F1(\makeMusic.howLong.n133[0] ), .COUT1(\makeMusic.howLong.n767 ), 
    .COUT0(\makeMusic.howLong.n2390 ));
  makeMusic_howLong_SLICE_28 \makeMusic.howLong.SLICE_28 ( 
    .DI1(\makeMusic.howLong.n133[2] ), .DI0(\makeMusic.howLong.n133[1] ), 
    .D1(\makeMusic.howLong.n2393 ), .C1(\makeMusic.howLong.counter[2] ), 
    .D0(\makeMusic.howLong.n767 ), .C0(\makeMusic.howLong.counter[1] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n767 ), 
    .CIN1(\makeMusic.howLong.n2393 ), .Q0(\makeMusic.howLong.counter[1] ), 
    .Q1(\makeMusic.howLong.counter[2] ), .F0(\makeMusic.howLong.n133[1] ), 
    .F1(\makeMusic.howLong.n133[2] ), .COUT1(\makeMusic.howLong.n769 ), 
    .COUT0(\makeMusic.howLong.n2393 ));
  makeMusic_howLong_SLICE_29 \makeMusic.howLong.SLICE_29 ( 
    .DI1(\makeMusic.howLong.n133[4] ), .DI0(\makeMusic.howLong.n133[3] ), 
    .D1(\makeMusic.howLong.n2396 ), .C1(\makeMusic.howLong.counter[4] ), 
    .D0(\makeMusic.howLong.n769 ), .C0(\makeMusic.howLong.counter[3] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n769 ), 
    .CIN1(\makeMusic.howLong.n2396 ), .Q0(\makeMusic.howLong.counter[3] ), 
    .Q1(\makeMusic.howLong.counter[4] ), .F0(\makeMusic.howLong.n133[3] ), 
    .F1(\makeMusic.howLong.n133[4] ), .COUT1(\makeMusic.howLong.n771 ), 
    .COUT0(\makeMusic.howLong.n2396 ));
  makeMusic_howLong_SLICE_30 \makeMusic.howLong.SLICE_30 ( 
    .DI1(\makeMusic.howLong.n133[6] ), .DI0(\makeMusic.howLong.n133[5] ), 
    .D1(\makeMusic.howLong.n2399 ), .C1(\makeMusic.howLong.counter[6] ), 
    .D0(\makeMusic.howLong.n771 ), .C0(\makeMusic.howLong.counter[5] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n771 ), 
    .CIN1(\makeMusic.howLong.n2399 ), .Q0(\makeMusic.howLong.counter[5] ), 
    .Q1(\makeMusic.howLong.counter[6] ), .F0(\makeMusic.howLong.n133[5] ), 
    .F1(\makeMusic.howLong.n133[6] ), .COUT1(\makeMusic.howLong.n773 ), 
    .COUT0(\makeMusic.howLong.n2399 ));
  makeMusic_howLong_SLICE_31 \makeMusic.howLong.SLICE_31 ( 
    .DI1(\makeMusic.howLong.n133[8] ), .DI0(\makeMusic.howLong.n133[7] ), 
    .D1(\makeMusic.howLong.n2402 ), .C1(\makeMusic.howLong.counter[8] ), 
    .D0(\makeMusic.howLong.n773 ), .C0(\makeMusic.howLong.counter[7] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n773 ), 
    .CIN1(\makeMusic.howLong.n2402 ), .Q0(\makeMusic.howLong.counter[7] ), 
    .Q1(\makeMusic.howLong.counter[8] ), .F0(\makeMusic.howLong.n133[7] ), 
    .F1(\makeMusic.howLong.n133[8] ), .COUT1(\makeMusic.howLong.n775 ), 
    .COUT0(\makeMusic.howLong.n2402 ));
  makeMusic_howLong_SLICE_32 \makeMusic.howLong.SLICE_32 ( 
    .DI1(\makeMusic.howLong.n133[10] ), .DI0(\makeMusic.howLong.n133[9] ), 
    .D1(\makeMusic.howLong.n2405 ), .C1(\makeMusic.howLong.counter[10] ), 
    .D0(\makeMusic.howLong.n775 ), .C0(\makeMusic.howLong.counter[9] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n775 ), 
    .CIN1(\makeMusic.howLong.n2405 ), .Q0(\makeMusic.howLong.counter[9] ), 
    .Q1(\makeMusic.howLong.counter[10] ), .F0(\makeMusic.howLong.n133[9] ), 
    .F1(\makeMusic.howLong.n133[10] ), .COUT1(\makeMusic.howLong.n777 ), 
    .COUT0(\makeMusic.howLong.n2405 ));
  makeMusic_howLong_SLICE_33 \makeMusic.howLong.SLICE_33 ( 
    .DI1(\makeMusic.howLong.n133[12] ), .DI0(\makeMusic.howLong.n133[11] ), 
    .D1(\makeMusic.howLong.n2408 ), .C1(\makeMusic.howLong.counter[12] ), 
    .D0(\makeMusic.howLong.n777 ), .C0(\makeMusic.howLong.counter[11] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n777 ), 
    .CIN1(\makeMusic.howLong.n2408 ), .Q0(\makeMusic.howLong.counter[11] ), 
    .Q1(\makeMusic.howLong.counter[12] ), .F0(\makeMusic.howLong.n133[11] ), 
    .F1(\makeMusic.howLong.n133[12] ), .COUT1(\makeMusic.howLong.n779 ), 
    .COUT0(\makeMusic.howLong.n2408 ));
  makeMusic_howLong_SLICE_34 \makeMusic.howLong.SLICE_34 ( 
    .DI1(\makeMusic.howLong.n133[14] ), .DI0(\makeMusic.howLong.n133[13] ), 
    .D1(\makeMusic.howLong.n2411 ), .C1(\makeMusic.howLong.counter[14] ), 
    .D0(\makeMusic.howLong.n779 ), .C0(\makeMusic.howLong.counter[13] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n779 ), 
    .CIN1(\makeMusic.howLong.n2411 ), .Q0(\makeMusic.howLong.counter[13] ), 
    .Q1(\makeMusic.howLong.counter[14] ), .F0(\makeMusic.howLong.n133[13] ), 
    .F1(\makeMusic.howLong.n133[14] ), .COUT1(\makeMusic.howLong.n781 ), 
    .COUT0(\makeMusic.howLong.n2411 ));
  makeMusic_howLong_SLICE_35 \makeMusic.howLong.SLICE_35 ( 
    .DI1(\makeMusic.howLong.n133[16] ), .DI0(\makeMusic.howLong.n133[15] ), 
    .D1(\makeMusic.howLong.n2414 ), .C1(\makeMusic.howLong.counter[16] ), 
    .D0(\makeMusic.howLong.n781 ), .C0(\makeMusic.howLong.counter[15] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n781 ), 
    .CIN1(\makeMusic.howLong.n2414 ), .Q0(\makeMusic.howLong.counter[15] ), 
    .Q1(\makeMusic.howLong.counter[16] ), .F0(\makeMusic.howLong.n133[15] ), 
    .F1(\makeMusic.howLong.n133[16] ), .COUT1(\makeMusic.howLong.n783 ), 
    .COUT0(\makeMusic.howLong.n2414 ));
  makeMusic_howLong_SLICE_36 \makeMusic.howLong.SLICE_36 ( 
    .DI1(\makeMusic.howLong.n133[18] ), .DI0(\makeMusic.howLong.n133[17] ), 
    .D1(\makeMusic.howLong.n2417 ), .C1(\makeMusic.howLong.counter[18] ), 
    .D0(\makeMusic.howLong.n783 ), .C0(\makeMusic.howLong.counter[17] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n783 ), 
    .CIN1(\makeMusic.howLong.n2417 ), .Q0(\makeMusic.howLong.counter[17] ), 
    .Q1(\makeMusic.howLong.counter[18] ), .F0(\makeMusic.howLong.n133[17] ), 
    .F1(\makeMusic.howLong.n133[18] ), .COUT1(\makeMusic.howLong.n785 ), 
    .COUT0(\makeMusic.howLong.n2417 ));
  makeMusic_howLong_SLICE_37 \makeMusic.howLong.SLICE_37 ( 
    .DI1(\makeMusic.howLong.n133[20] ), .DI0(\makeMusic.howLong.n133[19] ), 
    .D1(\makeMusic.howLong.n2420 ), .C1(\makeMusic.howLong.counter[20] ), 
    .D0(\makeMusic.howLong.n785 ), .C0(\makeMusic.howLong.counter[19] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n785 ), 
    .CIN1(\makeMusic.howLong.n2420 ), .Q0(\makeMusic.howLong.counter[19] ), 
    .Q1(\makeMusic.howLong.counter[20] ), .F0(\makeMusic.howLong.n133[19] ), 
    .F1(\makeMusic.howLong.n133[20] ), .COUT1(\makeMusic.howLong.n787 ), 
    .COUT0(\makeMusic.howLong.n2420 ));
  makeMusic_howLong_SLICE_38 \makeMusic.howLong.SLICE_38 ( 
    .DI1(\makeMusic.howLong.n133[22] ), .DI0(\makeMusic.howLong.n133[21] ), 
    .D1(\makeMusic.howLong.n2423 ), .C1(\makeMusic.howLong.counter[22] ), 
    .D0(\makeMusic.howLong.n787 ), .C0(\makeMusic.howLong.counter[21] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n787 ), 
    .CIN1(\makeMusic.howLong.n2423 ), .Q0(\makeMusic.howLong.counter[21] ), 
    .Q1(\makeMusic.howLong.counter[22] ), .F0(\makeMusic.howLong.n133[21] ), 
    .F1(\makeMusic.howLong.n133[22] ), .COUT1(\makeMusic.howLong.n789 ), 
    .COUT0(\makeMusic.howLong.n2423 ));
  makeMusic_howLong_SLICE_39 \makeMusic.howLong.SLICE_39 ( 
    .DI1(\makeMusic.howLong.n133[24] ), .DI0(\makeMusic.howLong.n133[23] ), 
    .D1(\makeMusic.howLong.n2426 ), .C1(\makeMusic.howLong.counter[24] ), 
    .D0(\makeMusic.howLong.n789 ), .C0(\makeMusic.howLong.counter[23] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n789 ), 
    .CIN1(\makeMusic.howLong.n2426 ), .Q0(\makeMusic.howLong.counter[23] ), 
    .Q1(\makeMusic.howLong.counter[24] ), .F0(\makeMusic.howLong.n133[23] ), 
    .F1(\makeMusic.howLong.n133[24] ), .COUT1(\makeMusic.howLong.n791 ), 
    .COUT0(\makeMusic.howLong.n2426 ));
  makeMusic_howLong_SLICE_40 \makeMusic.howLong.SLICE_40 ( 
    .DI1(\makeMusic.howLong.n133[26] ), .DI0(\makeMusic.howLong.n133[25] ), 
    .D1(\makeMusic.howLong.n2429 ), .C1(\makeMusic.howLong.counter[26] ), 
    .D0(\makeMusic.howLong.n791 ), .C0(\makeMusic.howLong.counter[25] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n791 ), 
    .CIN1(\makeMusic.howLong.n2429 ), .Q0(\makeMusic.howLong.counter[25] ), 
    .Q1(\makeMusic.howLong.counter[26] ), .F0(\makeMusic.howLong.n133[25] ), 
    .F1(\makeMusic.howLong.n133[26] ), .COUT1(\makeMusic.howLong.n793 ), 
    .COUT0(\makeMusic.howLong.n2429 ));
  makeMusic_howLong_SLICE_41 \makeMusic.howLong.SLICE_41 ( 
    .DI1(\makeMusic.howLong.n133[28] ), .DI0(\makeMusic.howLong.n133[27] ), 
    .D1(\makeMusic.howLong.n2432 ), .C1(\makeMusic.howLong.counter[28] ), 
    .D0(\makeMusic.howLong.n793 ), .C0(\makeMusic.howLong.counter[27] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n793 ), 
    .CIN1(\makeMusic.howLong.n2432 ), .Q0(\makeMusic.howLong.counter[27] ), 
    .Q1(\makeMusic.howLong.counter[28] ), .F0(\makeMusic.howLong.n133[27] ), 
    .F1(\makeMusic.howLong.n133[28] ), .COUT1(\makeMusic.howLong.n795 ), 
    .COUT0(\makeMusic.howLong.n2432 ));
  makeMusic_howLong_SLICE_42 \makeMusic.howLong.SLICE_42 ( 
    .DI1(\makeMusic.howLong.n133[30] ), .DI0(\makeMusic.howLong.n133[29] ), 
    .D1(\makeMusic.howLong.n2435 ), .C1(\makeMusic.howLong.counter[30] ), 
    .D0(\makeMusic.howLong.n795 ), .C0(\makeMusic.howLong.counter[29] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n795 ), 
    .CIN1(\makeMusic.howLong.n2435 ), .Q0(\makeMusic.howLong.counter[29] ), 
    .Q1(\makeMusic.howLong.counter[30] ), .F0(\makeMusic.howLong.n133[29] ), 
    .F1(\makeMusic.howLong.n133[30] ), .COUT1(\makeMusic.howLong.n797 ), 
    .COUT0(\makeMusic.howLong.n2435 ));
  makeMusic_howLong_SLICE_43 \makeMusic.howLong.SLICE_43 ( 
    .DI0(\makeMusic.howLong.n133[31] ), .D1(\makeMusic.howLong.n2438 ), 
    .D0(\makeMusic.howLong.n797 ), .C0(\makeMusic.howLong.counter[31] ), 
    .CLK(int_osc), .CIN0(\makeMusic.howLong.n797 ), 
    .CIN1(\makeMusic.howLong.n2438 ), .Q0(\makeMusic.howLong.counter[31] ), 
    .F0(\makeMusic.howLong.n133[31] ), .COUT0(\makeMusic.howLong.n2438 ));
  makeMusic_howLong_SLICE_44 \makeMusic.howLong.SLICE_44 ( 
    .D1(\makeMusic.howLong.n2354 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[9] ), 
    .CIN1(\makeMusic.howLong.n2354 ), .F1(\makeMusic.howLong.THRESHOLD[9] ), 
    .COUT1(\makeMusic.howLong.n800 ), .COUT0(\makeMusic.howLong.n2354 ));
  makeMusic_howLong_SLICE_45 \makeMusic.howLong.SLICE_45 ( 
    .D1(\makeMusic.howLong.n2357 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[11] ), 
    .D0(\makeMusic.howLong.n800 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[10] ), 
    .CIN0(\makeMusic.howLong.n800 ), .CIN1(\makeMusic.howLong.n2357 ), 
    .F0(\makeMusic.howLong.THRESHOLD[10] ), 
    .F1(\makeMusic.howLong.THRESHOLD[11] ), .COUT1(\makeMusic.howLong.n802 ), 
    .COUT0(\makeMusic.howLong.n2357 ));
  makeMusic_howLong_SLICE_46 \makeMusic.howLong.SLICE_46 ( 
    .D1(\makeMusic.howLong.n2360 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[13] ), 
    .D0(\makeMusic.howLong.n802 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[12] ), 
    .CIN0(\makeMusic.howLong.n802 ), .CIN1(\makeMusic.howLong.n2360 ), 
    .F0(\makeMusic.howLong.THRESHOLD[12] ), 
    .F1(\makeMusic.howLong.THRESHOLD[13] ), .COUT1(\makeMusic.howLong.n804 ), 
    .COUT0(\makeMusic.howLong.n2360 ));
  makeMusic_howLong_SLICE_47 \makeMusic.howLong.SLICE_47 ( 
    .D1(\makeMusic.howLong.n2363 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[15] ), 
    .D0(\makeMusic.howLong.n804 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[14] ), 
    .CIN0(\makeMusic.howLong.n804 ), .CIN1(\makeMusic.howLong.n2363 ), 
    .F0(\makeMusic.howLong.THRESHOLD[14] ), 
    .F1(\makeMusic.howLong.THRESHOLD[15] ), .COUT1(\makeMusic.howLong.n806 ), 
    .COUT0(\makeMusic.howLong.n2363 ));
  makeMusic_howLong_SLICE_48 \makeMusic.howLong.SLICE_48 ( 
    .D1(\makeMusic.howLong.n2366 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[17] ), 
    .D0(\makeMusic.howLong.n806 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[16] ), 
    .CIN0(\makeMusic.howLong.n806 ), .CIN1(\makeMusic.howLong.n2366 ), 
    .F0(\makeMusic.howLong.THRESHOLD[16] ), 
    .F1(\makeMusic.howLong.THRESHOLD[17] ), .COUT1(\makeMusic.howLong.n808 ), 
    .COUT0(\makeMusic.howLong.n2366 ));
  makeMusic_howLong_SLICE_49 \makeMusic.howLong.SLICE_49 ( 
    .D1(\makeMusic.howLong.n2369 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[19] ), 
    .D0(\makeMusic.howLong.n808 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[18] ), 
    .CIN0(\makeMusic.howLong.n808 ), .CIN1(\makeMusic.howLong.n2369 ), 
    .F0(\makeMusic.howLong.THRESHOLD[18] ), 
    .F1(\makeMusic.howLong.THRESHOLD[19] ), .COUT1(\makeMusic.howLong.n810 ), 
    .COUT0(\makeMusic.howLong.n2369 ));
  makeMusic_howLong_SLICE_50 \makeMusic.howLong.SLICE_50 ( 
    .D1(\makeMusic.howLong.n2372 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[21] ), 
    .D0(\makeMusic.howLong.n810 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[20] ), 
    .CIN0(\makeMusic.howLong.n810 ), .CIN1(\makeMusic.howLong.n2372 ), 
    .F0(\makeMusic.howLong.THRESHOLD[20] ), 
    .F1(\makeMusic.howLong.THRESHOLD[21] ), .COUT1(\makeMusic.howLong.n812 ), 
    .COUT0(\makeMusic.howLong.n2372 ));
  makeMusic_howLong_SLICE_51 \makeMusic.howLong.SLICE_51 ( 
    .D1(\makeMusic.howLong.n2375 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[23] ), 
    .D0(\makeMusic.howLong.n812 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[22] ), 
    .CIN0(\makeMusic.howLong.n812 ), .CIN1(\makeMusic.howLong.n2375 ), 
    .F0(\makeMusic.howLong.THRESHOLD[22] ), 
    .F1(\makeMusic.howLong.THRESHOLD[23] ), .COUT1(\makeMusic.howLong.n814 ), 
    .COUT0(\makeMusic.howLong.n2375 ));
  makeMusic_howLong_SLICE_52 \makeMusic.howLong.SLICE_52 ( 
    .D1(\makeMusic.howLong.n2378 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[25] ), 
    .D0(\makeMusic.howLong.n814 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[24] ), 
    .CIN0(\makeMusic.howLong.n814 ), .CIN1(\makeMusic.howLong.n2378 ), 
    .F0(\makeMusic.howLong.THRESHOLD[24] ), 
    .F1(\makeMusic.howLong.THRESHOLD[25] ), .COUT1(\makeMusic.howLong.n816 ), 
    .COUT0(\makeMusic.howLong.n2378 ));
  makeMusic_howLong_SLICE_53 \makeMusic.howLong.SLICE_53 ( 
    .D1(\makeMusic.howLong.n2381 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[27] ), 
    .D0(\makeMusic.howLong.n816 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[26] ), 
    .CIN0(\makeMusic.howLong.n816 ), .CIN1(\makeMusic.howLong.n2381 ), 
    .F0(\makeMusic.howLong.THRESHOLD[26] ), 
    .F1(\makeMusic.howLong.THRESHOLD[27] ), .COUT1(\makeMusic.howLong.n818 ), 
    .COUT0(\makeMusic.howLong.n2381 ));
  makeMusic_howLong_SLICE_54 \makeMusic.howLong.SLICE_54 ( 
    .D1(\makeMusic.howLong.n2384 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[29] ), 
    .D0(\makeMusic.howLong.n818 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[28] ), 
    .CIN0(\makeMusic.howLong.n818 ), .CIN1(\makeMusic.howLong.n2384 ), 
    .F0(\makeMusic.howLong.THRESHOLD[28] ), 
    .F1(\makeMusic.howLong.THRESHOLD[29] ), .COUT1(\makeMusic.howLong.n820 ), 
    .COUT0(\makeMusic.howLong.n2384 ));
  makeMusic_howLong_SLICE_55 \makeMusic.howLong.SLICE_55 ( 
    .D1(\makeMusic.howLong.n2387 ), .C1(VCC_net), 
    .B1(\makeMusic.howLong.THRESHOLD_31__N_135[31] ), 
    .D0(\makeMusic.howLong.n820 ), .C0(VCC_net), 
    .B0(\makeMusic.howLong.THRESHOLD_31__N_135[30] ), 
    .CIN0(\makeMusic.howLong.n820 ), .CIN1(\makeMusic.howLong.n2387 ), 
    .F0(\makeMusic.howLong.THRESHOLD[30] ), 
    .F1(\makeMusic.howLong.THRESHOLD[31] ), .COUT0(\makeMusic.howLong.n2387 ));
  SLICE_56 SLICE_56( .DI1(\newFlattenedMCUout[1].sig_047.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_000.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[1] ), .D0(\newFlattenedMCUout[0] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[0] ), 
    .Q1(\flattenedMCUout[1] ), 
    .F0(\newFlattenedMCUout[0].sig_000.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_047.FeedThruLUT ));
  SLICE_57 SLICE_57( .DI1(\newFlattenedMCUout[46].sig_002.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[47].sig_001.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[46] ), .D0(\newFlattenedMCUout[47] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[47] ), 
    .Q1(\flattenedMCUout[46] ), 
    .F0(\newFlattenedMCUout[47].sig_001.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[46].sig_002.FeedThruLUT ));
  SLICE_59 SLICE_59( .DI1(\newFlattenedMCUout[44].sig_004.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[45].sig_003.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[44] ), .D0(\newFlattenedMCUout[45] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[45] ), 
    .Q1(\flattenedMCUout[44] ), 
    .F0(\newFlattenedMCUout[45].sig_003.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[44].sig_004.FeedThruLUT ));
  SLICE_61 SLICE_61( .DI1(\newFlattenedMCUout[42].sig_006.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[43].sig_005.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[42] ), .D0(\newFlattenedMCUout[43] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[43] ), 
    .Q1(\flattenedMCUout[42] ), 
    .F0(\newFlattenedMCUout[43].sig_005.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[42].sig_006.FeedThruLUT ));
  SLICE_63 SLICE_63( .DI1(\newFlattenedMCUout[40].sig_008.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[41].sig_007.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[40] ), .D0(\newFlattenedMCUout[41] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[41] ), 
    .Q1(\flattenedMCUout[40] ), 
    .F0(\newFlattenedMCUout[41].sig_007.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[40].sig_008.FeedThruLUT ));
  SLICE_65 SLICE_65( .DI1(\newFlattenedMCUout[38].sig_010.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_009.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[38] ), .D0(\newFlattenedMCUout[39] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[39] ), 
    .Q1(\flattenedMCUout[38] ), 
    .F0(\newFlattenedMCUout[39].sig_009.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_010.FeedThruLUT ));
  SLICE_67 SLICE_67( .DI1(\newFlattenedMCUout[36].sig_012.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_011.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[37] ), 
    .Q1(\flattenedMCUout[36] ), 
    .F0(\newFlattenedMCUout[37].sig_011.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_012.FeedThruLUT ));
  SLICE_69 SLICE_69( .DI1(\newFlattenedMCUout[34].sig_014.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_013.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[35] ), 
    .Q1(\flattenedMCUout[34] ), 
    .F0(\newFlattenedMCUout[35].sig_013.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_014.FeedThruLUT ));
  SLICE_71 SLICE_71( .DI1(\newFlattenedMCUout[32].sig_016.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_015.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[33] ), 
    .Q1(\flattenedMCUout[32] ), 
    .F0(\newFlattenedMCUout[33].sig_015.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_016.FeedThruLUT ));
  SLICE_73 SLICE_73( .DI1(\newFlattenedMCUout[30].sig_018.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_017.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .C0(\newFlattenedMCUout[31] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[31] ), 
    .Q1(\flattenedMCUout[30] ), 
    .F0(\newFlattenedMCUout[31].sig_017.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_018.FeedThruLUT ));
  SLICE_75 SLICE_75( .DI1(\newFlattenedMCUout[28].sig_020.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_019.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[29] ), 
    .Q1(\flattenedMCUout[28] ), 
    .F0(\newFlattenedMCUout[29].sig_019.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_020.FeedThruLUT ));
  SLICE_77 SLICE_77( .DI1(\newFlattenedMCUout[26].sig_022.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[27].sig_021.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[26] ), .D0(\newFlattenedMCUout[27] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[27] ), 
    .Q1(\flattenedMCUout[26] ), 
    .F0(\newFlattenedMCUout[27].sig_021.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[26].sig_022.FeedThruLUT ));
  SLICE_79 SLICE_79( .DI1(\newFlattenedMCUout[24].sig_024.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_023.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[25] ), 
    .Q1(\flattenedMCUout[24] ), 
    .F0(\newFlattenedMCUout[25].sig_023.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_024.FeedThruLUT ));
  SLICE_81 SLICE_81( .DI1(\newFlattenedMCUout[22].sig_026.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_025.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[23] ), 
    .Q1(\flattenedMCUout[22] ), 
    .F0(\newFlattenedMCUout[23].sig_025.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_026.FeedThruLUT ));
  SLICE_83 SLICE_83( .DI1(\newFlattenedMCUout[20].sig_028.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[21].sig_027.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[20] ), .D0(\newFlattenedMCUout[21] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[21] ), 
    .Q1(\flattenedMCUout[20] ), 
    .F0(\newFlattenedMCUout[21].sig_027.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[20].sig_028.FeedThruLUT ));
  SLICE_85 SLICE_85( .DI1(\newFlattenedMCUout[18].sig_030.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_029.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[18] ), .C0(\newFlattenedMCUout[19] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[19] ), 
    .Q1(\flattenedMCUout[18] ), 
    .F0(\newFlattenedMCUout[19].sig_029.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_030.FeedThruLUT ));
  SLICE_87 SLICE_87( .DI1(\newFlattenedMCUout[16].sig_032.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_031.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[17] ), 
    .Q1(\flattenedMCUout[16] ), 
    .F0(\newFlattenedMCUout[17].sig_031.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_032.FeedThruLUT ));
  SLICE_89 SLICE_89( .DI1(\newFlattenedMCUout[14].sig_034.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_033.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[15] ), 
    .Q1(\flattenedMCUout[14] ), 
    .F0(\newFlattenedMCUout[15].sig_033.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_034.FeedThruLUT ));
  SLICE_91 SLICE_91( .DI1(\newFlattenedMCUout[12].sig_036.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_035.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[13] ), 
    .Q1(\flattenedMCUout[12] ), 
    .F0(\newFlattenedMCUout[13].sig_035.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_036.FeedThruLUT ));
  SLICE_93 SLICE_93( .DI1(\newFlattenedMCUout[10].sig_038.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_037.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[11] ), 
    .Q1(\flattenedMCUout[10] ), 
    .F0(\newFlattenedMCUout[11].sig_037.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_038.FeedThruLUT ));
  SLICE_95 SLICE_95( .DI1(\newFlattenedMCUout[8].sig_040.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_039.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[9] ), 
    .Q1(\flattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[9].sig_039.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_040.FeedThruLUT ));
  SLICE_97 SLICE_97( .DI1(\newFlattenedMCUout[6].sig_042.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[7].sig_041.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[6] ), .D0(\newFlattenedMCUout[7] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[7] ), 
    .Q1(\flattenedMCUout[6] ), 
    .F0(\newFlattenedMCUout[7].sig_041.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[6].sig_042.FeedThruLUT ));
  SLICE_99 SLICE_99( .DI1(\newFlattenedMCUout[4].sig_044.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[5].sig_043.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[4] ), .D0(\newFlattenedMCUout[5] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[5] ), 
    .Q1(\flattenedMCUout[4] ), 
    .F0(\newFlattenedMCUout[5].sig_043.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[4].sig_044.FeedThruLUT ));
  SLICE_101 SLICE_101( .DI1(\newFlattenedMCUout[2].sig_046.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[3].sig_045.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[2] ), .D0(\newFlattenedMCUout[3] ), 
    .CE(flattenedMCUout_47__N_49), .CLK(int_osc), .Q0(\flattenedMCUout[3] ), 
    .Q1(\flattenedMCUout[2] ), 
    .F0(\newFlattenedMCUout[3].sig_045.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[2].sig_046.FeedThruLUT ));
  makeMusic_SLICE_106 \makeMusic.SLICE_106 ( .DI1(\makeMusic.n13[1] ), 
    .DI0(\makeMusic.n13[0] ), .D1(\makeMusic.n532 ), 
    .C1(\makeMusic.counter[1] ), .B1(\makeMusic.counter[0] ), 
    .D0(\makeMusic.n293[3] ), .C0(\makeMusic.freq_9__N_86 ), 
    .B0(\makeMusic.n293[2] ), .A0(\makeMusic.counter[0] ), .CLK(int_osc), 
    .Q0(\makeMusic.counter[0] ), .Q1(\makeMusic.counter[1] ), 
    .F0(\makeMusic.n13[0] ), .F1(\makeMusic.n13[1] ));
  makeMusic_SLICE_108 \makeMusic.SLICE_108 ( 
    .DI1(\makeMusic.freq_9__N_86.sig_049.FeedThruLUT ), 
    .DI0(\makeMusic.n293[2].sig_048.FeedThruLUT ), 
    .C1(\makeMusic.freq_9__N_86 ), .D0(\makeMusic.n293[2] ), .CE(n569), 
    .LSR(start), .CLK(int_osc), .Q0(\makeMusic.n293[3] ), 
    .Q1(\makeMusic.n293[2] ), .F0(\makeMusic.n293[2].sig_048.FeedThruLUT ), 
    .F1(\makeMusic.freq_9__N_86.sig_049.FeedThruLUT ));
  makeMusic_SLICE_111 \makeMusic.SLICE_111 ( .DI1(\makeMusic.dur_7__N_52[6] ), 
    .DI0(\makeMusic.dur_7__N_52[7] ), .D1(\flattenedMCUout[38] ), 
    .C1(\makeMusic.freq_9__N_86 ), .B1(\makeMusic.dur_7__N_87[6] ), 
    .D0(\flattenedMCUout[39] ), .C0(\makeMusic.dur_7__N_87[7] ), 
    .B0(\makeMusic.freq_9__N_86 ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.dur[7] ), .Q1(\makeMusic.dur[6] ), 
    .F0(\makeMusic.dur_7__N_52[7] ), .F1(\makeMusic.dur_7__N_52[6] ));
  makeMusic_SLICE_113 \makeMusic.SLICE_113 ( .DI1(\makeMusic.dur_7__N_52[4] ), 
    .DI0(\makeMusic.dur_7__N_52[5] ), .D1(\flattenedMCUout[36] ), 
    .C1(\makeMusic.freq_9__N_86 ), .B1(\makeMusic.dur_7__N_87[4] ), 
    .D0(\flattenedMCUout[37] ), .C0(\makeMusic.dur_7__N_87[5] ), 
    .B0(\makeMusic.freq_9__N_86 ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.dur[5] ), .Q1(\makeMusic.dur[4] ), 
    .F0(\makeMusic.dur_7__N_52[5] ), .F1(\makeMusic.dur_7__N_52[4] ));
  makeMusic_SLICE_115 \makeMusic.SLICE_115 ( .DI1(\makeMusic.dur_7__N_52[2] ), 
    .DI0(\makeMusic.dur_7__N_52[3] ), .D1(\flattenedMCUout[34] ), 
    .C1(\makeMusic.dur_7__N_87[2] ), .B1(\makeMusic.freq_9__N_86 ), 
    .C0(\makeMusic.dur_7__N_87[3] ), .B0(\flattenedMCUout[35] ), 
    .A0(\makeMusic.freq_9__N_86 ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.dur[3] ), .Q1(\makeMusic.dur[2] ), 
    .F0(\makeMusic.dur_7__N_52[3] ), .F1(\makeMusic.dur_7__N_52[2] ));
  makeMusic_SLICE_117 \makeMusic.SLICE_117 ( .DI1(\makeMusic.dur_7__N_52[0] ), 
    .DI0(\makeMusic.dur_7__N_52[1] ), .D1(\flattenedMCUout[32] ), 
    .C1(\makeMusic.dur_7__N_87[0] ), .B1(\makeMusic.freq_9__N_86 ), 
    .D0(\flattenedMCUout[33] ), .C0(\makeMusic.dur_7__N_87[1] ), 
    .A0(\makeMusic.freq_9__N_86 ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.dur[1] ), .Q1(\makeMusic.dur[0] ), 
    .F0(\makeMusic.dur_7__N_52[1] ), .F1(\makeMusic.dur_7__N_52[0] ));
  makeMusic_SLICE_119 \makeMusic.SLICE_119 ( .DI1(\makeMusic.freq_9__N_60[5] ), 
    .DI0(\makeMusic.freq_9__N_60[6] ), .D1(\flattenedMCUout[45] ), 
    .C1(\makeMusic.freq_9__N_76[5] ), .B1(\makeMusic.freq_9__N_86 ), 
    .D0(\flattenedMCUout[46] ), .C0(\makeMusic.freq_9__N_76[6] ), 
    .A0(\makeMusic.freq_9__N_86 ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.freq[6] ), .Q1(\makeMusic.freq[5] ), 
    .F0(\makeMusic.freq_9__N_60[6] ), .F1(\makeMusic.freq_9__N_60[5] ));
  makeMusic_SLICE_120 \makeMusic.SLICE_120 ( .DI0(\makeMusic.en_N_100 ), 
    .D0(\makeMusic.en_N_101 ), .CLK(int_osc), .Q0(\makeMusic.en ), 
    .F0(\makeMusic.en_N_100 ));
  makeMusic_SLICE_122 \makeMusic.SLICE_122 ( .DI1(\makeMusic.freq_9__N_60[3] ), 
    .DI0(\makeMusic.freq_9__N_60[4] ), .D1(\makeMusic.freq_9__N_76[3] ), 
    .C1(\flattenedMCUout[43] ), .B1(\makeMusic.freq_9__N_86 ), 
    .D0(\flattenedMCUout[44] ), .C0(\makeMusic.freq_9__N_76[4] ), 
    .A0(\makeMusic.freq_9__N_86 ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.freq[4] ), .Q1(\makeMusic.freq[3] ), 
    .F0(\makeMusic.freq_9__N_60[4] ), .F1(\makeMusic.freq_9__N_60[3] ));
  makeMusic_SLICE_124 \makeMusic.SLICE_124 ( .DI1(\makeMusic.freq_9__N_60[1] ), 
    .DI0(\makeMusic.freq_9__N_60[2] ), .D1(\flattenedMCUout[41] ), 
    .C1(\makeMusic.freq_9__N_76[1] ), .B1(\makeMusic.freq_9__N_86 ), 
    .D0(\flattenedMCUout[42] ), .C0(\makeMusic.freq_9__N_86 ), 
    .B0(\makeMusic.freq_9__N_76[2] ), .CE(\makeMusic.n554 ), .CLK(int_osc), 
    .Q0(\makeMusic.freq[2] ), .Q1(\makeMusic.freq[1] ), 
    .F0(\makeMusic.freq_9__N_60[2] ), .F1(\makeMusic.freq_9__N_60[1] ));
  SLICE_128 SLICE_128( .DI1(\newFlattenedMCUout[21].sig_096.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[20].sig_050.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[21] ), .D0(\newFlattenedMCUout[20] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[21] ), .Q1(\newFlattenedMCUout[22] ), 
    .F0(\newFlattenedMCUout[20].sig_050.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[21].sig_096.FeedThruLUT ));
  SLICE_129 SLICE_129( .DI1(\newFlattenedMCUout[22].sig_075.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[23].sig_051.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[22] ), .D0(\newFlattenedMCUout[23] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[24] ), .Q1(\newFlattenedMCUout[23] ), 
    .F0(\newFlattenedMCUout[23].sig_051.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[22].sig_075.FeedThruLUT ));
  SLICE_130 SLICE_130( .DI1(\newFlattenedMCUout[18].sig_053.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[19].sig_052.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[18] ), .D0(\newFlattenedMCUout[19] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[20] ), .Q1(\newFlattenedMCUout[19] ), 
    .F0(\newFlattenedMCUout[19].sig_052.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[18].sig_053.FeedThruLUT ));
  SLICE_132 SLICE_132( .DI1(\newFlattenedMCUout[16].sig_055.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[17].sig_054.FeedThruLUT ), 
    .C1(\newFlattenedMCUout[16] ), .D0(\newFlattenedMCUout[17] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[18] ), .Q1(\newFlattenedMCUout[17] ), 
    .F0(\newFlattenedMCUout[17].sig_054.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[16].sig_055.FeedThruLUT ));
  SLICE_134 SLICE_134( .DI1(\newFlattenedMCUout[14].sig_057.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[15].sig_056.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[14] ), .D0(\newFlattenedMCUout[15] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[16] ), .Q1(\newFlattenedMCUout[15] ), 
    .F0(\newFlattenedMCUout[15].sig_056.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[14].sig_057.FeedThruLUT ));
  SLICE_136 SLICE_136( .DI1(\newFlattenedMCUout[12].sig_059.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[13].sig_058.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[12] ), .D0(\newFlattenedMCUout[13] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[14] ), .Q1(\newFlattenedMCUout[13] ), 
    .F0(\newFlattenedMCUout[13].sig_058.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[12].sig_059.FeedThruLUT ));
  SLICE_138 SLICE_138( .DI1(\newFlattenedMCUout[10].sig_061.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[11].sig_060.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[10] ), .D0(\newFlattenedMCUout[11] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[12] ), .Q1(\newFlattenedMCUout[11] ), 
    .F0(\newFlattenedMCUout[11].sig_060.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[10].sig_061.FeedThruLUT ));
  SLICE_140 SLICE_140( .DI1(\newFlattenedMCUout[8].sig_064.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[9].sig_062.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[8] ), .D0(\newFlattenedMCUout[9] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[10] ), .Q1(\newFlattenedMCUout[9] ), 
    .F0(\newFlattenedMCUout[9].sig_062.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[8].sig_064.FeedThruLUT ));
  SLICE_141 SLICE_141( .DI1(\newFlattenedMCUout[24].sig_074.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[25].sig_063.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[24] ), .D0(\newFlattenedMCUout[25] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[26] ), .Q1(\newFlattenedMCUout[25] ), 
    .F0(\newFlattenedMCUout[25].sig_063.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[24].sig_074.FeedThruLUT ));
  SLICE_143 SLICE_143( .DI1(\newFlattenedMCUout[27].sig_095.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[26].sig_065.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[27] ), .D0(\newFlattenedMCUout[26] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[27] ), .Q1(\newFlattenedMCUout[28] ), 
    .F0(\newFlattenedMCUout[26].sig_065.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[27].sig_095.FeedThruLUT ));
  SLICE_144 SLICE_144( .DI1(\newFlattenedMCUout[1].sig_067.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[0].sig_066.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[1] ), .D0(\newFlattenedMCUout[0] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[1] ), .Q1(\newFlattenedMCUout[2] ), 
    .F0(\newFlattenedMCUout[0].sig_066.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[1].sig_067.FeedThruLUT ));
  SLICE_146 SLICE_146( .DI1(\newFlattenedMCUout[3].sig_069.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[2].sig_068.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[3] ), .D0(\newFlattenedMCUout[2] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[3] ), .Q1(\newFlattenedMCUout[4] ), 
    .F0(\newFlattenedMCUout[2].sig_068.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[3].sig_069.FeedThruLUT ));
  SLICE_148 SLICE_148( .DI1(\newFlattenedMCUout[5].sig_071.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[4].sig_070.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[5] ), .D0(\newFlattenedMCUout[4] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[5] ), .Q1(\newFlattenedMCUout[6] ), 
    .F0(\newFlattenedMCUout[4].sig_070.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[5].sig_071.FeedThruLUT ));
  SLICE_150 SLICE_150( .DI1(\newFlattenedMCUout[7].sig_073.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[6].sig_072.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[7] ), .D0(\newFlattenedMCUout[6] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[7] ), .Q1(\newFlattenedMCUout[8] ), 
    .F0(\newFlattenedMCUout[6].sig_072.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[7].sig_073.FeedThruLUT ));
  SLICE_155 SLICE_155( .DI1(\newFlattenedMCUout[44].sig_078.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[45].sig_077.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[44] ), .D0(\newFlattenedMCUout[45] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[46] ), .Q1(\newFlattenedMCUout[45] ), 
    .F0(\newFlattenedMCUout[45].sig_077.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[44].sig_078.FeedThruLUT ));
  SLICE_157 SLICE_157( .DI1(\newFlattenedMCUout[42].sig_080.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[43].sig_079.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[42] ), .D0(\newFlattenedMCUout[43] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[44] ), .Q1(\newFlattenedMCUout[43] ), 
    .F0(\newFlattenedMCUout[43].sig_079.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[42].sig_080.FeedThruLUT ));
  SLICE_159 SLICE_159( .DI1(\newFlattenedMCUout[40].sig_082.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[41].sig_081.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[40] ), .D0(\newFlattenedMCUout[41] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[42] ), .Q1(\newFlattenedMCUout[41] ), 
    .F0(\newFlattenedMCUout[41].sig_081.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[40].sig_082.FeedThruLUT ));
  SLICE_161 SLICE_161( .DI1(\newFlattenedMCUout[38].sig_084.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[39].sig_083.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[38] ), .D0(\newFlattenedMCUout[39] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[40] ), .Q1(\newFlattenedMCUout[39] ), 
    .F0(\newFlattenedMCUout[39].sig_083.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[38].sig_084.FeedThruLUT ));
  SLICE_163 SLICE_163( .DI1(\newFlattenedMCUout[36].sig_086.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[37].sig_085.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[36] ), .D0(\newFlattenedMCUout[37] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[38] ), .Q1(\newFlattenedMCUout[37] ), 
    .F0(\newFlattenedMCUout[37].sig_085.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[36].sig_086.FeedThruLUT ));
  SLICE_165 SLICE_165( .DI1(\newFlattenedMCUout[34].sig_088.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[35].sig_087.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[34] ), .D0(\newFlattenedMCUout[35] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[36] ), .Q1(\newFlattenedMCUout[35] ), 
    .F0(\newFlattenedMCUout[35].sig_087.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[34].sig_088.FeedThruLUT ));
  SLICE_167 SLICE_167( .DI1(\newFlattenedMCUout[32].sig_090.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[33].sig_089.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[32] ), .D0(\newFlattenedMCUout[33] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[34] ), .Q1(\newFlattenedMCUout[33] ), 
    .F0(\newFlattenedMCUout[33].sig_089.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[32].sig_090.FeedThruLUT ));
  SLICE_169 SLICE_169( .DI1(\newFlattenedMCUout[30].sig_092.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[31].sig_091.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[30] ), .D0(\newFlattenedMCUout[31] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[32] ), .Q1(\newFlattenedMCUout[31] ), 
    .F0(\newFlattenedMCUout[31].sig_091.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[30].sig_092.FeedThruLUT ));
  SLICE_171 SLICE_171( .DI1(\newFlattenedMCUout[28].sig_094.FeedThruLUT ), 
    .DI0(\newFlattenedMCUout[29].sig_093.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[28] ), .D0(\newFlattenedMCUout[29] ), .CLK(sck_c), 
    .Q0(\newFlattenedMCUout[30] ), .Q1(\newFlattenedMCUout[29] ), 
    .F0(\newFlattenedMCUout[29].sig_093.FeedThruLUT ), 
    .F1(\newFlattenedMCUout[28].sig_094.FeedThruLUT ));
  SLICE_175 SLICE_175( .D1(n52), .C1(n49), .B1(n51), .A1(n50), 
    .D0(\flattenedMCUout[4] ), .C0(\flattenedMCUout[18] ), 
    .B0(\newFlattenedMCUout[18] ), .A0(\newFlattenedMCUout[4] ), .F0(n49), 
    .F1(n85));
  SLICE_176 SLICE_176( .D0(\flattenedMCUout[8] ), .C0(\flattenedMCUout[24] ), 
    .B0(\newFlattenedMCUout[24] ), .A0(\newFlattenedMCUout[8] ), .F0(n52));
  SLICE_177 SLICE_177( .D0(\newFlattenedMCUout[29] ), 
    .C0(\flattenedMCUout[29] ), .B0(\newFlattenedMCUout[44] ), 
    .A0(\flattenedMCUout[44] ), .F0(n68));
  SLICE_178 SLICE_178( .D1(n67), .C1(n65), .B1(n66), .A1(n68), 
    .D0(\flattenedMCUout[27] ), .C0(\flattenedMCUout[30] ), 
    .B0(\newFlattenedMCUout[30] ), .A0(\newFlattenedMCUout[27] ), .F0(n65), 
    .F1(n89));
  SLICE_179 SLICE_179( .D1(n72), .C1(n69), .B1(n70), .A1(n71), 
    .D0(\newFlattenedMCUout[37] ), .C0(\flattenedMCUout[37] ), 
    .B0(\newFlattenedMCUout[31] ), .A0(\flattenedMCUout[31] ), .F0(n69), 
    .F1(n90));
  SLICE_180 SLICE_180( .D1(\flattenedMCUout[11] ), .C1(\flattenedMCUout[39] ), 
    .B1(\newFlattenedMCUout[39] ), .A1(\newFlattenedMCUout[11] ), 
    .D0(\flattenedMCUout[22] ), .C0(\flattenedMCUout[28] ), 
    .B0(\newFlattenedMCUout[28] ), .A0(\newFlattenedMCUout[22] ), .F0(n72), 
    .F1(n54));
  SLICE_181 SLICE_181( .D0(n88), .C0(n85), .B0(n87), .A0(n86), .F0(n94));
  SLICE_182 SLICE_182( .D1(n64), .C1(n61), .B1(n63), .A1(n62), 
    .D0(\flattenedMCUout[10] ), .C0(\flattenedMCUout[38] ), 
    .B0(\newFlattenedMCUout[10] ), .A0(\newFlattenedMCUout[38] ), .F0(n61), 
    .F1(n88));
  makeMusic_SLICE_183 \makeMusic.SLICE_183 ( .D1(\makeMusic.n293[3] ), 
    .C1(\nextstate_1__N_97[0] ), .D0(\makeMusic.howLong.n61 ), 
    .C0(\makeMusic.howLong.n59 ), .B0(\makeMusic.howLong.n1423 ), 
    .A0(\makeMusic.howLong.n55 ), .F0(\nextstate_1__N_97[0] ), 
    .F1(\makeMusic.n533 ));
  makeMusic_pitch_SLICE_185 \makeMusic.pitch.SLICE_185 ( 
    .D1(\makeMusic.freq[4] ), .C1(\makeMusic.pitch.n12 ), 
    .B1(\makeMusic.freq[1] ), .A1(\makeMusic.freq[7] ), 
    .D0(\makeMusic.freq[3] ), .C0(\makeMusic.freq[2] ), 
    .B0(\makeMusic.freq[6] ), .A0(\makeMusic.freq[5] ), 
    .F0(\makeMusic.pitch.n12 ), .F1(\makeMusic.pitch.threshold_31__N_224[0] ));
  makeMusic_pitch_SLICE_187 \makeMusic.pitch.SLICE_187 ( 
    .D1(\makeMusic.pitch.counter[15] ), .C1(\makeMusic.pitch.threshold[23] ), 
    .B1(\makeMusic.pitch.threshold[15] ), .A1(\makeMusic.pitch.counter[23] ), 
    .D0(\makeMusic.pitch.threshold[21] ), .C0(\makeMusic.pitch.threshold[19] ), 
    .B0(\makeMusic.pitch.counter[19] ), .A0(\makeMusic.pitch.counter[21] ), 
    .F0(\makeMusic.pitch.n40 ), .F1(\makeMusic.pitch.n44 ));
  makeMusic_pitch_SLICE_188 \makeMusic.pitch.SLICE_188 ( 
    .D1(\makeMusic.pitch.n39 ), .C1(\makeMusic.pitch.n38 ), 
    .B1(\makeMusic.pitch.n37 ), .A1(\makeMusic.pitch.n40 ), 
    .D0(\makeMusic.pitch.threshold[31] ), .C0(\makeMusic.pitch.counter[28] ), 
    .B0(\makeMusic.pitch.counter[26] ), .F0(\makeMusic.pitch.n38 ), 
    .F1(\makeMusic.pitch.n58 ));
  makeMusic_pitch_SLICE_189 \makeMusic.pitch.SLICE_189 ( 
    .D1(\makeMusic.pitch.threshold[31] ), .C1(\makeMusic.pitch.n1417 ), 
    .B1(\makeMusic.pitch.counter[31] ), .A1(\makeMusic.pitch.counter[4] ), 
    .D0(\makeMusic.pitch.counter[1] ), .C0(\makeMusic.pitch.counter[2] ), 
    .F0(\makeMusic.pitch.n1417 ), .F1(\makeMusic.pitch.n55 ));
  makeMusic_pitch_SLICE_192 \makeMusic.pitch.SLICE_192 ( 
    .D1(\makeMusic.pitch.n42 ), .C1(\makeMusic.pitch.n41 ), 
    .B1(\makeMusic.pitch.n43 ), .A1(\makeMusic.pitch.n44 ), 
    .D0(\makeMusic.pitch.threshold[14] ), .C0(\makeMusic.pitch.threshold[13] ), 
    .B0(\makeMusic.pitch.counter[14] ), .A0(\makeMusic.pitch.counter[13] ), 
    .F0(\makeMusic.pitch.n41 ), .F1(\makeMusic.pitch.n59 ));
  makeMusic_pitch_SLICE_193 \makeMusic.pitch.SLICE_193 ( 
    .D1(\makeMusic.pitch.threshold[16] ), .C1(\makeMusic.pitch.n34 ), 
    .B1(\makeMusic.pitch.counter[0] ), .A1(\makeMusic.pitch.counter[16] ), 
    .D0(\makeMusic.pitch.threshold[24] ), .C0(\makeMusic.pitch.threshold[8] ), 
    .B0(\makeMusic.pitch.counter[8] ), .A0(\makeMusic.pitch.counter[24] ), 
    .F0(\makeMusic.pitch.n34 ), .F1(\makeMusic.pitch.n49 ));
  makeMusic_pitch_SLICE_195 \makeMusic.pitch.SLICE_195 ( 
    .D0(\makeMusic.pitch.threshold[17] ), .C0(\makeMusic.pitch.threshold[12] ), 
    .B0(\makeMusic.pitch.counter[12] ), .A0(\makeMusic.pitch.counter[17] ), 
    .F0(\makeMusic.pitch.n36 ));
  makeMusic_pitch_SLICE_196 \makeMusic.pitch.SLICE_196 ( 
    .D1(\makeMusic.pitch.n58 ), .C1(\makeMusic.pitch.n35 ), 
    .B1(\makeMusic.pitch.n36 ), .A1(\makeMusic.pitch.n49 ), 
    .D0(\makeMusic.pitch.counter[20] ), .C0(\makeMusic.pitch.counter[18] ), 
    .B0(\makeMusic.pitch.threshold[18] ), .A0(\makeMusic.pitch.threshold[20] ), 
    .F0(\makeMusic.pitch.n35 ), .F1(\makeMusic.pitch.n61 ));
  makeMusic_howLong_SLICE_197 \makeMusic.howLong.SLICE_197 ( 
    .D1(\makeMusic.howLong.THRESHOLD[17] ), 
    .C1(\makeMusic.howLong.counter[12] ), 
    .B1(\makeMusic.howLong.THRESHOLD[12] ), 
    .A1(\makeMusic.howLong.counter[17] ), 
    .D0(\makeMusic.howLong.THRESHOLD[19] ), 
    .C0(\makeMusic.howLong.THRESHOLD[21] ), 
    .B0(\makeMusic.howLong.counter[19] ), .A0(\makeMusic.howLong.counter[21] ), 
    .F0(\makeMusic.howLong.n40 ), .F1(\makeMusic.howLong.n36 ));
  makeMusic_howLong_SLICE_198 \makeMusic.howLong.SLICE_198 ( 
    .D1(\makeMusic.howLong.n39 ), .C1(\makeMusic.howLong.n37 ), 
    .B1(\makeMusic.howLong.n40 ), .A1(\makeMusic.howLong.n38 ), 
    .D0(\makeMusic.howLong.THRESHOLD[10] ), 
    .C0(\makeMusic.howLong.counter[9] ), .B0(\makeMusic.howLong.THRESHOLD[9] ), 
    .A0(\makeMusic.howLong.counter[10] ), .F0(\makeMusic.howLong.n37 ), 
    .F1(\makeMusic.howLong.n58 ));
  makeMusic_howLong_SLICE_199 \makeMusic.howLong.SLICE_199 ( 
    .D1(\makeMusic.howLong.THRESHOLD[31] ), .C1(\makeMusic.howLong.n1411 ), 
    .B1(\makeMusic.howLong.counter[4] ), .A1(\makeMusic.howLong.counter[31] ), 
    .D0(\makeMusic.howLong.counter[1] ), .C0(\makeMusic.howLong.counter[2] ), 
    .F0(\makeMusic.howLong.n1411 ), .F1(\makeMusic.howLong.n55 ));
  makeMusic_howLong_SLICE_201 \makeMusic.howLong.SLICE_201 ( 
    .D1(\makeMusic.howLong.THRESHOLD[14] ), 
    .C1(\makeMusic.howLong.THRESHOLD[13] ), 
    .B1(\makeMusic.howLong.counter[13] ), .A1(\makeMusic.howLong.counter[14] ), 
    .D0(\makeMusic.howLong.THRESHOLD[23] ), 
    .C0(\makeMusic.howLong.THRESHOLD[15] ), 
    .B0(\makeMusic.howLong.counter[15] ), .A0(\makeMusic.howLong.counter[23] ), 
    .F0(\makeMusic.howLong.n44 ), .F1(\makeMusic.howLong.n41 ));
  makeMusic_howLong_SLICE_202 \makeMusic.howLong.SLICE_202 ( 
    .D1(\makeMusic.howLong.n43 ), .C1(\makeMusic.howLong.n42 ), 
    .B1(\makeMusic.howLong.n44 ), .A1(\makeMusic.howLong.n41 ), 
    .D0(\makeMusic.howLong.THRESHOLD[30] ), 
    .C0(\makeMusic.howLong.THRESHOLD[11] ), 
    .B0(\makeMusic.howLong.counter[11] ), .A0(\makeMusic.howLong.counter[30] ), 
    .F0(\makeMusic.howLong.n42 ), .F1(\makeMusic.howLong.n59 ));
  makeMusic_howLong_SLICE_203 \makeMusic.howLong.SLICE_203 ( 
    .D1(\makeMusic.howLong.counter[0] ), .C1(\makeMusic.howLong.n34 ), 
    .B1(\makeMusic.howLong.THRESHOLD[16] ), 
    .A1(\makeMusic.howLong.counter[16] ), 
    .D0(\makeMusic.howLong.THRESHOLD[24] ), 
    .C0(\makeMusic.howLong.counter[24] ), .B0(\makeMusic.howLong.counter[8] ), 
    .F0(\makeMusic.howLong.n34 ), .F1(\makeMusic.howLong.n49 ));
  makeMusic_howLong_SLICE_206 \makeMusic.howLong.SLICE_206 ( 
    .D1(\makeMusic.howLong.n58 ), .C1(\makeMusic.howLong.n35 ), 
    .B1(\makeMusic.howLong.n49 ), .A1(\makeMusic.howLong.n36 ), 
    .D0(\makeMusic.howLong.counter[18] ), 
    .C0(\makeMusic.howLong.THRESHOLD[20] ), 
    .B0(\makeMusic.howLong.counter[20] ), 
    .A0(\makeMusic.howLong.THRESHOLD[18] ), .F0(\makeMusic.howLong.n35 ), 
    .F1(\makeMusic.howLong.n61 ));
  SLICE_207 SLICE_207( .D1(n58), .C1(n57), .B1(n59), .A1(n60), 
    .D0(\flattenedMCUout[46] ), .C0(\flattenedMCUout[2] ), 
    .B0(\newFlattenedMCUout[2] ), .A0(\newFlattenedMCUout[46] ), .F0(n57), 
    .F1(n87));
  SLICE_208 SLICE_208( .D1(\flattenedMCUout[9] ), .C1(\flattenedMCUout[43] ), 
    .B1(\newFlattenedMCUout[9] ), .A1(\newFlattenedMCUout[43] ), 
    .D0(\newFlattenedMCUout[45] ), .C0(\flattenedMCUout[45] ), 
    .B0(\newFlattenedMCUout[33] ), .A0(\flattenedMCUout[33] ), .F0(n60), 
    .F1(n59));
  SLICE_209 SLICE_209( .D1(n54), .C1(n53), .B1(n55), .A1(n56), 
    .D0(\newFlattenedMCUout[41] ), .C0(\flattenedMCUout[41] ), 
    .B0(\newFlattenedMCUout[26] ), .A0(\flattenedMCUout[26] ), .F0(n53), 
    .F1(n86));
  SLICE_210 SLICE_210( .D1(\flattenedMCUout[14] ), .C1(\flattenedMCUout[3] ), 
    .B1(\newFlattenedMCUout[14] ), .A1(\newFlattenedMCUout[3] ), 
    .D0(\flattenedMCUout[12] ), .C0(\flattenedMCUout[32] ), 
    .B0(\newFlattenedMCUout[32] ), .A0(\newFlattenedMCUout[12] ), .F0(n56), 
    .F1(n66));
  makeMusic_SLICE_211 \makeMusic.SLICE_211 ( .D1(\makeMusic.freq_9__N_86 ), 
    .C1(\makeMusic.n293[3] ), .A1(\makeMusic.n293[2] ), 
    .D0(\makeMusic.n293[3] ), .C0(\makeMusic.freq_9__N_86 ), 
    .B0(\makeMusic.n293[2] ), .F0(\makeMusic.n554 ), .F1(\makeMusic.n532 ));
  makeMusic_howLong_SLICE_213 \makeMusic.howLong.SLICE_213 ( 
    .D0(\makeMusic.howLong.counter[3] ), .C0(\makeMusic.howLong.counter[5] ), 
    .B0(\makeMusic.howLong.counter[6] ), .A0(\makeMusic.howLong.counter[7] ), 
    .F0(\makeMusic.howLong.n1423 ));
  makeMusic_SLICE_214 \makeMusic.SLICE_214 ( .DI1(\makeMusic.n1207 ), 
    .D1(\makeMusic.n533 ), .C1(\makeMusic.n4 ), .B1(\makeMusic.counter[0] ), 
    .A1(\makeMusic.counter[1] ), .D0(\nextstate_1__N_97[0] ), 
    .C0(\makeMusic.freq_9__N_86 ), .B0(\makeMusic.en_N_101 ), .A0(start), 
    .LSR(start), .CLK(int_osc), .Q1(\makeMusic.freq_9__N_86 ), 
    .F0(\makeMusic.n4 ), .F1(\makeMusic.n1207 ));
  makeMusic_howLong_SLICE_216 \makeMusic.howLong.SLICE_216 ( 
    .D0(\makeMusic.howLong.THRESHOLD[29] ), 
    .C0(\makeMusic.howLong.THRESHOLD[27] ), 
    .B0(\makeMusic.howLong.counter[27] ), .A0(\makeMusic.howLong.counter[29] ), 
    .F0(\makeMusic.howLong.n43 ));
  makeMusic_howLong_SLICE_218 \makeMusic.howLong.SLICE_218 ( 
    .D0(\makeMusic.howLong.THRESHOLD[25] ), 
    .C0(\makeMusic.howLong.THRESHOLD[22] ), 
    .B0(\makeMusic.howLong.counter[22] ), .A0(\makeMusic.howLong.counter[25] ), 
    .F0(\makeMusic.howLong.n39 ));
  makeMusic_pitch_SLICE_220 \makeMusic.pitch.SLICE_220 ( 
    .D0(\makeMusic.pitch.counter[29] ), .C0(\makeMusic.pitch.threshold[31] ), 
    .A0(\makeMusic.pitch.counter[27] ), .F0(\makeMusic.pitch.n43 ));
  makeMusic_pitch_SLICE_221 \makeMusic.pitch.SLICE_221 ( 
    .D0(\makeMusic.pitch.threshold[10] ), .C0(\makeMusic.pitch.threshold[9] ), 
    .B0(\makeMusic.pitch.counter[10] ), .A0(\makeMusic.pitch.counter[9] ), 
    .F0(\makeMusic.pitch.n37 ));
  makeMusic_pitch_SLICE_222 \makeMusic.pitch.SLICE_222 ( 
    .D1(\makeMusic.pitch.threshold[11] ), .C1(\makeMusic.pitch.threshold[31] ), 
    .B1(\makeMusic.pitch.counter[11] ), .A1(\makeMusic.pitch.counter[30] ), 
    .D0(\makeMusic.pitch.threshold[31] ), .C0(\makeMusic.pitch.threshold[22] ), 
    .B0(\makeMusic.pitch.counter[22] ), .A0(\makeMusic.pitch.counter[25] ), 
    .F0(\makeMusic.pitch.n39 ), .F1(\makeMusic.pitch.n42 ));
  SLICE_223 SLICE_223( .D0(n89), .C0(n90), .B0(n94), 
    .F0(flattenedMCUout_47__N_49));
  makeMusic_SLICE_225 \makeMusic.SLICE_225 ( .DI1(\makeMusic.n511 ), 
    .D1(\makeMusic.n533 ), .C1(\makeMusic.rep ), .B1(start), 
    .A1(\makeMusic.en_N_101 ), .C0(\makeMusic.counter[0] ), 
    .B0(\makeMusic.counter[1] ), .LSR(start), .CLK(int_osc), 
    .Q1(\makeMusic.en_N_101 ), .F0(\makeMusic.rep ), .F1(\makeMusic.n511 ));
  SLICE_226 SLICE_226( .DI1(\flattenedMCUout_47__N_49$n0 ), .D1(n89), .C1(n94), 
    .B1(n90), .D0(\nextstate_1__N_97[0] ), .C0(start), .CLK(int_osc), 
    .Q1(start), .F0(n569), .F1(\flattenedMCUout_47__N_49$n0 ));
  SLICE_227 SLICE_227( .DI1(\newFlattenedMCUout[46].sig_076.FeedThruLUT ), 
    .D1(\newFlattenedMCUout[46] ), .D0(\flattenedMCUout[23] ), 
    .C0(\flattenedMCUout[47] ), .B0(\newFlattenedMCUout[23] ), 
    .A0(\newFlattenedMCUout[47] ), .CLK(sck_c), .Q1(\newFlattenedMCUout[47] ), 
    .F0(n51), .F1(\newFlattenedMCUout[46].sig_076.FeedThruLUT ));
  SLICE_228 SLICE_228( .D0(\newFlattenedMCUout[25] ), 
    .C0(\flattenedMCUout[1] ), .B0(\newFlattenedMCUout[1] ), 
    .A0(\flattenedMCUout[25] ), .F0(n50));
  SLICE_229 SLICE_229( .D1(\flattenedMCUout[0] ), .C1(\flattenedMCUout[16] ), 
    .B1(\makeMusic.n293[2] ), .D0(\flattenedMCUout[16] ), 
    .C0(\flattenedMCUout[0] ), .B0(\newFlattenedMCUout[0] ), 
    .A0(\newFlattenedMCUout[16] ), .F0(n67), .F1(\makeMusic.dur_7__N_87[0] ));
  SLICE_231 SLICE_231( .F0(VCC_net));
  makeMusic_SLICE_233 \makeMusic.SLICE_233 ( .D1(\flattenedMCUout[7] ), 
    .C1(\flattenedMCUout[19] ), .B1(\newFlattenedMCUout[19] ), 
    .A1(\newFlattenedMCUout[7] ), .D0(\flattenedMCUout[23] ), 
    .C0(\flattenedMCUout[7] ), .A0(\makeMusic.n293[2] ), 
    .F0(\makeMusic.dur_7__N_87[7] ), .F1(n62));
  makeMusic_SLICE_234 \makeMusic.SLICE_234 ( .D1(\flattenedMCUout[5] ), 
    .C1(\flattenedMCUout[21] ), .A1(\makeMusic.n293[2] ), 
    .D0(\flattenedMCUout[22] ), .C0(\flattenedMCUout[6] ), 
    .B0(\makeMusic.n293[2] ), .F0(\makeMusic.dur_7__N_87[6] ), 
    .F1(\makeMusic.dur_7__N_87[5] ));
  makeMusic_SLICE_236 \makeMusic.SLICE_236 ( .D1(\flattenedMCUout[19] ), 
    .C1(\flattenedMCUout[3] ), .A1(\makeMusic.n293[2] ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[4] ), 
    .B0(\makeMusic.n293[2] ), .F0(\makeMusic.dur_7__N_87[4] ), 
    .F1(\makeMusic.dur_7__N_87[3] ));
  makeMusic_SLICE_238 \makeMusic.SLICE_238 ( .D1(\flattenedMCUout[1] ), 
    .C1(\flattenedMCUout[17] ), .B1(\makeMusic.n293[2] ), 
    .D0(\flattenedMCUout[18] ), .C0(\flattenedMCUout[2] ), 
    .A0(\makeMusic.n293[2] ), .F0(\makeMusic.dur_7__N_87[2] ), 
    .F1(\makeMusic.dur_7__N_87[1] ));
  makeMusic_SLICE_240 \makeMusic.SLICE_240 ( .DI1(\makeMusic.freq_9__N_60[7] ), 
    .D1(\flattenedMCUout[47] ), .C1(\makeMusic.freq_9__N_76[7] ), 
    .B1(\makeMusic.freq_9__N_86 ), .D0(\flattenedMCUout[15] ), 
    .C0(\flattenedMCUout[31] ), .B0(\makeMusic.n293[2] ), 
    .CE(\makeMusic.n554 ), .CLK(int_osc), .Q1(\makeMusic.freq[7] ), 
    .F0(\makeMusic.freq_9__N_76[7] ), .F1(\makeMusic.freq_9__N_60[7] ));
  makeMusic_SLICE_241 \makeMusic.SLICE_241 ( .D1(\flattenedMCUout[13] ), 
    .C1(\flattenedMCUout[29] ), .B1(\makeMusic.n293[2] ), 
    .D0(\flattenedMCUout[14] ), .C0(\flattenedMCUout[30] ), 
    .A0(\makeMusic.n293[2] ), .F0(\makeMusic.freq_9__N_76[6] ), 
    .F1(\makeMusic.freq_9__N_76[5] ));
  makeMusic_SLICE_243 \makeMusic.SLICE_243 ( .D1(\flattenedMCUout[11] ), 
    .C1(\flattenedMCUout[27] ), .B1(\makeMusic.n293[2] ), 
    .D0(\flattenedMCUout[12] ), .C0(\flattenedMCUout[28] ), 
    .A0(\makeMusic.n293[2] ), .F0(\makeMusic.freq_9__N_76[4] ), 
    .F1(\makeMusic.freq_9__N_76[3] ));
  makeMusic_SLICE_245 \makeMusic.SLICE_245 ( .D1(\flattenedMCUout[9] ), 
    .C1(\flattenedMCUout[25] ), .A1(\makeMusic.n293[2] ), 
    .D0(\flattenedMCUout[26] ), .C0(\flattenedMCUout[10] ), 
    .B0(\makeMusic.n293[2] ), .F0(\makeMusic.freq_9__N_76[2] ), 
    .F1(\makeMusic.freq_9__N_76[1] ));
  makeMusic_pitch_SLICE_250 \makeMusic.pitch.SLICE_250 ( 
    .D0(\makeMusic.pitch.counter[3] ), .C0(\makeMusic.pitch.counter[5] ), 
    .B0(\makeMusic.pitch.counter[6] ), .A0(\makeMusic.pitch.counter[7] ), 
    .F0(\makeMusic.pitch.n1421 ));
  makeMusic_pitch_SLICE_251 \makeMusic.pitch.SLICE_251 ( 
    .DI1(\makeMusic.pitch.clkStrobe_N_257 ), .D1(\makeMusic.pitch.n61 ), 
    .C1(\makeMusic.pitch.n59 ), .B1(\makeMusic.pitch.n55 ), 
    .A1(\makeMusic.pitch.n1421 ), .D0(\makeMusic.en ), .B0(pwm_c), 
    .CLK(int_osc), .Q1(pwm_c), .F0(\makeMusic.pitch.n568 ), 
    .F1(\makeMusic.pitch.clkStrobe_N_257 ));
  makeMusic_howLong_SLICE_252 \makeMusic.howLong.SLICE_252 ( 
    .D0(\makeMusic.howLong.THRESHOLD[28] ), 
    .C0(\makeMusic.howLong.THRESHOLD[26] ), 
    .B0(\makeMusic.howLong.counter[26] ), .A0(\makeMusic.howLong.counter[28] ), 
    .F0(\makeMusic.howLong.n38 ));
  SLICE_258 SLICE_258( .D0(\flattenedMCUout[15] ), .C0(\flattenedMCUout[35] ), 
    .B0(\newFlattenedMCUout[35] ), .A0(\newFlattenedMCUout[15] ), .F0(n58));
  SLICE_260 SLICE_260( .D1(\flattenedMCUout[40] ), .C1(\flattenedMCUout[6] ), 
    .B1(\newFlattenedMCUout[6] ), .A1(\newFlattenedMCUout[40] ), 
    .D0(\flattenedMCUout[42] ), .C0(\flattenedMCUout[17] ), 
    .B0(\newFlattenedMCUout[17] ), .A0(\newFlattenedMCUout[42] ), .F0(n71), 
    .F1(n70));
  SLICE_263 SLICE_263( .D0(\flattenedMCUout[36] ), .C0(\flattenedMCUout[13] ), 
    .B0(\newFlattenedMCUout[13] ), .A0(\newFlattenedMCUout[36] ), .F0(n55));
  SLICE_266 SLICE_266( .D1(\flattenedMCUout[34] ), .C1(\flattenedMCUout[21] ), 
    .B1(\newFlattenedMCUout[34] ), .A1(\newFlattenedMCUout[21] ), 
    .D0(\flattenedMCUout[20] ), .C0(\flattenedMCUout[5] ), 
    .B0(\newFlattenedMCUout[5] ), .A0(\newFlattenedMCUout[20] ), .F0(n63), 
    .F1(n64));
  makeMusic_pitch_mult_30 \makeMusic.pitch.mult_30 ( 
    .A0(\makeMusic.pitch.threshold_31__N_224[0] ), .B15(VCC_net), 
    .B13(VCC_net), .B12(VCC_net), .B10(VCC_net), .B9(VCC_net), .B8(VCC_net), 
    .B4(VCC_net), .B3(VCC_net), .B1(VCC_net), .B0(VCC_net), 
    .O16(\makeMusic.pitch.threshold_31__N_199[25] ), 
    .O15(\makeMusic.pitch.threshold_31__N_199[24] ), 
    .O14(\makeMusic.pitch.threshold_31__N_199[23] ), 
    .O13(\makeMusic.pitch.threshold_31__N_199[22] ), 
    .O12(\makeMusic.pitch.threshold_31__N_199[21] ), 
    .O11(\makeMusic.pitch.threshold_31__N_199[20] ), 
    .O10(\makeMusic.pitch.threshold_31__N_199[19] ), 
    .O9(\makeMusic.pitch.threshold_31__N_199[18] ), 
    .O8(\makeMusic.pitch.threshold_31__N_199[17] ), 
    .O7(\makeMusic.pitch.threshold_31__N_199[16] ), 
    .O6(\makeMusic.pitch.threshold_31__N_199[15] ), 
    .O5(\makeMusic.pitch.threshold_31__N_199[14] ), 
    .O4(\makeMusic.pitch.threshold_31__N_199[13] ), 
    .O3(\makeMusic.pitch.threshold_31__N_199[12] ), 
    .O2(\makeMusic.pitch.threshold_31__N_199[11] ), 
    .O1(\makeMusic.pitch.threshold_31__N_199[10] ), 
    .O0(\makeMusic.pitch.threshold_31__N_199[9] ));
  makeMusic_howLong_mult_31 \makeMusic.howLong.mult_31 ( 
    .A7(\makeMusic.dur[7] ), .A6(\makeMusic.dur[6] ), .A5(\makeMusic.dur[5] ), 
    .A4(\makeMusic.dur[4] ), .A3(\makeMusic.dur[3] ), .A2(\makeMusic.dur[2] ), 
    .A1(\makeMusic.dur[1] ), .A0(\makeMusic.dur[0] ), .B15(VCC_net), 
    .B13(VCC_net), .B12(VCC_net), .B10(VCC_net), .B9(VCC_net), .B8(VCC_net), 
    .B4(VCC_net), .B3(VCC_net), .B1(VCC_net), .B0(VCC_net), 
    .O22(\makeMusic.howLong.THRESHOLD_31__N_135[31] ), 
    .O21(\makeMusic.howLong.THRESHOLD_31__N_135[30] ), 
    .O20(\makeMusic.howLong.THRESHOLD_31__N_135[29] ), 
    .O19(\makeMusic.howLong.THRESHOLD_31__N_135[28] ), 
    .O18(\makeMusic.howLong.THRESHOLD_31__N_135[27] ), 
    .O17(\makeMusic.howLong.THRESHOLD_31__N_135[26] ), 
    .O16(\makeMusic.howLong.THRESHOLD_31__N_135[25] ), 
    .O15(\makeMusic.howLong.THRESHOLD_31__N_135[24] ), 
    .O14(\makeMusic.howLong.THRESHOLD_31__N_135[23] ), 
    .O13(\makeMusic.howLong.THRESHOLD_31__N_135[22] ), 
    .O12(\makeMusic.howLong.THRESHOLD_31__N_135[21] ), 
    .O11(\makeMusic.howLong.THRESHOLD_31__N_135[20] ), 
    .O10(\makeMusic.howLong.THRESHOLD_31__N_135[19] ), 
    .O9(\makeMusic.howLong.THRESHOLD_31__N_135[18] ), 
    .O8(\makeMusic.howLong.THRESHOLD_31__N_135[17] ), 
    .O7(\makeMusic.howLong.THRESHOLD_31__N_135[16] ), 
    .O6(\makeMusic.howLong.THRESHOLD_31__N_135[15] ), 
    .O5(\makeMusic.howLong.THRESHOLD_31__N_135[14] ), 
    .O4(\makeMusic.howLong.THRESHOLD_31__N_135[13] ), 
    .O3(\makeMusic.howLong.THRESHOLD_31__N_135[12] ), 
    .O2(\makeMusic.howLong.THRESHOLD_31__N_135[11] ), 
    .O1(\makeMusic.howLong.THRESHOLD_31__N_135[10] ), 
    .O0(\makeMusic.howLong.THRESHOLD_31__N_135[9] ));
  spi_newFlattenedMCUout_i0 \spi.newFlattenedMCUout_i0 ( .PADDI(sdi_c), 
    .INCLK(sck_c), .DI0(\newFlattenedMCUout[0] ));
  hf_osc hf_osc( .CLKHFPU(VCC_net), .CLKHF(int_osc));
  sdi sdi_I( .PADDI(sdi_c), .sdi(sdi));
  sck sck_I( .PADDI(sck_c), .sck(sck));
  pwm pwm_I( .PADDO(pwm_c), .pwm(pwm));
endmodule

module makeMusic_pitch_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module makeMusic_pitch_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_5 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/pitch/counter_100__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_16 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \makeMusic/pitch/counter_100_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/counter_100__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_pitch_SLICE_17 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_18 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_3 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_19 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_5 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_7 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_21 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_9 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_22 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_11 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_23 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_13 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_24 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_15 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_25 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_17 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_26 ( input D1, D0, C0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \makeMusic/pitch/threshold_31__I_0_add_2_add_5_19 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_27 ( input DI1, D1, C1, B1, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i1 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i3 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i4 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i5 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i6 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_31 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i7 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i8 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i9 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i10 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_33 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i11 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i12 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_34 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i13 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i14 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_35 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i15 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i16 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_36 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i17 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i18 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_37 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i19 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i20 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_38 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i21 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i22 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_39 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i23 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i24 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_40 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i25 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i26 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_41 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i27 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_42 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/howLong/counter_98__i30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_43 ( input DI0, D1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  fa2 \makeMusic/howLong/counter_98_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/howLong/counter_98__i31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module makeMusic_howLong_SLICE_44 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_45 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_3 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_46 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_5 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_47 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_7 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_48 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_9 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_49 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_11 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_50 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_13 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_51 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_15 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_52 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_17 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_53 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_19 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_54 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_21 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_55 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT0 );
  wire   GNDI;

  fa2 \makeMusic/howLong/THRESHOLD_31__I_0_sub_3_add_2_23 ( .A0(GNDI), .B0(B0), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_56 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_56_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_56_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_57 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_57_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_57_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i46( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i47( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_59 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_59_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_59_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i44( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i45( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_61 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_61_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_61_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i42( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i43( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_63 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_63_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_63_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i40( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i41( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_65 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_65_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_65_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i38( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i39( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_67 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_67_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_67_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i36( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i37( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_69 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_69_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_69_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i34( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i35( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_71 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_71_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_71_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i32( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i33( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_73 ( input DI1, DI0, D1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_73_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_73_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i30( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i31( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_75 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_75_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_75_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i28( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i29( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_77 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_77_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_77_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i26( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i27( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_79 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_79_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_79_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i24( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i25( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_81 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_81_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_81_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i22( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i23( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_83 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_83_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_83_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i20( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i21( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_85 ( input DI1, DI0, C1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 SLICE_85_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_85_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 flattenedMCUout_i0_i18( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i19( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_87 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_87_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_87_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i16( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i17( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_89 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_89_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_89_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i14( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i15( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_91 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_91_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_91_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i12( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i13( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_93 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_93_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_93_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i10( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i11( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_95 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_95_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_95_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i8( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i9( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_97 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_97_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_97_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i6( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_99 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_99_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_99_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i5( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_101 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40002 SLICE_101_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_101_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 flattenedMCUout_i0_i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 flattenedMCUout_i0_i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_106 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 \makeMusic/i335_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \makeMusic/i327_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/counter_97__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \makeMusic/counter_97__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xA9AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_108 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \makeMusic.SLICE_108_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \makeMusic.SLICE_108_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/state_FSM_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 \makeMusic/state_FSM_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module makeMusic_SLICE_111 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 \makeMusic/dur_7__I_0_i7_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \makeMusic/dur_7__I_0_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_113 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40006 \makeMusic/dur_7__I_0_i5_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \makeMusic/dur_7__I_0_i6_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_115 ( input DI1, DI0, D1, C1, B1, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 \makeMusic/dur_7__I_0_i3_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \makeMusic/dur_7__I_0_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xD8D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_117 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 \makeMusic/dur_7__I_0_i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \makeMusic/dur_7__I_0_i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/dur_i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/dur_i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_119 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 \makeMusic/freq_9__I_0_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \makeMusic/freq_9__I_0_i7_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/freq_i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module makeMusic_SLICE_120 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40011 \makeMusic/en_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/en_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_122 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40012 \makeMusic/freq_9__I_0_i4_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \makeMusic/freq_9__I_0_i5_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/freq_i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_124 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40008 \makeMusic/freq_9__I_0_i2_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \makeMusic/freq_9__I_0_i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \makeMusic/freq_i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_128_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_128_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_129 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_129_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_129_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_130 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_130_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_130_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_132 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_132_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_132_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_134 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_134_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_134_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_136 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_136_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_136_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_138 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_138_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_138_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_140 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_140_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_140_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_141 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_141_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_141_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_143 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_143_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_143_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_144 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_144_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_144_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_146 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_146_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_146_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_148 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_148_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_148_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_150 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_150_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_150_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_155 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_155_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_155_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i45 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i46 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_157 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_157_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_157_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i43 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i44 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_159 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_159_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_159_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i41 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i42 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_161 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_161_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_161_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i39 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i40 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_163 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_163_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_163_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i37 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i38 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_165 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_165_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_165_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i35 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i36 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_167 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_167_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_167_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i33 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i34 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_169 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_169_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_169_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_171 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_171_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_171_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \spi/newFlattenedMCUout_i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_175 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40014 i37_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_176 ( input D0, C0, B0, A0, output F0 );

  lut40015 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_177 ( input D0, C0, B0, A0, output F0 );

  lut40016 i20_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40017 i41_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 i17_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40019 i42_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 i21_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 i6_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 i24_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_181 ( input D0, C0, B0, A0, output F0 );

  lut40021 i46_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40014 i40_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_183 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 \makeMusic/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \makeMusic/howLong/i31_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40025 \makeMusic/pitch/i1006_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40026 \makeMusic/pitch/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_187 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40027 \makeMusic/pitch/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \makeMusic/pitch/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40028 \makeMusic/pitch/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \makeMusic/pitch/i6_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x3FFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_189 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40030 \makeMusic/pitch/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \makeMusic/pitch/i767_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x7FDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_192 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40032 \makeMusic/pitch/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \makeMusic/pitch/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40034 \makeMusic/pitch/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \makeMusic/pitch/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_195 ( input D0, C0, B0, A0, output F0 );

  lut40018 \makeMusic/pitch/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_196 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40035 \makeMusic/pitch/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \makeMusic/pitch/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40037 \makeMusic/howLong/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40022 \makeMusic/howLong/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_198 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40038 \makeMusic/howLong/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40039 \makeMusic/howLong/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_199 ( input D1, C1, B1, A1, D0, C0, output F0, 
    F1 );
  wire   GNDI;

  lut40040 \makeMusic/howLong/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40031 \makeMusic/howLong/i761_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x7FBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_201 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40020 \makeMusic/howLong/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40018 \makeMusic/howLong/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40035 \makeMusic/howLong/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40015 \makeMusic/howLong/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_203 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40041 \makeMusic/howLong/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40042 \makeMusic/howLong/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xF6FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x3FF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40028 \makeMusic/howLong/i29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \makeMusic/howLong/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_207 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40032 i39_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_208 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40044 i11_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_209 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40032 i38_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_210 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40046 i18_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 i8_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_211 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40047 \makeMusic/i1_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \makeMusic/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x0050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_213 ( input D0, C0, B0, A0, output F0 );

  lut40049 \makeMusic/howLong/i773_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_214 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, 
    CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40050 \makeMusic/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \makeMusic/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20052 \makeMusic/state_FSM_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFBF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xF888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20052 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module makeMusic_howLong_SLICE_216 ( input D0, C0, B0, A0, output F0 );

  lut40018 \makeMusic/howLong/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_howLong_SLICE_218 ( input D0, C0, B0, A0, output F0 );

  lut40018 \makeMusic/howLong/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_220 ( input D0, C0, A0, output F0 );
  wire   GNDI;

  lut40053 \makeMusic/pitch/i11_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x5FFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_pitch_SLICE_221 ( input D0, C0, B0, A0, output F0 );

  lut40033 \makeMusic/pitch/i5_4_lut_adj_37 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_222 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40044 \makeMusic/pitch/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \makeMusic/pitch/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_223 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40054 i47_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_225 ( input DI1, D1, C1, B1, A1, C0, B0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40055 \makeMusic/i134_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \makeMusic/counter_1__I_0_i3_2_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/state_FSM_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x2F22") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xCFCF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_226 ( input DI1, D1, C1, B1, D0, C0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40057 SLICE_226_K1( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 i192_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 start_c( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_227 ( input DI1, D1, D0, C0, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40002 SLICE_227_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \spi/newFlattenedMCUout_i47 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module SLICE_228 ( input D0, C0, B0, A0, output F0 );

  lut40059 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_229 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \makeMusic/mux_21_i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_231 ( output F0 );
  wire   GNDI;

  lut40060 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_233 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40020 i14_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \makeMusic/mux_21_i8_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_234 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40061 \makeMusic/mux_21_i6_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \makeMusic/mux_21_i7_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_236 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40062 \makeMusic/mux_21_i4_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \makeMusic/mux_21_i5_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_238 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \makeMusic/mux_21_i2_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \makeMusic/mux_21_i3_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_240 ( input DI1, D1, C1, B1, D0, C0, B0, CE, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40008 \makeMusic/freq_9__I_0_i8_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \makeMusic/mux_20_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \makeMusic/freq_i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_241 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \makeMusic/mux_20_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \makeMusic/mux_20_i7_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_SLICE_243 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \makeMusic/mux_20_i4_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \makeMusic/mux_20_i5_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_SLICE_245 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40061 \makeMusic/mux_20_i2_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 \makeMusic/mux_20_i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_250 ( input D0, C0, B0, A0, output F0 );

  lut40049 \makeMusic/pitch/i771_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_SLICE_251 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40065 \makeMusic/pitch/i1003_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40066 \makeMusic/pitch/i1000_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \makeMusic/pitch/clkStrobe ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module makeMusic_howLong_SLICE_252 ( input D0, C0, B0, A0, output F0 );

  lut40018 \makeMusic/howLong/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_258 ( input D0, C0, B0, A0, output F0 );

  lut40015 i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_260 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 i22_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_263 ( input D0, C0, B0, A0, output F0 );

  lut40018 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_266 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40046 i16_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module makeMusic_pitch_mult_30 ( input A0, B15, B13, B12, B10, B9, B8, B4, B3, 
    B1, B0, output O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, O4, 
    O3, O2, O1, O0 );
  wire   GNDI;

  MAC16_B \makeMusic/pitch/mult_30 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), 
    .A6(GNDI), .A5(GNDI), .A4(GNDI), .A3(GNDI), .A2(GNDI), .A1(GNDI), .A0(A0), 
    .B15(B15), .B14(GNDI), .B13(B13), .B12(B12), .B11(GNDI), .B10(B10), 
    .B9(B9), .B8(B8), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(B4), .B3(B3), 
    .B2(GNDI), .B1(B1), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), 
    .D12(GNDI), .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), 
    .D6(GNDI), .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), 
    .D0(GNDI), .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), 
    .IRSTTOP(GNDI), .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), 
    .OLOADTOP(GNDI), .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), 
    .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), 
    .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), 
    .O24(), .O23(), .O22(), .O21(), .O20(), .O19(), .O18(), .O17(), .O16(O16), 
    .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), .O10(O10), .O9(O9), 
    .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), .O2(O2), .O1(O1), 
    .O0(O0), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => O16) = (0:0:0,0:0:0);
    (A0 => O15) = (0:0:0,0:0:0);
    (A0 => O14) = (0:0:0,0:0:0);
    (A0 => O13) = (0:0:0,0:0:0);
    (A0 => O12) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (A0 => O1) = (0:0:0,0:0:0);
    (A0 => O0) = (0:0:0,0:0:0);
    (B15 => O16) = (0:0:0,0:0:0);
    (B15 => O15) = (0:0:0,0:0:0);
    (B13 => O16) = (0:0:0,0:0:0);
    (B13 => O15) = (0:0:0,0:0:0);
    (B13 => O14) = (0:0:0,0:0:0);
    (B13 => O13) = (0:0:0,0:0:0);
    (B12 => O16) = (0:0:0,0:0:0);
    (B12 => O15) = (0:0:0,0:0:0);
    (B12 => O14) = (0:0:0,0:0:0);
    (B12 => O13) = (0:0:0,0:0:0);
    (B12 => O12) = (0:0:0,0:0:0);
    (B10 => O16) = (0:0:0,0:0:0);
    (B10 => O15) = (0:0:0,0:0:0);
    (B10 => O14) = (0:0:0,0:0:0);
    (B10 => O13) = (0:0:0,0:0:0);
    (B10 => O12) = (0:0:0,0:0:0);
    (B10 => O11) = (0:0:0,0:0:0);
    (B10 => O10) = (0:0:0,0:0:0);
    (B9 => O16) = (0:0:0,0:0:0);
    (B9 => O15) = (0:0:0,0:0:0);
    (B9 => O14) = (0:0:0,0:0:0);
    (B9 => O13) = (0:0:0,0:0:0);
    (B9 => O12) = (0:0:0,0:0:0);
    (B9 => O11) = (0:0:0,0:0:0);
    (B9 => O10) = (0:0:0,0:0:0);
    (B9 => O9) = (0:0:0,0:0:0);
    (B8 => O16) = (0:0:0,0:0:0);
    (B8 => O15) = (0:0:0,0:0:0);
    (B8 => O14) = (0:0:0,0:0:0);
    (B8 => O13) = (0:0:0,0:0:0);
    (B8 => O12) = (0:0:0,0:0:0);
    (B8 => O11) = (0:0:0,0:0:0);
    (B8 => O10) = (0:0:0,0:0:0);
    (B8 => O9) = (0:0:0,0:0:0);
    (B8 => O8) = (0:0:0,0:0:0);
    (B4 => O16) = (0:0:0,0:0:0);
    (B4 => O15) = (0:0:0,0:0:0);
    (B4 => O14) = (0:0:0,0:0:0);
    (B4 => O13) = (0:0:0,0:0:0);
    (B4 => O12) = (0:0:0,0:0:0);
    (B4 => O11) = (0:0:0,0:0:0);
    (B4 => O10) = (0:0:0,0:0:0);
    (B4 => O9) = (0:0:0,0:0:0);
    (B4 => O8) = (0:0:0,0:0:0);
    (B4 => O7) = (0:0:0,0:0:0);
    (B4 => O6) = (0:0:0,0:0:0);
    (B4 => O5) = (0:0:0,0:0:0);
    (B4 => O4) = (0:0:0,0:0:0);
    (B3 => O16) = (0:0:0,0:0:0);
    (B3 => O15) = (0:0:0,0:0:0);
    (B3 => O14) = (0:0:0,0:0:0);
    (B3 => O13) = (0:0:0,0:0:0);
    (B3 => O12) = (0:0:0,0:0:0);
    (B3 => O11) = (0:0:0,0:0:0);
    (B3 => O10) = (0:0:0,0:0:0);
    (B3 => O9) = (0:0:0,0:0:0);
    (B3 => O8) = (0:0:0,0:0:0);
    (B3 => O7) = (0:0:0,0:0:0);
    (B3 => O6) = (0:0:0,0:0:0);
    (B3 => O5) = (0:0:0,0:0:0);
    (B3 => O4) = (0:0:0,0:0:0);
    (B3 => O3) = (0:0:0,0:0:0);
    (B1 => O16) = (0:0:0,0:0:0);
    (B1 => O15) = (0:0:0,0:0:0);
    (B1 => O14) = (0:0:0,0:0:0);
    (B1 => O13) = (0:0:0,0:0:0);
    (B1 => O12) = (0:0:0,0:0:0);
    (B1 => O11) = (0:0:0,0:0:0);
    (B1 => O10) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B1 => O8) = (0:0:0,0:0:0);
    (B1 => O7) = (0:0:0,0:0:0);
    (B1 => O6) = (0:0:0,0:0:0);
    (B1 => O5) = (0:0:0,0:0:0);
    (B1 => O4) = (0:0:0,0:0:0);
    (B1 => O3) = (0:0:0,0:0:0);
    (B1 => O2) = (0:0:0,0:0:0);
    (B1 => O1) = (0:0:0,0:0:0);
    (B0 => O16) = (0:0:0,0:0:0);
    (B0 => O15) = (0:0:0,0:0:0);
    (B0 => O14) = (0:0:0,0:0:0);
    (B0 => O13) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
    (B0 => O1) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b11";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b11";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b0";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module makeMusic_howLong_mult_31 ( input A7, A6, A5, A4, A3, A2, A1, A0, B15, 
    B13, B12, B10, B9, B8, B4, B3, B1, B0, output O22, O21, O20, O19, O18, O17, 
    O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, O4, O3, O2, O1, O0 );
  wire   GNDI;

  MAC16_B \makeMusic/howLong/mult_31 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), 
    .C14(GNDI), .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), 
    .C8(GNDI), .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), 
    .C2(GNDI), .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), 
    .A12(GNDI), .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), 
    .B14(GNDI), .B13(B13), .B12(B12), .B11(GNDI), .B10(B10), .B9(B9), .B8(B8), 
    .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(B4), .B3(B3), .B2(GNDI), .B1(B1), 
    .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), .D11(GNDI), 
    .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), .D5(GNDI), 
    .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), .AHOLD(GNDI), 
    .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), .IRSTBOT(GNDI), 
    .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), .OLOADBOT(GNDI), 
    .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), .OHOLDBOT(GNDI), 
    .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), .O30(), .O29(), 
    .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(O22), .O21(O21), 
    .O20(O20), .O19(O19), .O18(O18), .O17(O17), .O16(O16), .O15(O15), 
    .O14(O14), .O13(O13), .O12(O12), .O11(O11), .O10(O10), .O9(O9), .O8(O8), 
    .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), .O2(O2), .O1(O1), .O0(O0), 
    .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A7 => O22) = (0:0:0,0:0:0);
    (A7 => O21) = (0:0:0,0:0:0);
    (A7 => O20) = (0:0:0,0:0:0);
    (A7 => O19) = (0:0:0,0:0:0);
    (A7 => O18) = (0:0:0,0:0:0);
    (A7 => O17) = (0:0:0,0:0:0);
    (A7 => O16) = (0:0:0,0:0:0);
    (A7 => O15) = (0:0:0,0:0:0);
    (A7 => O14) = (0:0:0,0:0:0);
    (A7 => O13) = (0:0:0,0:0:0);
    (A7 => O12) = (0:0:0,0:0:0);
    (A7 => O11) = (0:0:0,0:0:0);
    (A7 => O10) = (0:0:0,0:0:0);
    (A7 => O9) = (0:0:0,0:0:0);
    (A7 => O8) = (0:0:0,0:0:0);
    (A7 => O7) = (0:0:0,0:0:0);
    (A6 => O22) = (0:0:0,0:0:0);
    (A6 => O21) = (0:0:0,0:0:0);
    (A6 => O20) = (0:0:0,0:0:0);
    (A6 => O19) = (0:0:0,0:0:0);
    (A6 => O18) = (0:0:0,0:0:0);
    (A6 => O17) = (0:0:0,0:0:0);
    (A6 => O16) = (0:0:0,0:0:0);
    (A6 => O15) = (0:0:0,0:0:0);
    (A6 => O14) = (0:0:0,0:0:0);
    (A6 => O13) = (0:0:0,0:0:0);
    (A6 => O12) = (0:0:0,0:0:0);
    (A6 => O11) = (0:0:0,0:0:0);
    (A6 => O10) = (0:0:0,0:0:0);
    (A6 => O9) = (0:0:0,0:0:0);
    (A6 => O8) = (0:0:0,0:0:0);
    (A6 => O7) = (0:0:0,0:0:0);
    (A6 => O6) = (0:0:0,0:0:0);
    (A5 => O22) = (0:0:0,0:0:0);
    (A5 => O21) = (0:0:0,0:0:0);
    (A5 => O20) = (0:0:0,0:0:0);
    (A5 => O19) = (0:0:0,0:0:0);
    (A5 => O18) = (0:0:0,0:0:0);
    (A5 => O17) = (0:0:0,0:0:0);
    (A5 => O16) = (0:0:0,0:0:0);
    (A5 => O15) = (0:0:0,0:0:0);
    (A5 => O14) = (0:0:0,0:0:0);
    (A5 => O13) = (0:0:0,0:0:0);
    (A5 => O12) = (0:0:0,0:0:0);
    (A5 => O11) = (0:0:0,0:0:0);
    (A5 => O10) = (0:0:0,0:0:0);
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A5 => O6) = (0:0:0,0:0:0);
    (A5 => O5) = (0:0:0,0:0:0);
    (A4 => O22) = (0:0:0,0:0:0);
    (A4 => O21) = (0:0:0,0:0:0);
    (A4 => O20) = (0:0:0,0:0:0);
    (A4 => O19) = (0:0:0,0:0:0);
    (A4 => O18) = (0:0:0,0:0:0);
    (A4 => O17) = (0:0:0,0:0:0);
    (A4 => O16) = (0:0:0,0:0:0);
    (A4 => O15) = (0:0:0,0:0:0);
    (A4 => O14) = (0:0:0,0:0:0);
    (A4 => O13) = (0:0:0,0:0:0);
    (A4 => O12) = (0:0:0,0:0:0);
    (A4 => O11) = (0:0:0,0:0:0);
    (A4 => O10) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A4 => O6) = (0:0:0,0:0:0);
    (A4 => O5) = (0:0:0,0:0:0);
    (A4 => O4) = (0:0:0,0:0:0);
    (A3 => O22) = (0:0:0,0:0:0);
    (A3 => O21) = (0:0:0,0:0:0);
    (A3 => O20) = (0:0:0,0:0:0);
    (A3 => O19) = (0:0:0,0:0:0);
    (A3 => O18) = (0:0:0,0:0:0);
    (A3 => O17) = (0:0:0,0:0:0);
    (A3 => O16) = (0:0:0,0:0:0);
    (A3 => O15) = (0:0:0,0:0:0);
    (A3 => O14) = (0:0:0,0:0:0);
    (A3 => O13) = (0:0:0,0:0:0);
    (A3 => O12) = (0:0:0,0:0:0);
    (A3 => O11) = (0:0:0,0:0:0);
    (A3 => O10) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A3 => O6) = (0:0:0,0:0:0);
    (A3 => O5) = (0:0:0,0:0:0);
    (A3 => O4) = (0:0:0,0:0:0);
    (A3 => O3) = (0:0:0,0:0:0);
    (A2 => O22) = (0:0:0,0:0:0);
    (A2 => O21) = (0:0:0,0:0:0);
    (A2 => O20) = (0:0:0,0:0:0);
    (A2 => O19) = (0:0:0,0:0:0);
    (A2 => O18) = (0:0:0,0:0:0);
    (A2 => O17) = (0:0:0,0:0:0);
    (A2 => O16) = (0:0:0,0:0:0);
    (A2 => O15) = (0:0:0,0:0:0);
    (A2 => O14) = (0:0:0,0:0:0);
    (A2 => O13) = (0:0:0,0:0:0);
    (A2 => O12) = (0:0:0,0:0:0);
    (A2 => O11) = (0:0:0,0:0:0);
    (A2 => O10) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A2 => O6) = (0:0:0,0:0:0);
    (A2 => O5) = (0:0:0,0:0:0);
    (A2 => O4) = (0:0:0,0:0:0);
    (A2 => O3) = (0:0:0,0:0:0);
    (A2 => O2) = (0:0:0,0:0:0);
    (A1 => O22) = (0:0:0,0:0:0);
    (A1 => O21) = (0:0:0,0:0:0);
    (A1 => O20) = (0:0:0,0:0:0);
    (A1 => O19) = (0:0:0,0:0:0);
    (A1 => O18) = (0:0:0,0:0:0);
    (A1 => O17) = (0:0:0,0:0:0);
    (A1 => O16) = (0:0:0,0:0:0);
    (A1 => O15) = (0:0:0,0:0:0);
    (A1 => O14) = (0:0:0,0:0:0);
    (A1 => O13) = (0:0:0,0:0:0);
    (A1 => O12) = (0:0:0,0:0:0);
    (A1 => O11) = (0:0:0,0:0:0);
    (A1 => O10) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A1 => O6) = (0:0:0,0:0:0);
    (A1 => O5) = (0:0:0,0:0:0);
    (A1 => O4) = (0:0:0,0:0:0);
    (A1 => O3) = (0:0:0,0:0:0);
    (A1 => O2) = (0:0:0,0:0:0);
    (A1 => O1) = (0:0:0,0:0:0);
    (A0 => O22) = (0:0:0,0:0:0);
    (A0 => O21) = (0:0:0,0:0:0);
    (A0 => O20) = (0:0:0,0:0:0);
    (A0 => O19) = (0:0:0,0:0:0);
    (A0 => O18) = (0:0:0,0:0:0);
    (A0 => O17) = (0:0:0,0:0:0);
    (A0 => O16) = (0:0:0,0:0:0);
    (A0 => O15) = (0:0:0,0:0:0);
    (A0 => O14) = (0:0:0,0:0:0);
    (A0 => O13) = (0:0:0,0:0:0);
    (A0 => O12) = (0:0:0,0:0:0);
    (A0 => O11) = (0:0:0,0:0:0);
    (A0 => O10) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (A0 => O6) = (0:0:0,0:0:0);
    (A0 => O5) = (0:0:0,0:0:0);
    (A0 => O4) = (0:0:0,0:0:0);
    (A0 => O3) = (0:0:0,0:0:0);
    (A0 => O2) = (0:0:0,0:0:0);
    (A0 => O1) = (0:0:0,0:0:0);
    (A0 => O0) = (0:0:0,0:0:0);
    (B15 => O22) = (0:0:0,0:0:0);
    (B15 => O21) = (0:0:0,0:0:0);
    (B15 => O20) = (0:0:0,0:0:0);
    (B15 => O19) = (0:0:0,0:0:0);
    (B15 => O18) = (0:0:0,0:0:0);
    (B15 => O17) = (0:0:0,0:0:0);
    (B15 => O16) = (0:0:0,0:0:0);
    (B15 => O15) = (0:0:0,0:0:0);
    (B13 => O22) = (0:0:0,0:0:0);
    (B13 => O21) = (0:0:0,0:0:0);
    (B13 => O20) = (0:0:0,0:0:0);
    (B13 => O19) = (0:0:0,0:0:0);
    (B13 => O18) = (0:0:0,0:0:0);
    (B13 => O17) = (0:0:0,0:0:0);
    (B13 => O16) = (0:0:0,0:0:0);
    (B13 => O15) = (0:0:0,0:0:0);
    (B13 => O14) = (0:0:0,0:0:0);
    (B13 => O13) = (0:0:0,0:0:0);
    (B12 => O22) = (0:0:0,0:0:0);
    (B12 => O21) = (0:0:0,0:0:0);
    (B12 => O20) = (0:0:0,0:0:0);
    (B12 => O19) = (0:0:0,0:0:0);
    (B12 => O18) = (0:0:0,0:0:0);
    (B12 => O17) = (0:0:0,0:0:0);
    (B12 => O16) = (0:0:0,0:0:0);
    (B12 => O15) = (0:0:0,0:0:0);
    (B12 => O14) = (0:0:0,0:0:0);
    (B12 => O13) = (0:0:0,0:0:0);
    (B12 => O12) = (0:0:0,0:0:0);
    (B10 => O22) = (0:0:0,0:0:0);
    (B10 => O21) = (0:0:0,0:0:0);
    (B10 => O20) = (0:0:0,0:0:0);
    (B10 => O19) = (0:0:0,0:0:0);
    (B10 => O18) = (0:0:0,0:0:0);
    (B10 => O17) = (0:0:0,0:0:0);
    (B10 => O16) = (0:0:0,0:0:0);
    (B10 => O15) = (0:0:0,0:0:0);
    (B10 => O14) = (0:0:0,0:0:0);
    (B10 => O13) = (0:0:0,0:0:0);
    (B10 => O12) = (0:0:0,0:0:0);
    (B10 => O11) = (0:0:0,0:0:0);
    (B10 => O10) = (0:0:0,0:0:0);
    (B9 => O22) = (0:0:0,0:0:0);
    (B9 => O21) = (0:0:0,0:0:0);
    (B9 => O20) = (0:0:0,0:0:0);
    (B9 => O19) = (0:0:0,0:0:0);
    (B9 => O18) = (0:0:0,0:0:0);
    (B9 => O17) = (0:0:0,0:0:0);
    (B9 => O16) = (0:0:0,0:0:0);
    (B9 => O15) = (0:0:0,0:0:0);
    (B9 => O14) = (0:0:0,0:0:0);
    (B9 => O13) = (0:0:0,0:0:0);
    (B9 => O12) = (0:0:0,0:0:0);
    (B9 => O11) = (0:0:0,0:0:0);
    (B9 => O10) = (0:0:0,0:0:0);
    (B9 => O9) = (0:0:0,0:0:0);
    (B8 => O22) = (0:0:0,0:0:0);
    (B8 => O21) = (0:0:0,0:0:0);
    (B8 => O20) = (0:0:0,0:0:0);
    (B8 => O19) = (0:0:0,0:0:0);
    (B8 => O18) = (0:0:0,0:0:0);
    (B8 => O17) = (0:0:0,0:0:0);
    (B8 => O16) = (0:0:0,0:0:0);
    (B8 => O15) = (0:0:0,0:0:0);
    (B8 => O14) = (0:0:0,0:0:0);
    (B8 => O13) = (0:0:0,0:0:0);
    (B8 => O12) = (0:0:0,0:0:0);
    (B8 => O11) = (0:0:0,0:0:0);
    (B8 => O10) = (0:0:0,0:0:0);
    (B8 => O9) = (0:0:0,0:0:0);
    (B8 => O8) = (0:0:0,0:0:0);
    (B4 => O22) = (0:0:0,0:0:0);
    (B4 => O21) = (0:0:0,0:0:0);
    (B4 => O20) = (0:0:0,0:0:0);
    (B4 => O19) = (0:0:0,0:0:0);
    (B4 => O18) = (0:0:0,0:0:0);
    (B4 => O17) = (0:0:0,0:0:0);
    (B4 => O16) = (0:0:0,0:0:0);
    (B4 => O15) = (0:0:0,0:0:0);
    (B4 => O14) = (0:0:0,0:0:0);
    (B4 => O13) = (0:0:0,0:0:0);
    (B4 => O12) = (0:0:0,0:0:0);
    (B4 => O11) = (0:0:0,0:0:0);
    (B4 => O10) = (0:0:0,0:0:0);
    (B4 => O9) = (0:0:0,0:0:0);
    (B4 => O8) = (0:0:0,0:0:0);
    (B4 => O7) = (0:0:0,0:0:0);
    (B4 => O6) = (0:0:0,0:0:0);
    (B4 => O5) = (0:0:0,0:0:0);
    (B4 => O4) = (0:0:0,0:0:0);
    (B3 => O22) = (0:0:0,0:0:0);
    (B3 => O21) = (0:0:0,0:0:0);
    (B3 => O20) = (0:0:0,0:0:0);
    (B3 => O19) = (0:0:0,0:0:0);
    (B3 => O18) = (0:0:0,0:0:0);
    (B3 => O17) = (0:0:0,0:0:0);
    (B3 => O16) = (0:0:0,0:0:0);
    (B3 => O15) = (0:0:0,0:0:0);
    (B3 => O14) = (0:0:0,0:0:0);
    (B3 => O13) = (0:0:0,0:0:0);
    (B3 => O12) = (0:0:0,0:0:0);
    (B3 => O11) = (0:0:0,0:0:0);
    (B3 => O10) = (0:0:0,0:0:0);
    (B3 => O9) = (0:0:0,0:0:0);
    (B3 => O8) = (0:0:0,0:0:0);
    (B3 => O7) = (0:0:0,0:0:0);
    (B3 => O6) = (0:0:0,0:0:0);
    (B3 => O5) = (0:0:0,0:0:0);
    (B3 => O4) = (0:0:0,0:0:0);
    (B3 => O3) = (0:0:0,0:0:0);
    (B1 => O22) = (0:0:0,0:0:0);
    (B1 => O21) = (0:0:0,0:0:0);
    (B1 => O20) = (0:0:0,0:0:0);
    (B1 => O19) = (0:0:0,0:0:0);
    (B1 => O18) = (0:0:0,0:0:0);
    (B1 => O17) = (0:0:0,0:0:0);
    (B1 => O16) = (0:0:0,0:0:0);
    (B1 => O15) = (0:0:0,0:0:0);
    (B1 => O14) = (0:0:0,0:0:0);
    (B1 => O13) = (0:0:0,0:0:0);
    (B1 => O12) = (0:0:0,0:0:0);
    (B1 => O11) = (0:0:0,0:0:0);
    (B1 => O10) = (0:0:0,0:0:0);
    (B1 => O9) = (0:0:0,0:0:0);
    (B1 => O8) = (0:0:0,0:0:0);
    (B1 => O7) = (0:0:0,0:0:0);
    (B1 => O6) = (0:0:0,0:0:0);
    (B1 => O5) = (0:0:0,0:0:0);
    (B1 => O4) = (0:0:0,0:0:0);
    (B1 => O3) = (0:0:0,0:0:0);
    (B1 => O2) = (0:0:0,0:0:0);
    (B1 => O1) = (0:0:0,0:0:0);
    (B0 => O22) = (0:0:0,0:0:0);
    (B0 => O21) = (0:0:0,0:0:0);
    (B0 => O20) = (0:0:0,0:0:0);
    (B0 => O19) = (0:0:0,0:0:0);
    (B0 => O18) = (0:0:0,0:0:0);
    (B0 => O17) = (0:0:0,0:0:0);
    (B0 => O16) = (0:0:0,0:0:0);
    (B0 => O15) = (0:0:0,0:0:0);
    (B0 => O14) = (0:0:0,0:0:0);
    (B0 => O13) = (0:0:0,0:0:0);
    (B0 => O12) = (0:0:0,0:0:0);
    (B0 => O11) = (0:0:0,0:0:0);
    (B0 => O10) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
    (B0 => O6) = (0:0:0,0:0:0);
    (B0 => O5) = (0:0:0,0:0:0);
    (B0 => O4) = (0:0:0,0:0:0);
    (B0 => O3) = (0:0:0,0:0:0);
    (B0 => O2) = (0:0:0,0:0:0);
    (B0 => O1) = (0:0:0,0:0:0);
    (B0 => O0) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi_newFlattenedMCUout_i0 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \spi/newFlattenedMCUout_i0 ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module hf_osc ( input CLKHFPU, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hf_osc( .CLKHFPU(CLKHFPU), .CLKHFEN(GNDI), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b01";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module sdi ( output PADDI, input sdi );
  wire   GNDI;

  BB_B_B \sdi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sdi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module sck ( output PADDI, input sck );
  wire   GNDI;

  BB_B_B \sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module pwm ( input PADDO, output pwm );
  wire   VCCI;

  BB_B_B \pwm_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pwm));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pwm) = (0:0:0,0:0:0);
  endspecify

endmodule
